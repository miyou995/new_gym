[{"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\index.js":"1","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\App.js":"3","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\index.js":"4","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\Footer.js":"5","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\utils\\PrivateRoute.js":"6","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\ForgotPassword.js":"7","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Login.js":"8","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Registration.js":"9","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error403.js":"10","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error503.js":"11","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error400.js":"12","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error404.js":"13","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\LockScreen.js":"14","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error500.js":"15","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\salle\\Salle.js":"16","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\Clients.js":"17","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelCreate.js":"18","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientEdit.js":"19","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelEdit.js":"20","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\Dashboard\\Home.js":"21","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachEdit.js":"22","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachCreate.js":"23","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelList.js":"24","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\UpdateModal.js":"25","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachList.js":"26","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\context\\AuthContext.jsx":"27","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelDetail.jsx":"28","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachDetail.jsx":"29","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientCreate.jsx":"30","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\abonnement\\AbonnementCreate.jsx":"31","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\history\\HistoryTrans.jsx":"32","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\planning\\Calendar.jsx":"33","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\history\\HistoryPresence.jsx":"34","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\history\\HistoryAbc.jsx":"35","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\Configuration.jsx":"36","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\abonnement\\AbonnementList.jsx":"37","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\abonnement\\AbonnementEdit.jsx":"38","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientList.jsx":"39","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientDetail.jsx":"40","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\UserList.jsx":"41","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\presence\\PresenceList.jsx":"42","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\TransactionsList.jsx":"43","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\tresorie\\Tresorie.jsx":"44","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\index.js":"45","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\useAxios.js":"46","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\Pagination.js":"47","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\salle\\SalleCreate.js":"48","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\PageTitle.js":"49","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\Search.js":"50","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\ShortCuts.js":"51","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\Alert.jsx":"52","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\Users.js":"53","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ComponentToPrint.js":"54","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PaiementModal.jsx":"55","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\PaiementModal.jsx":"56","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\AbonnementClientModal.jsx":"57","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\AssuranceCreateModal.jsx":"58","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PaiementsClientModal.jsx":"59","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PresencesClientModal.jsx":"60","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\RenewAbonnementModal.jsx":"61","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PaiementEditModal.jsx":"62","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ABCDetailModal.jsx":"63","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\UserModal.jsx":"64","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\AutreCreateModal.jsx":"65","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\RemunerationCoachModal.jsx":"66","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\RemunerationPersonnelModal.jsx":"67","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\PaiementCreateModal.jsx":"68","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\presence\\PresenceCreateModal.jsx":"69","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\presence\\PresenceEditModal.jsx":"70","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ABCCreateModal.jsx":"71","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PaiementModal.jsx":"72","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\DoorModal.jsx":"73","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\MaladieEditModal.jsx":"74","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\MaladieCreateModal.jsx":"75","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\AbonnementListModal.jsx":"76","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\PlanningEditModal.jsx":"77","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\Header.js":"78","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\NavHader.js":"79","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\ActivityCreateModal.jsx":"80","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\PlanningCreateModal.jsx":"81","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\ActivityEditModal.jsx":"82","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\SalleActiviteCreateModal.jsx":"83","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\SalleActiviteEditModal.jsx":"84","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\AbonnementCreateModal.jsx":"85","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\AbonnementEditModal.jsx":"86","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\SideBar.js":"87","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\planning\\CreneauCreateModal.jsx":"88","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\planning\\CreneauEditModal.jsx":"89","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\useAaxios.js":"90","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\SbNavLinks.js":"91"},{"size":279,"mtime":1663072860932,"results":"92","hashOfConfig":"93"},{"size":375,"mtime":1642438002438,"results":"94","hashOfConfig":"93"},{"size":1524,"mtime":1642437999950,"results":"95","hashOfConfig":"93"},{"size":9167,"mtime":1662457291408,"results":"96","hashOfConfig":"93"},{"size":457,"mtime":1642438002406,"results":"97","hashOfConfig":"93"},{"size":353,"mtime":1652342697464,"results":"98","hashOfConfig":"93"},{"size":2047,"mtime":1652353485695,"results":"99","hashOfConfig":"93"},{"size":4330,"mtime":1652352400835,"results":"100","hashOfConfig":"93"},{"size":4412,"mtime":1652358458890,"results":"101","hashOfConfig":"93"},{"size":1082,"mtime":1642438002417,"results":"102","hashOfConfig":"93"},{"size":1080,"mtime":1652353488832,"results":"103","hashOfConfig":"93"},{"size":1072,"mtime":1642438002416,"results":"104","hashOfConfig":"93"},{"size":1203,"mtime":1642438002418,"results":"105","hashOfConfig":"93"},{"size":2194,"mtime":1652353483210,"results":"106","hashOfConfig":"93"},{"size":1084,"mtime":1642438002419,"results":"107","hashOfConfig":"93"},{"size":1022,"mtime":1649577349712,"results":"108","hashOfConfig":"93"},{"size":1081,"mtime":1642438002294,"results":"109","hashOfConfig":"93"},{"size":6858,"mtime":1652357976421,"results":"110","hashOfConfig":"93"},{"size":14065,"mtime":1660231982070,"results":"111","hashOfConfig":"93"},{"size":9548,"mtime":1652357890580,"results":"112","hashOfConfig":"93"},{"size":18144,"mtime":1661972932613,"results":"113","hashOfConfig":"93"},{"size":8105,"mtime":1652358373871,"results":"114","hashOfConfig":"93"},{"size":8415,"mtime":1658853224305,"results":"115","hashOfConfig":"93"},{"size":5899,"mtime":1663072860939,"results":"116","hashOfConfig":"93"},{"size":12576,"mtime":1663072860945,"results":"117","hashOfConfig":"93"},{"size":6004,"mtime":1663072860938,"results":"118","hashOfConfig":"93"},{"size":2892,"mtime":1660135707300,"results":"119","hashOfConfig":"93"},{"size":8672,"mtime":1652357950638,"results":"120","hashOfConfig":"93"},{"size":19167,"mtime":1652358387246,"results":"121","hashOfConfig":"93"},{"size":14115,"mtime":1658412595636,"results":"122","hashOfConfig":"93"},{"size":5812,"mtime":1658854081961,"results":"123","hashOfConfig":"93"},{"size":12646,"mtime":1652612161569,"results":"124","hashOfConfig":"93"},{"size":18541,"mtime":1652521703229,"results":"125","hashOfConfig":"93"},{"size":12133,"mtime":1652358025339,"results":"126","hashOfConfig":"93"},{"size":12537,"mtime":1652358047323,"results":"127","hashOfConfig":"93"},{"size":27960,"mtime":1660135707295,"results":"128","hashOfConfig":"93"},{"size":5213,"mtime":1652358480069,"results":"129","hashOfConfig":"93"},{"size":7724,"mtime":1652353843858,"results":"130","hashOfConfig":"93"},{"size":9088,"mtime":1663072860936,"results":"131","hashOfConfig":"93"},{"size":24565,"mtime":1663072860935,"results":"132","hashOfConfig":"93"},{"size":6164,"mtime":1663072860946,"results":"133","hashOfConfig":"93"},{"size":17688,"mtime":1663072860941,"results":"134","hashOfConfig":"93"},{"size":13431,"mtime":1663072860942,"results":"135","hashOfConfig":"93"},{"size":6098,"mtime":1663072860943,"results":"136","hashOfConfig":"93"},{"size":2375,"mtime":1663072860950,"results":"137","hashOfConfig":"93"},{"size":1127,"mtime":1660135707297,"results":"138","hashOfConfig":"93"},{"size":1060,"mtime":1662457291400,"results":"139","hashOfConfig":"93"},{"size":2287,"mtime":1652354004796,"results":"140","hashOfConfig":"93"},{"size":585,"mtime":1642438002406,"results":"141","hashOfConfig":"93"},{"size":825,"mtime":1649061252889,"results":"142","hashOfConfig":"93"},{"size":6362,"mtime":1663233077603,"results":"143","hashOfConfig":"93"},{"size":572,"mtime":1649327822135,"results":"144","hashOfConfig":"93"},{"size":2520,"mtime":1662457291407,"results":"145","hashOfConfig":"93"},{"size":14543,"mtime":1663072860936,"results":"146","hashOfConfig":"93"},{"size":2788,"mtime":1652357986505,"results":"147","hashOfConfig":"93"},{"size":2791,"mtime":1652358284840,"results":"148","hashOfConfig":"93"},{"size":4121,"mtime":1652352713086,"results":"149","hashOfConfig":"93"},{"size":5330,"mtime":1652354172303,"results":"150","hashOfConfig":"93"},{"size":2698,"mtime":1652352682399,"results":"151","hashOfConfig":"93"},{"size":4915,"mtime":1652358402808,"results":"152","hashOfConfig":"93"},{"size":19140,"mtime":1663083776766,"results":"153","hashOfConfig":"93"},{"size":5695,"mtime":1652519637202,"results":"154","hashOfConfig":"93"},{"size":24806,"mtime":1652353190210,"results":"155","hashOfConfig":"93"},{"size":8003,"mtime":1662457291405,"results":"156","hashOfConfig":"93"},{"size":4845,"mtime":1652353902628,"results":"157","hashOfConfig":"93"},{"size":5910,"mtime":1652353728895,"results":"158","hashOfConfig":"93"},{"size":4653,"mtime":1652353684978,"results":"159","hashOfConfig":"93"},{"size":5785,"mtime":1652353772606,"results":"160","hashOfConfig":"93"},{"size":25154,"mtime":1652354043444,"results":"161","hashOfConfig":"93"},{"size":5082,"mtime":1652354032582,"results":"162","hashOfConfig":"93"},{"size":26381,"mtime":1658853491662,"results":"163","hashOfConfig":"93"},{"size":5891,"mtime":1652352730128,"results":"164","hashOfConfig":"93"},{"size":4587,"mtime":1659864666287,"results":"165","hashOfConfig":"93"},{"size":3133,"mtime":1652358159370,"results":"166","hashOfConfig":"93"},{"size":2030,"mtime":1658740079033,"results":"167","hashOfConfig":"93"},{"size":4721,"mtime":1652358240123,"results":"168","hashOfConfig":"93"},{"size":3885,"mtime":1652358141329,"results":"169","hashOfConfig":"93"},{"size":4356,"mtime":1663072860948,"results":"170","hashOfConfig":"93"},{"size":868,"mtime":1642438002412,"results":"171","hashOfConfig":"93"},{"size":4721,"mtime":1652358231192,"results":"172","hashOfConfig":"93"},{"size":3460,"mtime":1652358150262,"results":"173","hashOfConfig":"93"},{"size":4698,"mtime":1661957012803,"results":"174","hashOfConfig":"93"},{"size":4656,"mtime":1658744939112,"results":"175","hashOfConfig":"93"},{"size":5405,"mtime":1658754710915,"results":"176","hashOfConfig":"93"},{"size":9671,"mtime":1652358277698,"results":"177","hashOfConfig":"93"},{"size":11359,"mtime":1660568868417,"results":"178","hashOfConfig":"93"},{"size":13142,"mtime":1663232796164,"results":"179","hashOfConfig":"93"},{"size":10275,"mtime":1652354063415,"results":"180","hashOfConfig":"93"},{"size":21390,"mtime":1652354055511,"results":"181","hashOfConfig":"93"},{"size":3355,"mtime":1663145127974,"results":"182","hashOfConfig":"93"},{"size":583,"mtime":1663072860949,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"14tinof",{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"186"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"196","usedDeprecatedRules":"186"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"186"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"186"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"186"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"186"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"186"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"186"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"186"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"186"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"186"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"186"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"186"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"186"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"186"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"186"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"186"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"186"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"186"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"186"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"186"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"186"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"186"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"186"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"186"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"186"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"186"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"186"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"186"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"186"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"186"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"186"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"186"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"186"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"186"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"186"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"186"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"186"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"186"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"186"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"186"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"186"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"186"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"186"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"186"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"186"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"186"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"186"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"186"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"186"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"186"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"186"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"186"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"186"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"186"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"186"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"186"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"186"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"186"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"186"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"186"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"186"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"186"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"186"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"186"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"186"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"186"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"186"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"186"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"186"},"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\index.js",[],["437","438"],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\App.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\index.js",["439","440"],"import React, { useState } from \"react\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\n/// React router dom\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n/// Css\r\nimport \"./index.css\";\r\nimport \"./chart.css\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\n\r\n\r\n/// Layout\r\nimport Nav from \"./layouts/nav\";\r\nimport Footer from \"./layouts/Footer\";\r\n\r\n/// App\r\n\r\n\r\nimport ClientList from \"./components/clients/ClientList\";\r\nimport UserList from \"./components/users/UserList\";\r\nimport EditClient from \"./components/clients/ClientEdit\";\r\nimport ClientDetail from \"./components/clients/ClientDetail\";\r\nimport ClientCreate from \"./components/clients/ClientCreate\";\r\nimport Clients from \"./components/clients/Clients\";\r\nimport PresenceList from \"./components/presence/PresenceList\";\r\nimport HistoryList from \"./components/history/HistoryAbc\"\r\nimport HistoryTrans from \"./components/history/HistoryTrans\"\r\nimport HistoryPresence from \"./components/history/HistoryPresence\"\r\n// import PresenceDetail from \"./components/presence/PresenceDetail\";\r\n// import PresenceEdit from \"./components/presence/PresenceEdit\";\r\n\r\n// import SalleCreate from \"./components/salle/SalleCreate\";\r\nimport Salle from \"./components/salle/Salle\";\r\n// import PlanningList from \"./components/planning/PlanningList\";\r\n// import PlaningCreate from \"./components/planning/PlanningCreate\";\r\n// import PlaningEdit from \"./components/planning/PlanningEdit\";\r\nimport Calendar from \"./components/planning/Calendar\";\r\n\r\n\r\n\r\nimport TransactionsList from \"./components/transactions/TransactionsList\"\r\n// import TransactionDetail from \"./components/transactions/TransactionDetail\"\r\n// Personnels Imports\r\nimport PersonnelList from './components/personnels/PersonnelList'\r\nimport PersonnelDetail from './components/personnels/PersonnelDetail'\r\nimport PersonnelEdit from './components/personnels/PersonnelEdit'\r\nimport PersonnelCreate from './components/personnels/PersonnelCreate'\r\n\r\n// Coachs Imports\r\nimport CoachList from './components/coachs/CoachList'\r\n\r\nimport CoachDetail from './components/coachs/CoachDetail'\r\nimport CoachEdit from './components/coachs/CoachEdit'\r\nimport CoachCreate from './components/coachs/CoachCreate'\r\n\r\n\r\n\r\n//// PaiementCreate\r\n// import PaiementCreate from \"./components/transactions/PaiementCreate\"\r\n// import AutreCreate from \"./components/transactions/AutreCreate\"\r\n// import AssuranceCreate from \"./components/transactions/AssuranceCreate\"\r\n// import RemCreate from \"./components/transactions/RemCreate\"\r\n// import RemCoachCreate from \"./components/transactions/RemCoachCreate\"\r\n/// Abonnements \r\nimport AbonnementList from \"./components/abonnement/AbonnementList\"\r\nimport AbonnementEdit from \"./components/abonnement/AbonnementEdit\"\r\nimport AbonnementCreate from \"./components/abonnement/AbonnementCreate\"\r\n\r\n\r\n\r\n/// Pages\r\nimport Registration from \"./pages/Registration\";\r\nimport Login from \"./pages/Login\";\r\nimport ForgotPassword from \"./pages/ForgotPassword\";\r\nimport LockScreen from \"./pages/LockScreen\";\r\nimport Error400 from \"./pages/Error400\";\r\nimport Error403 from \"./pages/Error403\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Error500 from \"./pages/Error500\";\r\nimport Error503 from \"./pages/Error503\";\r\n\r\n\r\nimport Tresorie from \"./components/tresorie/Tresorie\"\r\n\r\n/// Dashboard\r\nimport Home from \"./components/Dashboard/Home\";\r\nimport Configuration from './components/configuration/Configuration'\r\nimport UpdateModal from \"./components/users/UpdateModal\";\r\nconst Markup = () => {\r\n  let path = window.location.pathname;\r\n  path = path.split(\"/\");\r\n  path = path[path.length - 1];\r\n  let pagePath = path.split(\"-\").includes(\"login\");\r\n  \r\n  const [activeEvent, setActiveEvent] = useState(!path);\r\n\r\n  const routes = [\r\n    /// Dashboard\r\n \r\n    { url: \"\", component: Home },\r\n    // { url: \"my-wallet\", component: Wallet },\r\n    // { url: \"coin-details\", component: CoinDetails },\r\n    // { url: \"market-capital\", component: MarketCapital },\r\n    \r\n    /// Apps\r\n    // { url: \"app-profile\", component: AppProfile },\r\n    \r\n    // { url: \"app-calender\", component: Calendar },\r\n    // { url: \"post-details\", component: PostDetails },\r\n    \r\n    /// Widget\r\n    // { url: \"widget-basic\", component: Widget },\r\n    /// CONFIGURATION\r\n    { url: \"configuration\", component: Configuration },\r\n\r\n    // { url: \"ecom-invoice\", component: Invoice },\r\n    \r\n    // trésorie\r\n    { url: \"tresorie\", component: Tresorie },\r\n    { url: \"users\", component: UserList },\r\n    // Transactions\r\n    // { url: \"transaction\", component: CoinDetails },\r\n    // clients\r\n    // { url: \"clients\", component: ClientList },\r\n    { url: \"client\", component: ClientList },\r\n    { url: \"presences\", component: PresenceList },\r\n    { url: \"history-abc\", component: HistoryList },\r\n    { url: \"history-trans\", component: HistoryTrans },\r\n    { url: \"history-presence\", component: HistoryPresence },\r\n    \r\n    // { url: \"presence/detail/:id\", component: PresenceDetail },\r\n    // { url: \"presence/edit/:id\", component: PresenceEdit },\r\n    \r\n    { url: \"client/create\", component: ClientCreate },\r\n    { url: \"client/:id\", component: ClientDetail },\r\n    { url: \"client/edit/:id\", component: EditClient },\r\n    // { url: \"create/abonnee/new\", component: Clients },\r\n    // { url: \"create/abonnee/new\", component: Clients },\r\n    \r\n    // { url: \"hashtag\", component: EditProfile },\r\n\r\n    // { url: \"create/salle\", component: SalleCreate },\r\n    { url: \"salle\", component: Salle },\r\n    // { url: \"planning\", component: PlanningList },\r\n    // { url: \"planning/create\", component: PlaningCreate },\r\n    // { url: \"planning/edit/:id\", component: PlaningEdit },\r\n    { url: \"planning/calendar\", component: Calendar },\r\n    { url: \"creneaux\", component: Calendar },\r\n    \r\n    // { urlPlaningEdit: \"create/planning\", component: PlaningCreate },   PlaningEdit\r\n    \r\n    // Personnels URLS\r\n    { url: \"personnel\", component: PersonnelList },\r\n    { url: \"personnel/create\", component: PersonnelCreate },\r\n    { url: \"personnel/edit/:id\", component: PersonnelEdit },\r\n    { url: \"personnel/:id\", component: PersonnelDetail },\r\n    \r\n    // Coachs URLS\r\n    { url: \"coach\", component: CoachList },\r\n    { url: \"coach/create\", component: CoachCreate },\r\n    { url: \"coach/:id\", component: CoachDetail },\r\n    { url: \"coach/edit/:id\", component: CoachEdit },\r\n\r\n    { url: \"user/edit/:id\", component: UpdateModal },\r\n\r\n\r\n    /// Transactions CREATION\r\n    // { url: \"paiements/create\", component: PaiementCreate },\r\n    // { url: \"autre/create\", component: AutreCreate },\r\n    // { url: \"assurance/create\", component: AssuranceCreate },\r\n    // { url: \"remuneration/coach/create\", component: RemCoachCreate },\r\n    // { url: \"remuneration/create\", component: RemCreate },\r\n    \r\n    /// Transactions\r\n    { url: \"transactions\", component: TransactionsList },\r\n    // { url: \"transactions/create\", component: TransactionCreate },\r\n    // { url: \"transactions/edit/:id\", component: TransactionEdit },\r\n    // { url: \"transactions/:id\", component: TransactionDetail },\r\n    // Abonnements\r\n    \r\n    { url: \"abonnements\", component: AbonnementList },\r\n    { url: \"abonnements/edit/:id\", component: AbonnementEdit },\r\n    { url: \"abonnements/create\", component: AbonnementCreate },\r\n    // { url: \"coachs-personnels\", component: Customers },\r\n\r\n    /// table\r\n\r\n    /// pages\r\n    { url: \"register\", component: Registration },\r\n    { url: \"page-lock-screen\", component: LockScreen },\r\n    { url: \"login\", component: Login },\r\n    { url: \"page-forgot-password\", component: ForgotPassword },\r\n    { url: \"page-error-400\", component: Error400 },\r\n    { url: \"page-error-403\", component: Error403 },\r\n    { url: \"page-error-404\", component: Error404 },\r\n    { url: \"page-error-500\", component: Error500 },\r\n    { url: \"page-error-503\", component: Error503 },\r\n  ];\r\n\r\n  return (\r\n    <Router basename=\"/\">\r\n      {/* <Redirect from='/' to='/login' /> */}\r\n      <AuthProvider>\r\n      <div id={`${!pagePath ? \"main-wrapper\" : \"\"}`}className={`${!pagePath ? \"show menu-toggle\" : \"mh100vh\"}`}>\r\n        {!pagePath && (\r\n          <Nav\r\n          activeEvent={activeEvent}\r\n            onClick={() => setActiveEvent(!activeEvent)}\r\n            onClick2={() => setActiveEvent(false)}\r\n            onClick3={() => setActiveEvent(true)}\r\n          />\r\n        )}\r\n        <div\r\n          className={` ${!path && activeEvent ? \"rightside-event\" : \"\"} ${\r\n            !pagePath ? \"content-body\" : \"\"\r\n          }`}\r\n        >\r\n          <div className={`${!pagePath ? \"container-fluid\" : \"\"}`}style={{ minHeight: window.screen.height - 60 }}>\r\n            <Switch>\r\n              <Route exact component={Login} path=\"/login\" />\r\n              {routes.map((data, i) => (\r\n                <PrivateRoute\r\n                  key={i}\r\n                  exact\r\n                  path={`/${data.url}`}\r\n                  component={data.component}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n        {!pagePath && <Footer />}\r\n      </div>\r\n      </AuthProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Markup;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\Footer.js",["441"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  var d = new Date();\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"copyright\">\r\n        <p>\r\n          Copyright 2021 © Designed &amp; Developed by{\" \"}\r\n          <a href=\"https://octopus-consulting.com/\" target=\"_blank\">\r\n            Octopus Consulting\r\n          </a>{\" \"}\r\n          {d.getFullYear()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\utils\\PrivateRoute.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\ForgotPassword.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Login.js",["442","443","444"],"import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {ToastContainer} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport {notifyError} from '../components/Alert'\r\nconst Login = ({ history }) => {\r\n  \r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [token, setToken] = useState(\"\");\r\n\r\n\tconst initialFormData = Object.freeze({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t});\r\n  const [formData, updateFormData] = useState(initialFormData);\r\n  // const [error , setError] = useState(\"\");\r\n  const { email, password } = formData;\r\n  const { loginUser } = useContext(AuthContext);\r\n\r\n  const handleChange = (e) => {\r\n\t\tupdateFormData({\r\n\t\t\t...formData,\r\n\t\t\t[e.target.name]: e.target.value.trim(),\r\n\t\t});\r\n\t};\r\n\r\n  // const config = {\r\n  //   headers: {\r\n  //     Accept: \"application/json\",\r\n  //     \"Content-Type\": \"application/json\",\r\n  //   },\r\n  // };\r\n\r\n  // const body = JSON.stringify({ email, password });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const email = formData.email;\r\n    const password = formData.password;\r\n    formData.email.length > 0 && loginUser(email, password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authincation h-100 p-meddle\">\r\n      <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n\r\n      <div className=\"container h-100\">\r\n        <div className=\"row justify-content-center h-100 align-items-center\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"authincation-content\">\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-xl-12\">\r\n                  <div className=\"auth-form\">\r\n                    <h4 className=\"text-center mb-4\">Connecter vous</h4>\r\n                    <form action=\"\" onSubmit={(e) => handleSubmit(e)}>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"mb-1\">\r\n                          <strong>Email</strong>\r\n                        </label>\r\n                        <input type=\"text\" className=\"form-control\" value={email} name=\"email\" onChange={(e) => handleChange(e)} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"mb-1\">\r\n                          <strong>Mot de pass</strong>\r\n                        </label>\r\n                        <input type=\"password\" className=\"form-control\" value={password} name=\"password\" onChange={(e) => handleChange(e)} />\r\n                      </div>\r\n                      {/* <div className=\"form-row d-flex justify-content-between mt-4 mb-2\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"custom-control custom-checkbox ml-1\">\r\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"basic_checkbox_1\" />\r\n                            <label className=\"custom-control-label\" htmlFor=\"basic_checkbox_1\" > Remember my preference </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <Link to=\"/page-forgot-password\">\r\n                            Forgot Password?\r\n                          </Link>\r\n                        </div>\r\n                      </div> */}\r\n                      <div className=\"text-center\">\r\n                        <input type=\"submit\" value=\"Sign Me In\" className=\"btn btn-primary btn-block\" />\r\n                      </div>\r\n                    </form>\r\n                    <div className=\"new-account mt-3\">\r\n                      {/* <p>\r\n                       Vous n'avez pas de compte ?{\" \"}\r\n                        <Link className=\"text-primary\" to=\"/register\">\r\n                          Creer un compte\r\n                        </Link>\r\n                      </p> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Registration.js",["445"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import useAxios from \"../../useAxios\";\r\nimport useAxios from \"../components/useAxios\";\r\n\r\n// import { axiosInstance } from \"../utils/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nconst Register = () => {\r\n  const api = useAxios();\r\n  const history = useHistory();\r\n  const initialFormData = Object.freeze({\r\n  email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n\t});\r\n  const [formData, setFormData] = useState(initialFormData);\r\n\r\n  const { first_name, last_name, email, password, re_password} = formData;\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetFormData({\r\n\t\t\t...formData,\r\n\t\t\t// Trimming any whitespace\r\n\t\t\t[e.target.name]: e.target.value.trim(),\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(formData);\r\n\t\tapi.post(`${process.env.REACT_APP_API_URL}/rest-api/auth/register`, {\r\n\t\t\t\temail: formData.email,\r\n        first_name:formData.first_name,\r\n        last_name: formData.last_name,\r\n\t\t\t\tpassword: formData.password,\r\n\t\t\t\tre_password: formData.re_password,\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\twindow.location = '/login';\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t});\r\n\t};\r\n  \r\n  return (\r\n    <div className=\"authincation h-100 p-meddle\">\r\n      <div className=\"container h-100\">\r\n        <div className=\"row justify-content-center h-100 align-items-center\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"authincation-content\">\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-xl-12\">\r\n                  <div className=\"auth-form\">\r\n                    <h4 className=\"text-center mb-4\">Creer un nouveau compte</h4>\r\n                    <form onSubmit={(e) => handleSubmit(e)}>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"mb-1\">\r\n                          <strong>Email</strong>\r\n                        </label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"hello@example.com\" name=\"email\" onChange={(e) => handleChange(e)} value={email} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"mb-1\">\r\n                          <strong>Nom</strong>\r\n                        </label>\r\n                        <input type=\"nom\" className=\"form-control\" placeholder=\"votre nom...\" name=\"first_name\" onChange={(e) => handleChange(e)} value={first_name} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"mb-1\">\r\n                          <strong>Prénom</strong>\r\n                        </label>\r\n                        <input type=\"nom\" className=\"form-control\" placeholder=\"votre Prénom...\" name=\"last_name\" onChange={(e) => handleChange(e)} value={last_name} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"mb-1\">\r\n                          <strong>Password</strong>\r\n                        </label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" onChange={(e) => handleChange(e)} value={password} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"mb-1\">\r\n                          <strong>Password</strong>\r\n                        </label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"re_password\" onChange={(e) => handleChange(e)} value={re_password} />\r\n                      </div>\r\n                      <div className=\"text-center mt-4\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" > Confirmer </button>\r\n                      </div>\r\n                    </form>\r\n                    <div className=\"new-account mt-3\">\r\n                      <p>\r\n                       Vous avez déja un compte ?{\" \"}\r\n                        <Link className=\"text-primary\" to=\"/login\">Se connecter</Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error403.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error503.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error400.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error404.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\LockScreen.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\pages\\Error500.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\salle\\Salle.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\Clients.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelCreate.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientEdit.js",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import { useCookies } from 'react-cookie';\r\nimport Cookies from 'js-cookie';\r\nimport useAxios from \"../useAxios\";\r\n\r\n\r\nimport {  useHistory } from \"react-router-dom\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nexport const ClientContext = React.createContext()\r\n\r\n\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\n\r\n\r\nconst EditClient = (props) => {\r\n  const api = useAxios();\r\n  let history = useHistory();\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n\r\n  const currentClientId = props.match.params.id;\r\n  let maladiesEnd = `${process.env.REACT_APP_API_URL}/rest-api/maladies/`\r\n\r\n  let clientURI = `${process.env.REACT_APP_API_URL}/rest-api/clients/${currentClientId}/`\r\n\r\n\r\n  // const history = useHistory();\r\n  const [realMaladies, setRealMaladies] = useState([])\r\n  const [maladies, setMaladies] = useState([])\r\n  const [selectedMaladies, setSelectedMaladies] = useState([])\r\n  const [pushedMaladies, setPushedMaladies] = useState([])\r\n\r\n  const [civility, setCivility] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [carte, setCarte] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [adress, setAdress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [blood, setBlood] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [etat, setEtat] = useState(\"\");\r\n  const [dette, setDette] = useState(\"\");\r\n  const [gotResult, setGotResult] = useState(false);\r\nconst [error, setError] = useState(false)\r\nconst [deleted, setDeleted] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [picture, setPicture] = useState(null);\r\n\r\n\r\nuseEffect(() => {\r\n  api.get(maladiesEnd).then((res) => {\r\n    setMaladies(res.data)\r\n  })\r\n}, []);\r\n\r\nconst getmaladiesNames = (actiAbon) => {\r\n    const provActiId = []\r\n    const indexesList = []\r\n    // const \r\n    for (let i = 0; i < maladies.length; i++) {\r\n      const element = maladies[i];\r\n      provActiId.push(element.id)\r\n    }\r\n    console.log(provActiId);\r\n    for (let i = 0; i < actiAbon.length; i++) {\r\n      const acti = actiAbon[i];\r\n      const index = provActiId.indexOf(acti) \r\n      // console.log('indexes', index);\r\n      indexesList.push(maladies[index])\r\n\r\n    }\r\n    console.log('indesxxxd', indexesList);\r\n    return indexesList    \r\n}\r\n  useEffect(() => {\r\n  const fetchData =  () => {\r\n     api.get(clientURI).then((res) => {\r\n      setRealMaladies(res.data.maladies)\r\n      setCivility(res.data.civility)\r\n      setLastName(res.data.last_name)\r\n      setFirstName(res.data.first_name)\r\n      setAdress(res.data.adress)\r\n      setPhone(res.data.phone)\r\n      setEmail(res.data.email)\r\n      setNationality(res.data.nationality)\r\n      setBirthDate(res.data.birth_date)\r\n      setBlood(res.data.blood)\r\n      setNote(res.data.note)\r\n      setEtat(res.data.etat)\r\n      setDette(res.data.dette)\r\n      setCarte(res.data.carte)\r\n      // console.log('the real maladies', realMaladies);\r\n      setGotResult(true)\r\n    })\r\n  }\r\n  fetchData()\r\n\r\n  }, []);\r\n\r\nuseEffect(() => {\r\n  if (gotResult == true) {\r\n    setSelectedMaladies(getmaladiesNames(realMaladies))\r\n  }\r\n}, [gotResult]);\r\nuseEffect(() => {\r\n  if (success == true) {\r\n    notifySuccess()\r\n  }\r\n}, [success]);\r\n\r\n// useEffect(() => {\r\n//   if (deleted == true) {\r\n//     notifyDeleted()\r\n//     setDeleted(false)\r\n//     console.log(\"this is the deletation \", deleted);\r\n//   }\r\n// }, [deleted]);\r\n\r\n// const notifySuccess = () => {\r\n//   toast.success('Profile client modifié Avec Succés', {\r\n//     position: 'top-right',\r\n//     autoClose: 5000,\r\n//     hideProgressBar: false,\r\n//     closeOnClick: true,\r\n//     pauseOnHover: true,\r\n//     draggable: true,\r\n//   })\r\n// }\r\n// const notifyError = () => {\r\n//   toast.error('Echec de la modification', {\r\n//     position: 'top-right',\r\n//     autoClose: 5000,\r\n//     hideProgressBar: false,\r\n//     closeOnClick: true,\r\n//     pauseOnHover: true,\r\n//     draggable: true,\r\n//   })\r\n// }\r\n\r\n// const notifyDeleted = () => {\r\n//   toast.success(`le client avec l'id: ${currentClientId} a été supprimer avec succés`, {\r\n//     position: 'top-right',\r\n//     autoClose: 5000,\r\n//     hideProgressBar: false,\r\n//     closeOnClick: true,\r\n//     pauseOnHover: true,\r\n//     draggable: true,\r\n//   })\r\n// }\r\n\r\n// useEffect(() => {\r\n//   if (error == true) {\r\n//     notifyError()\r\n//   }\r\n// }, [error]);\r\n\r\nconst handleImage = (e) => {\r\n  // if (e.target.name === \"picture\") {\r\n    setPicture({\r\n      image: e.target.files,\r\n      });\r\n    // setPicture(e.target.files[0])\r\n      console.log('e.target.files',e.target.files);\r\n      console.log('e.target.name', e.target.name);\r\n  // }\r\n};\r\n// const deletClient =async () => {\r\n//   const url = `${process.env.REACT_APP_API_URL}/rest-api/clients/delete/${currentClientId}/`\r\n//   await api.delete(url).then(()=>{\r\n//     notifyDeleted()\r\n//       // history.push(`/client/`) \r\n//     })\r\n// } \r\n\r\n\r\n\r\nconst deletClient =async () => {\r\n  const url = `${process.env.REACT_APP_API_URL}/rest-api/clients/delete/${currentClientId}/`\r\n  await api.delete(url,\r\n   { headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'X-CSRFToken': Cookies.get('csrftoken')\r\n  }}\r\n    ).then(()=>{\r\n      notifySuccess('Adhérent Supprimé Avec Succée') \r\n      history.push(`/client/`)\r\n    })\r\n}\r\n\r\nconst getSelectedMaladies = () => {\r\n  for (let i = 0; i < selectedMaladies.length; i++) {\r\n    // setRealMaladies([...realMaladies, selectedMaladies[i]['id']])\r\n    pushedMaladies.push(Number(selectedMaladies[i]['id']))\r\n  }\r\n}\r\n  const HandleSubmit = async e => {\r\n    getSelectedMaladies()\r\n      e.preventDefault();\r\n      const newMaladies = []\r\n    //   for (let i = 0; i < selectedMaladies.length; i++) {\r\n    //     // setRealMaladies([...realMaladies, selectedMaladies[i]['id']])\r\n    //     console.log('les the sleected madaldie',selectedMaladies);\r\n    //     const maladie = Number(selectedMaladies[i]['id'])\r\n    //     newMaladies.push(maladie) \r\n    // }\r\n    let formData = new FormData();\r\n        formData.append('civility',civility );\r\n        formData.append('carte',carte );\r\n        formData.append('last_name',lastName );\r\n        formData.append('first_name',firstName );\r\n        formData.append('adress',adress );\r\n        formData.append('phone',phone );\r\n        formData.append('email',email );\r\n        formData.append('nationality',nationality );\r\n        formData.append('birth_date',birthDate );\r\n        formData.append('blood',blood );\r\n        formData.append('note',note );\r\n\r\n        // dette :Number(dette),\r\n        pushedMaladies.forEach(item => {\r\n            formData.append('maladies', item);\r\n          })\r\n        if (picture !== null) {\r\n          formData.append('picture', picture.image[0]);\r\n        }\r\n        await api.put(clientURI, formData, config).then(() => {\r\n          setTimeout(()=>{\r\n            notifySuccess('Profile Modifier avec succés')\r\n          }, 100)\r\n          history.push(`/client/${currentClientId}`)\r\n        }).catch((err) => notifyError('Modification profile échoué') )\r\n      }\r\n\r\n  return (\r\n  <div className=\"\">\r\n      <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n      <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Profile Abonné</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={HandleSubmit}>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group  col-md-4 col-xl-3\">\r\n                      <label>Carte </label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\"value={carte}  onChange={e => setCarte(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 col-xl-3\">\r\n                      <label>Nom </label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\"value={lastName}  onChange={e => setLastName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 col-xl-3\">\r\n                      <label>Prénom</label>\r\n                      <input  type=\"text\" name=\"first_name\"  className=\"form-control\" value={firstName} onChange={e => setFirstName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 col-xl-3\">\r\n                      <label>Photo</label>\r\n                      <input type=\"file\" accept=\"image/*\" name=\"picture\"  className=\"form-control\" placeholder=\"Photo d'identité \" onChange={handleImage}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 col-xl-3\">\r\n                      <label>Email </label>\r\n                      <input  type=\"email\" name=\"email\"  className=\"form-control\" value={email === 'null' ? '' : email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 col-xl-3\">\r\n                      <label>Adresse</label>\r\n                      <input type=\"text\"name=\"adress\" className=\"form-control\"value={adress} onChange={e => setAdress(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 col-xl-3\">\r\n                      <label>Date de naissance </label>\r\n                      <input type=\"date\" name=\"birth_date\" max=\"2099-01-01\"  className=\"form-control\" value={birthDate}onChange={e => setBirthDate(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 col-xl-3\">\r\n                      <label>Nationalité</label>\r\n                      <input type=\"text\" name=\"nationality\" className=\"form-control\"value={nationality === 'null' ? '' : nationality} onChange={e => setNationality(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 col-xl-3\">\r\n                      <label>Téléphone</label>\r\n                      <input type=\"text\" name=\"phone\" className=\"form-control\" value={phone}onChange={e => setPhone(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-2 col-xl-2\">\r\n                      <label>Civilité</label>\r\n                      <select defaultValue={\"option\"} name=\"civility\"  className=\"form-control\" value={civility}onChange={e => setCivility(e.target.value)}>\r\n                      <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value=\"MLL\" >Mlle</option>\r\n                        <option value=\"MME\" >Mme</option>\r\n                        <option value=\"MR\" >Mr</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form-group col-md-2\">\r\n                      <label>Groupe sanguin</label>\r\n                      <select name=\"blood\" className=\"form-control\" value={blood} onChange={e => setBlood(e.target.value)}>\r\n                      <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value='A-' >A-</option>\r\n                        <option value='A+' >A+</option>\r\n                        <option value='B-' >B-</option>\r\n                        <option value='B+' >B+</option>\r\n                        <option value='O-' >O-</option>\r\n                        <option value='O+' >O+</option>\r\n                        <option value='AB-'>AB-</option>\r\n                        <option value='AB+'>AB+</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                    <label>Maladies</label>\r\n                    <Autocomplete\r\n                      style={{backgroundColor:'#ffffff'}}\r\n                      multiple\r\n                      onChange={((event, value) =>  \r\n                        {\r\n                          setSelectedMaladies(value)\r\n                        console.log('the valueee', value);\r\n                    }\r\n                        )} \r\n                      value={selectedMaladies}\r\n                      options={maladies}\r\n                      getOptionLabel={(option) => (option['name'])}\r\n                      renderInput={(params) => (<TextField {...params} name=\"maladies\" variant=\"outlined\" fullWidth />)} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row mb-4\">\r\n                      <label>Note</label>\r\n                      <textarea name=\"note\" className=\"form-control\" value={note} onChange={e => setNote(e.target.value)}/>\r\n                  </div>\r\n                  <div className='float-right'>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Modifier\r\n                  </button>\r\n               </div>\r\n                </form>\r\n                  <button className=\"btn btn-danger\" onClick={deletClient}> Supprimer</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\nexport default EditClient;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelEdit.js",["462","463","464"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport useAxios from \"../useAxios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//  useNavigate in V6\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n\r\nconst PersonnelEdit = (props) => {\r\n  const api = useAxios();\r\n  // let creneauxEnd = `${process.env.REACT_APP_API_URL}/rest-api/creneau/`\r\n  const currentPersonnelId = props.match.params.id;\r\n\r\n  let personnelURI = `${process.env.REACT_APP_API_URL}/rest-api/personnel/${currentPersonnelId}/`;\r\n\r\n  const [creneaux, setCreneaux] = useState([])\r\n  \r\n  //FK \r\n  useEffect(() => {\r\n    api.get(personnelURI).then((res) => {\r\n      setCreneaux(res.data)\r\n    })\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const [civility, setCivility] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [adress, setAdress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [blood, setBlood] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [etat, setEtat] = useState(\"\");\r\n  const [fonction, setFonction] = useState(\"\");\r\n  // const [dette, setDette] = useState(\"\");\r\n  //FK\r\n  // const [creneau, setCreneau] = useState(\"\");\r\n  useEffect(() => {\r\n    axios.get(personnelURI).then((res) => {\r\n      setCivility(res.data.civility);\r\n      setLastName(res.data.last_name);\r\n      setFirstName(res.data.first_name);\r\n      setAdress(res.data.adress);\r\n      setPhone(res.data.phone);\r\n      setEmail(res.data.email);\r\n      setNationality(res.data.nationality);\r\n      setBirthDate(res.data.birth_date);\r\n      setBlood(res.data.blood);\r\n      setNote(res.data.note);\r\n      setEtat(res.data.etat);\r\n      setFonction(res.data.function)\r\n      // setDette(res.data.dette)\r\n      // setCreneau(res.data.creneau)\r\n    });\r\n  }, []);\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const EditedPersonnel = {\r\n      civility: civility,\r\n      last_name: lastName,\r\n      first_name: firstName,\r\n      adress: adress,\r\n      phone: phone,\r\n      email: email,\r\n      nationality: nationality,\r\n      function: fonction,\r\n      birth_date: birthDate,\r\n      state: etat,\r\n      blood: blood,\r\n      note: note,\r\n      // dette :Number(dette),\r\n      // creneau :Number(creneau),\r\n    };\r\n    api.put(personnelURI, EditedPersonnel).then( res => {\r\n      notifySuccess('Personnel modifier avec succés')\r\n        history.push(\"/personnel\");\r\n      }).catch(err => {\r\n        notifyError(\"Erreur lors de la modification du personnel\")\r\n      })\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h4 className=\"card-title\">Profile Abonné</h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"basic-form\">\r\n            <form onSubmit={HandleSubmit}>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Nom </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    className=\"form-control\"\r\n                    value={lastName}\r\n                    placeholder=\"Nom du client\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Prénom</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    className=\"form-control\"\r\n                    value={firstName}\r\n                    placeholder=\"Prénom du client\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                      <label>Fonction</label>\r\n                      <input type=\"text\" name=\"functiopn\"  className=\"form-control\"value={fonction}  onChange={e => setFonction(e.target.value)}/>\r\n                    </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Email </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Adresse</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"adress\"\r\n                    className=\"form-control\"\r\n                    value={adress}\r\n                    onChange={(e) => setAdress(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Date de naissance </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"birth_date\"\r\n                    max=\"2099-01-01\" \r\n                    className=\"form-control\"\r\n                    value={birthDate}\r\n                    onChange={(e) => setBirthDate(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Nationalité</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"nationality\"\r\n                    className=\"form-control\"\r\n                    value={nationality}\r\n                    onChange={(e) => setNationality(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Téléphone</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    className=\"form-control\"\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-4\">\r\n                  <label>Civilité</label>\r\n                  <select\r\n                    defaultValue={\"option\"}\r\n                    name=\"civility\"\r\n                    className=\"form-control\"\r\n                    value={civility}\r\n                    onChange={(e) => setCivility(e.target.value)}\r\n                  >\r\n                    <option value=\"option\" disabled>\r\n                      Cliquez pour choisir\r\n                    </option>\r\n                    <option value=\"MLL\">Mlle</option>\r\n                    <option value=\"MME\">Mme</option>\r\n                    <option value=\"MR\">Mr</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label>Groupe sanguin</label>\r\n                  <select\r\n                    defaultValue={\"option\"}\r\n                    name=\"blood\"\r\n                    className=\"form-control\"\r\n                    value={blood}\r\n                    onChange={(e) => setBlood(e.target.value)}\r\n                  >\r\n                    <option value=\"option\" disabled>\r\n                      Cliquez pour choisir\r\n                    </option>\r\n                    <option value=\"A-\">A-</option>\r\n                    <option value=\"A+\">A+</option>\r\n                    <option value=\"B-\">B-</option>\r\n                    <option value=\"B+\">B+</option>\r\n                    <option value=\"O-\">O-</option>\r\n                    <option value=\"O+\">O+</option>\r\n                    <option value=\"AB-\">AB-</option>\r\n                    <option value=\"AB+\">AB+</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                  <label>état</label>\r\n                  <select\r\n                    defaultValue={\"option\"}\r\n                    name=\"state\"\r\n                    className=\"form-control\"\r\n                    value={etat}\r\n                    onChange={(e) => setEtat(e.target.value)}\r\n                  >\r\n                    <option value=\"option\" disabled>\r\n                      Cliquez pour choisir\r\n                    </option>\r\n                    <option value=\"A\">Active</option>\r\n                    <option value=\"N\">Non active</option>\r\n                    <option value=\"S\">Suspendue</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <label>Note</label>\r\n                <textarea\r\n                  name=\"note\"\r\n                  className=\"form-control\"\r\n                  value={note}\r\n                  onChange={(e) => setNote(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Confirmer la modification\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PersonnelEdit;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\Dashboard\\Home.js",["465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport { Dropdown, Tab, Nav, Row } from \"react-bootstrap\";\r\nimport { Link, Router, useHistory } from \"react-router-dom\";\r\n \r\nimport useAxios from \"../useAxios\";\r\n\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n// import Contacts from \"../Dhrev/Home/slider/Contacts\";\r\nimport ShortCuts from \"../ShortCuts\";\r\n\r\nconst Home = () => {\r\n  const api = useAxios();\r\n\r\n  //  const dettesAND = `${process.env.REACT_APP_API_URL}/rest-api/clients-dettes/`\r\n   const dettesAND = `${process.env.REACT_APP_API_URL}/rest-api/totales-restes/`\r\n   const chargesAND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/total-charges/`\r\n   const ttcAND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/chiffre-affaire/`\r\n   const clientCount = `${process.env.REACT_APP_API_URL}/rest-api/clients-count/`\r\n   const transactionsTodayEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/trans-today/`\r\n   const presencesTodayEND = `${process.env.REACT_APP_API_URL}/rest-api/presence/is-in/`\r\n   let presenceCreateEND =  `${process.env.REACT_APP_API_URL}/rest-api/presence/create`\r\n   // let coachsEND = `${process.env.REACT_APP_API_URL}/rest-api/coachs/`\r\n   let presencesParSalleEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/by-salles/`\r\n  \r\n   const [client, setClient ] = useState('')\r\n   const [presenceId, setPresenceId ] = useState('')\r\n  \r\n   const [coachData, setCoachData] = useState([]);\r\n\r\n\r\n   const [ chiffreDaffaire, setChiffreDaffaire]= useState('')\r\n  \r\n   const [ dettesglobal, setDettesglobal]= useState('')\r\n   const [ nombreAbonne, setNombreAbonne]= useState(253)\r\n   const [ totaldepenses, setTotaldepenses]= useState('')\r\n   const [transClient, setTransClient] = useState([]);\r\n   const [abonClient, setAbonClient] = useState([]);\r\n   const [abonDetailModal, setAbonDetailModal] = useState(false);\r\n   const [abonClientType, setAbonClientType] = useState(\"\");\r\n   const [abonClientID, setAbonClientID] = useState(\"\");\r\n   const [abonClientEnd, setAbonClientEnd] = useState(\"\");\r\n   const [abonClientpresences, setAbonClientpresences] = useState(\"\");\r\n   const [presencesClient, setPresnecesClient] = useState([]);\r\n   const [salle, setSalle] = useState([]);\r\n   // const dettes = useGetAPI(dettesAND)\r\n   // setDettesglobal(dettes)\r\n   // console.log('dettesglobal', dettes);\r\n   \r\n   useEffect(() => {\r\n    api.get(dettesAND).then((res) => {\r\n      console.log('respojnnnnnnnnn', res);\r\n         setDettesglobal(res.data['totales_dettes']['reste__sum'])\r\n      })  \r\n      api.get(chargesAND).then((res) => {\r\n         setTotaldepenses(res.data.total_charges)\r\n      })\r\n      api.get(ttcAND).then((res) => {\r\n         setChiffreDaffaire(res.data.chiffre_affaire)\r\n      })\r\n      api.get(clientCount).then((res) => {\r\n         setNombreAbonne(res.data.abonnees)\r\n      })\r\n      api.get(transactionsTodayEND).then((res) => {\r\n         setTransClient(res.data)\r\n         console.log('res trans clients', res.data);\r\n      })\r\n      api.get(presencesTodayEND).then((res) => {\r\n         setPresnecesClient(res.data)\r\n         console.log('les clients actuellement en salle', res.data);\r\n      })\r\n      // api.get(coachsEND).then((res) => {\r\n      //    setCoachData(res.data)\r\n      // })\r\n   }, []);\r\n   useEffect(() => {\r\n      api.get(presencesParSalleEnd).then( res => {\r\n         setSalle(res.data.presences)\r\n         console.log('presenEEEESSSSS', res.data);\r\n      })\r\n   }, []);\r\n   let history = useHistory()\r\n   const ToFicheClient = (clientID) => {\r\n      history.push(`/client/${clientID}`)\r\n   }\r\n   const hello = \"sdvsv\"\r\n\r\n   const HandlePresenceSubmit = (e) => {\r\n      e.preventDefault();\r\n      const clientId = {client : Number(client)}\r\n      // getIdPresence(client)\r\n      api.get(`${process.env.REACT_APP_API_URL}/rest-api/clients/${client}/`).then(res=> {\r\n         if (res.data.last_presence) {\r\n            \r\n            console.log('id de la presence', res.data.last_presence);\r\n            setPresenceId(res.data.last_presence)\r\n            console.log('erreur lors du cposr ligne 85', presenceId);\r\n            api.patch( `${process.env.REACT_APP_API_URL}/rest-api/presence/edit/${res.data.last_presence}/`)\r\n         }else {\r\n\r\n            api.post(presenceCreateEND, clientId)\r\n         }\r\n      }).catch( err => {\r\n\r\n         console.log('erreur lors du cposr',err);\r\n      }\r\n   )}\r\n   return (\r\n      <Fragment>\r\n         <>\r\n            <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n              <ShortCuts />\r\n            </div>\r\n      <div className=\"row\">\r\n          <div className=\"col-xl-3 col-xxl-6 col-lg-6 col-sm-6 \">\r\n            <div className=\"card currency-bx overflow-hidden relative bg-warning\">\r\n              <div className=\"card-body p-4\">\r\n                <div className=\"media align-items-center\">\r\n                  <div className=\"media-body\">\r\n                    <h5 className=\"text-white fs-20\">Chiffre D'affaire Global</h5>\r\n                    <h1 className=\"text-white mb-0\">{chiffreDaffaire}</h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <div className=\"col-xl-3 col-xxl-6 col-lg-6 col-sm-6 \">\r\n          <div className=\"card currency-bx overflow-hidden relative bg-secondary\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media align-items-center\">\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"text-white fs-20\">Total Dépenses</h5>\r\n                  <h1 className=\"text-white mb-0\">{totaldepenses}</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-6 col-lg-6 col-sm-6 \">\r\n          <div className=\"card currency-bx overflow-hidden relative bg-info\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media align-items-center\">\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"text-white fs-20\">Total Dettes</h5>\r\n                  <h1 className=\"text-white mb-0\">{dettesglobal}</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-6 col-lg-6 col-sm-6 \">\r\n          <div className=\"card currency-bx overflow-hidden relative bg-dark\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media align-items-center\">\r\n                <div className=\"media-body\">\r\n                  <h5 className=\"text-white fs-20\">Total Adherants</h5>\r\n                  <h1 className=\"text-white mb-0\">{nombreAbonne}</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <img className=\"bg-img\" src={turkish} alt=\"\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div className=\"row\">\r\n         <div className=\"col-lg-4 col-xxl-4  col-sm-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0\">\r\n              <h4 className=\"mb-0  fs-20\">Transactions du jour   </h4>\r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n            <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n                >\r\n              <div className=\"table-responsive card-table\">\r\n                <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left\"><h5>Mantant</h5></th>\r\n                      <th><h5>type</h5></th>\r\n                      <th><h5>nom</h5></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {transClient.map(tran => (\r\n                      <tr key={tran.id}>\r\n                      <td className=\"text-left\"><h5 style={\r\n                                       tran.type === 'remunerationProf' || tran.type === 'remuneration'  ? {color: '#FF2E2E'} : tran.type === 'paiement' || tran.type === 'assurance' ? {color: '#24a247'} :  {color: '#000000'}}>{tran.amount}</h5></td>\r\n                      {/* <td>0.18</td> */}\r\n                      <td className=\"py-2\">\r\n                        {tran.type === 'remunerationProf' ? 'Rémuneration Coach' : tran.type} \r\n                     </td>\r\n                           { tran.coach &&\r\n                           <td className=\"py-2 pl-5 wspace-no\">\r\n                              <Link to={`/coach/${tran.coach.id}`} >\r\n                                 {tran.coach.name} \r\n                              </Link> \r\n                           </td>\r\n                           }\r\n\r\n                           {tran.client && \r\n                           <td className=\"py-2 pl-5 wspace-no\"> \r\n                              <Link to={`/client/${tran.client.id}`} >\r\n                                 {tran.client.name}  \r\n                              </Link> \r\n                           </td>\r\n                           }\r\n                           {tran.client_last_name && \r\n                           <td className=\"py-2 pl-5 wspace-no\"> \r\n                              <Link to={`/client/${tran.client_id}`} >\r\n                                 {tran.client_last_name} - {tran.client_id}  \r\n                              </Link> \r\n                           </td>\r\n                           }\r\n                           {tran.type === 'autre' &&\r\n                              <td className=\"py-2 pl-5 wspace-no\"> \r\n                              --\r\n                              </td>\r\n                           }\r\n                    </tr>\r\n                    ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </PerfectScrollbar>\r\n\r\n            </div>\r\n            <div className=\"card-footer border-0 pt-0 text-center\">\r\n              <Link to=\"/transactions\" className=\"btn-link\">\r\n                Transactions <i className=\"fa fa-caret-right ml-2 scale-2\" />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* .........................   Fin trasantions........................ */}\r\n        \r\n        {/* .........................   Fin Abonnements........................ */}\r\n         {/* .........................   les Presences........................ */}\r\n         <div className=\"col-lg-4 col-xxl-4  col-sm-6\" >\r\n          <div className=\"card\" >\r\n            <div className=\"card-header border-0\">\r\n              <h4 className=\"mb-0  fs-20\">Présences par salle</h4>\r\n               {/* <form onSubmit={HandlePresenceSubmit}>\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"ID client\" onChange={e => { \r\n                  setClient(e.target.value)\r\n                  }} />\r\n               </form> */}\r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n            <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n              >\r\n              <div className=\"table-responsive card-table\">\r\n                <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n\r\n                    <tr >\r\n                      <th  className=\"text-left\">Salle</th>\r\n                      <th className=\"text-right\">Présences</th>\r\n                    </tr>\r\n                  { salle.map ( presence => (\r\n                    <tr  key={presence.name}>\r\n                      {/* <td>{presence.name}</td> */}\r\n                      <td className=\"text-left\">{presence.name}</td>\r\n                      <td className=\"text-right\">{presence.actvities__creneaux__presenses__count}</td>\r\n                  \r\n                    </tr>\r\n                    ))}\r\n                  </thead>\r\n                  <tbody>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </PerfectScrollbar>\r\n            </div>\r\n            <div className=\"card-footer border-0 pt-0 text-center\">\r\n              <Link to=\"/presences\" className=\"btn-link\">\r\n                Presences <i className=\"fa fa-caret-right ml-2 scale-2\" />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 col-xxl-4 col-sm-6\" >\r\n          <div className=\"card\" >\r\n            <div className=\"card-header border-0\">\r\n              <h4 className=\"mb-0  fs-20\">Actuellement en salle</h4>\r\n               {/* <form onSubmit={HandlePresenceSubmit}>\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"ID client\" onChange={e => { \r\n                  setClient(e.target.value)\r\n                  }} />\r\n               </form> */}\r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n            <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n               >\r\n              <div className=\"table-responsive card-table\">\r\n                <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr >\r\n                      <th className=\"text-left\">ID</th>\r\n                      <th >Nom</th>\r\n                      <th >Activité</th>\r\n                      <th >Dettes</th>\r\n                      {/* <th className=\"text-right\">Salle</th> */}\r\n                    </tr>\r\n                  { presencesClient.map ( presence => (\r\n                    <tr className='ajouter' key={presence.id} onClick={ e => ToFicheClient(presence.client)}>\r\n                      {/* <td>{presence.name}</td> */}\r\n                      {/* <td>{presence.hour_sortie}</td> */}\r\n                      <td className=\"text-left\">{presence.client}</td>\r\n                      <td >{presence.client_last_name}</td>\r\n                      <td >{presence.client_activity}</td>\r\n                      \r\n                                      \r\n                      \r\n                      <td style={presence.dettes > 0 ? {color: '#FF2E2E'} : {color: '#000000'}}>{presence.dettes}</td>\r\n                    </tr>\r\n                    ))}\r\n                  </thead>\r\n                  <tbody>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </PerfectScrollbar>\r\n            </div>\r\n            <div className=\"card-footer border-0 pt-0 text-center\">\r\n              <Link to=\"/presences\" className=\"btn-link\">\r\n                Presences <i className=\"fa fa-caret-right ml-2 scale-2\" />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-xl-6 col-xxl-12 col-lg-12\">\r\n                  <div className=\"card\">\r\n                     <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n                        <div>\r\n                           <h4 className=\"text-black fs-20\">Chiffre d'affaire</h4>\r\n                           <p className=\"fs-13 mb-0\">\r\n                              Etat de chiffre d'affaire par mois \r\n                           </p>\r\n                        </div>\r\n                        <Dropdown className=\"mt-sm-0 mt-3\">\r\n                           <Dropdown.Toggle variant=\"\" className=\"btn rounded-0 text-black bgl-light dropdown-toggle \" >\r\n                              Monthly (2021)\r\n                           </Dropdown.Toggle>\r\n                           <Dropdown.Menu\r\n                              align=\"right\"\r\n                              className=\"dropdown-menu dropdown-menu-right\"\r\n                           >\r\n                              <Link className=\"dropdown-item\" to=\"/\">\r\n                              Monthly (2020)\r\n                              </Link>\r\n                              <Link className=\"dropdown-item\" to=\"/\">\r\n                              Monthly (2019)\r\n                              </Link>\r\n                              <Link className=\"dropdown-item\" to=\"/\">\r\n                              Monthly (2018)\r\n                              </Link>\r\n                           </Dropdown.Menu>\r\n                        </Dropdown>\r\n                     </div>\r\n                     <div className=\"card-body\" id=\"user-activity\">\r\n                        <Tab.Container defaultActiveKey=\"all\">\r\n                           <div className=\"d-flex flex-wrap justify-content-between mb-5\">\r\n                              <div className=\"card-action card-tabs icontabs mt-3 mt-sm-0\">\r\n                                 \r\n                              </div>\r\n                              <div className=\"d-flex align-items-center mt-3 mt-sm-0\">\r\n                                 <p className=\"mb-0 fs-13 mr-3\">Dernier Mois</p>\r\n                                 <h2 className=\"mb-0 text-black font-w600\">\r\n                                    {chiffreDaffaire}\r\n                                 </h2>\r\n                              </div>\r\n                           </div>\r\n                           <Tab.Content\r\n                              className=\"tab-content\"\r\n                              id=\"myTabContent\"\r\n                           >\r\n                              <Tab.Pane eventKey=\"all\">\r\n                                 <ActivityLine />\r\n                              </Tab.Pane>\r\n                              <Tab.Pane eventKey=\"btc\">\r\n                                 <ActivityLine2 />\r\n                              </Tab.Pane>\r\n                              <Tab.Pane eventKey=\"ethereum\">\r\n                                 <ActivityLine3 />\r\n                              </Tab.Pane>\r\n                           </Tab.Content>\r\n                        </Tab.Container>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            */}\r\n            </div> \r\n         </>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachEdit.js",["489"],"import React, { useState, useEffect } from \"react\";\r\nimport useAxios from \"../useAxios\";\r\n\r\n \r\nimport {  useHistory } from \"react-router-dom\";\r\nimport ShortCuts from \"../ShortCuts\";\r\n\r\n \r\n\r\nconst CoachEdit = (props) => {\r\n  const api = useAxios();\r\n  const currentCoachId = props.match.params.id;\r\n\r\n  let coachURI = `${process.env.REACT_APP_API_URL}/rest-api/coachs/${currentCoachId}/`\r\n  \r\n  const history = useHistory();\r\n\r\n  const [civility, setCivility] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [adress, setAdress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [blood, setBlood] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  // const [etat, setEtat] = useState(\"\");\r\n  //FK \r\n  const [paye, setPaye] = useState(1);\r\n  const [color, setColor] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    api.get(coachURI).then((res) => {\r\n      setCivility(res.data.civility)\r\n      setLastName(res.data.last_name)\r\n      setFirstName(res.data.first_name)\r\n      setAdress(res.data.adress)\r\n      setPhone(res.data.phone)\r\n      setEmail(res.data.email)\r\n      setNationality(res.data.nationality)\r\n      setBirthDate(res.data.birth_date)\r\n      setBlood(res.data.blood)\r\n      setNote(res.data.note)\r\n      setColor(res.data.color)\r\n      setPaye(res.data.pay_per_hour)\r\n  })\r\n  }, []);\r\n  const HandleSubmit = async e => {\r\n      e.preventDefault();\r\n      const EditedPersonnel = {\r\n        civility :civility,\r\n        last_name :lastName,\r\n        first_name :firstName,\r\n        adress :adress,\r\n        phone :phone,\r\n        email :email,\r\n        nationality :nationality,\r\n        birth_date :birthDate,\r\n        color: color,\r\n\r\n        blood :blood,\r\n        note :note,\r\n        pay_per_hour : paye\r\n\r\n      }\r\n      api.put(coachURI, EditedPersonnel).then(()=> {\r\n        history.push(\"/coach\")\r\n      })\r\n\r\n  }\r\n  return (\r\n        <div className=\"\">\r\n          <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Profile Abonné</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={HandleSubmit}>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Nom </label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\"value={lastName} placeholder=\"Nom du client\" onChange={e => setLastName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Prénom</label>\r\n                      <input  type=\"text\" name=\"first_name\"  className=\"form-control\" value={firstName} placeholder=\"Prénom du client\"onChange={e => setFirstName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Email </label>\r\n                      <input  type=\"email\" name=\"email\"  className=\"form-control\" value={email} placeholder=\"Email\"onChange={e => setEmail(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Adresse</label>\r\n                      <input type=\"text\"name=\"adress\" className=\"form-control\"value={adress} onChange={e => setAdress(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Date de naissance </label>\r\n                      <input type=\"date\" name=\"birth_date\" max=\"2099-01-01\" className=\"form-control\" value={birthDate}onChange={e => setBirthDate(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Nationalité</label>\r\n                      <input type=\"text\" name=\"nationality\" className=\"form-control\"value={nationality} onChange={e => setNationality(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Téléphone</label>\r\n                      <input type=\"text\" name=\"phone\" className=\"form-control\" value={phone}onChange={e => setPhone(e.target.value)} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group  col-lg-3 \">\r\n                        <label>Couleur</label>\r\n                        <div className=\"example\">\r\n                          <input type=\"color\" className=\"as_colorpicker form-control\" value={color} onChange={(e, value) => setColor(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Civilité</label>\r\n                      <select  defaultValue={\"option\"} name=\"civility\"  className=\"form-control\" value={civility}onChange={e => setCivility(e.target.value)}>\r\n                      <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value=\"MLL\" >Mlle</option>\r\n                        <option value=\"MME\" >Mme</option>\r\n                        <option value=\"MR\" >Mr</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Groupe sanguin</label>\r\n                      <select defaultValue={\"option\"} name=\"blood\" className=\"form-control\"value={blood} onChange={e => setBlood(e.target.value)}>\r\n                      <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value='A-' >A-</option>\r\n                        <option value='A+' >A+</option>\r\n                        <option value='B-' >B-</option>\r\n                        <option value='B+' >B+</option>\r\n                        <option value='O-' >O-</option>\r\n                        <option value='O+' >O+</option>\r\n                        <option value='AB-'>AB-</option>\r\n                        <option value='AB+'>AB+</option>\r\n                      </select>\r\n                      \r\n                    </div>\r\n                    {/* <div className=\"form-group col-md-4\">\r\n                      <label>état</label>\r\n                      <select  defaultValue={\"option\"} name=\"state\" className=\"form-control\"value={etat} onChange={e => setEtat(e.target.value)}>\r\n                        <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value=\"A\" >Active</option>\r\n                        <option value=\"N\" >Non active</option>\r\n                        <option value=\"S\" >Suspendue</option>\r\n                      </select>\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                   \r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Paye par heure</label>\r\n                      <input type=\"number\" value={paye} name=\"phone\" className=\"form-control\" onChange={e => setPaye(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                  <div className=\"form-row\">\r\n                      <label>Note</label>\r\n                      <textarea name=\"note\" className=\"form-control\" value={note} onChange={e => setNote(e.target.value)}/>\r\n                </div>\r\n\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Confirmer la modification\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n  )\r\n}\r\nexport default CoachEdit;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachCreate.js",["490","491","492"],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport {  useHistory } from \"react-router-dom\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n \r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst CoachCreate = () => {\r\n  // let creneauxEnd = `${process.env.REACT_APP_API_URL}/rest-api/creneau/`\r\n  const api = useAxios();\r\n  \r\n  // const creneaux = useGetAPI(creneauxEnd)\r\n  const history = useHistory();\r\n\r\n  const [civility, setCivility] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [adress, setAdress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"Algérienne\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [blood, setBlood] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [paye, setPaye] = useState(1);\r\n\r\n  //FK \r\n   \r\n  const HandleSubmit = async e => {\r\n    let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/coachs/create`\r\n      e.preventDefault();\r\n      const newCoach = {\r\n        civility :civility,\r\n        last_name :lastName,\r\n        first_name :firstName,\r\n        adress :adress,\r\n        phone :phone,\r\n        email :email,\r\n        nationality :nationality,\r\n        birth_date :birthDate,\r\n        color: color,\r\n        blood :blood,\r\n        note :note,\r\n        pay_per_hour : paye\r\n      }\r\n      if (email !== '') {\r\n        newCoach.email = email\r\n      }\r\n      if (phone !== '') {\r\n        newCoach.phone = phone\r\n      }\r\n      if (color !== '') {\r\n        newCoach.color = color\r\n      }\r\n      if (blood !== '') {\r\n        newCoach.blood = blood\r\n      }\r\n      if (paye !== '') {\r\n        newCoach.pay_per_hour = paye\r\n      }\r\n      if (adress !== '') {\r\n        newCoach.adress = adress\r\n      }\r\n      \r\n      api.post(endpoint, newCoach).then( res => {\r\n          notifySuccess('Coach creer avec succés')\r\n          history.push(\"/coach\")\r\n        }).catch(err => {\r\n          notifyError(\"Erreur lors de la creation de Coach\")\r\n        })\r\n\r\n  }\r\n  return (\r\n        <div className=\"\">\r\n            <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n          <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Profile Coach</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={HandleSubmit}>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Nom*</label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Nom du coach\" required onChange={e => setLastName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Prénom*</label>\r\n                      <input  type=\"text\" name=\"first_name\"  className=\"form-control\"  placeholder=\"Prénom du coach\" required onChange={e => setFirstName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Email</label>\r\n                      <input  type=\"email\" name=\"email\"  className=\"form-control\"  placeholder=\"Email\"onChange={e => setEmail(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Adresse</label>\r\n                      <input type=\"text\"name=\"adress\" className=\"form-control\" onChange={e => setAdress(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Date de naissance*</label>\r\n                      <input type=\"date\" name=\"birth_date\" className=\"form-control\" required onChange={e => setBirthDate(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Nationalité</label>\r\n                      <input type=\"text\" name=\"nationality\" value={nationality} className=\"form-control\" onChange={e => setNationality(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Téléphone</label>\r\n                      <input type=\"text\" name=\"phone\" className=\"form-control\" onChange={e => setPhone(e.target.value)} />\r\n                    </div>\r\n                  </div>\r\n                \r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-3\">\r\n                      <label>Civilité</label>\r\n                      <select  defaultValue={\"option\"} name=\"civility\"  className=\"form-control\" onChange={e => setCivility(e.target.value)}>\r\n                      <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value=\"MLL\">Mlle</option>\r\n                        <option value=\"MME\" >Mme</option>\r\n                        <option value=\"MR\" >Mr</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form-group  col-lg-3 \">\r\n                      <label>Couleur</label>\r\n                        <div className=\"example\">\r\n                          <input type=\"color\" className=\"as_colorpicker form-control\" value={color} onChange={(e, value) => setColor(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Groupe sanguin *</label>\r\n                      <select defaultValue={\"option\"} name=\"blood\" className=\"form-control\" onChange={e => setBlood(e.target.value)}required >\r\n                      <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value='A-' >A-</option>\r\n                        <option value='A+' >A+</option>\r\n                        <option value='B-' >B-</option>\r\n                        <option value='B+' >B+</option>\r\n                        <option value='O-' >O-</option>\r\n                        <option value='O+' >O+</option>\r\n                        <option value='AB-'>AB-</option>\r\n                        <option value='AB+'>AB+</option>\r\n                      </select>\r\n                      \r\n                    </div>\r\n                    </div>\r\n                    {/* <div className=\"form-group col-md-4\">\r\n                      <label>état</label>\r\n                      <select  defaultValue={\"option\"} name=\"state\" className=\"form-control\" onChange={e => setEtat(e.target.value)}>\r\n                        <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value=\"A\" >Active</option>\r\n                        <option value=\"N\" >Non active</option>\r\n                        <option value=\"S\" >Suspendue</option>\r\n                      </select>\r\n                    </div> */}\r\n                  <div className=\"form-row\">\r\n                    \r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Paye par heure</label>\r\n                      <input type=\"number\" value={paye} name=\"phone\" className=\"form-control\" onChange={e => setPaye(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                  <div className=\"form-row\">\r\n                    <label>Note</label>\r\n                    <textarea name=\"note\" className=\"form-control\" onChange={e => setNote(e.target.value)}/>\r\n                  </div>\r\n\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Creer\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n  )\r\n}\r\nexport default CoachCreate;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelList.js",["493","494","495","496"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport Search from \"../../layouts/Search\";\r\nimport ShortCuts from \"../ShortCuts\";\r\n\r\n/// images\r\nimport avartar5 from \"../../../images/avatar/5.png\";\r\nimport avartar1 from \"../../../images/avatar/1.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction refreshPage() {\r\n   window.location.reload(false);\r\n }\r\n\r\nconst Drop = (props) => {\r\n   return <Dropdown>\r\n            <Dropdown.Toggle variant=\"\" className=\"table-dropdown i-false\">\r\n               <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                     <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\"></rect>\r\n                     <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\"></circle>\r\n                     <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\"></circle>\r\n                     <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\"></circle>\r\n                  </g>\r\n               </svg>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n               <Dropdown.Item href={`/personnel/edit/${props.id}`}>Modifier</Dropdown.Item>\r\n               <Dropdown.Item type='button' className=\"text-danger\" onClick={ async () => {\r\n                    await useAxios.delete(`${process.env.REACT_APP_API_URL}/rest-api/personnel/delete/${props.id}`)\r\n                    refreshPage()\r\n                    }}>\r\n                   Supprimer\r\n                </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n         </Dropdown>\r\n};\r\nconst PersonnelList = () => {\r\n   let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/personnel/`\r\n   const api = useAxios();\r\n\r\n   const [personnelData, setPersonnelData] = useState([]);\r\n   const [savedPersonnel, setSavedPersonnel] = useState([]);\r\n   const [personnelStatus, setPersonnelStatus] = useState(null)\r\n   useEffect(() => {\r\n      api.get(endpoint).then((res) => {\r\n         setSavedPersonnel(res.data)\r\n         setPersonnelStatus(res.status)\r\n      }).catch(err => {\r\n         setPersonnelStatus(err.response.status)\r\n      })\r\n    }, []);\r\n   useEffect(() => {\r\n      const personnels = savedPersonnel\r\n      setPersonnelData(personnels)\r\n   }, [savedPersonnel]);\r\n   // console.log('els clieeents', savedClients);\r\n\r\n\r\n   return (\r\n      <Fragment>\r\n               <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n      {personnelStatus == 200 && (\r\n        <>\r\n         <Search name= 'Employé' lien= \"/personnel/create\"/>\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> ID </th>\r\n                                 <th>Nom</th>\r\n                                 <th>Prénom</th>\r\n                                 <th>Téléphone</th>\r\n                                 <th className=\"pl-5 width200\"> Addresse </th>\r\n                                 <th>Adhesion</th>\r\n                                 <th></th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                           {personnelData.map(pers => (\r\n                              <tr role=\"row\" key={pers.id} className=\"btn-reveal-trigger\">\r\n                                 <td className=\"customer_shop_single\"> {pers.id} </td>\r\n                                 <td className=\"py-3\">\r\n                                    <Link to={`/personnel/${pers.id}`}>\r\n                                       <div className=\"media d-flex align-items-center\">\r\n                                          <div className=\"avatar avatar-xl mr-2\">\r\n                                             <div className=\"\">\r\n                                                <img className=\"rounded-circle img-fluid\" src={avartar5} width=\"30\" alt=\"\" />\r\n                                             </div>\r\n                                          </div>\r\n                                          <div className=\"media-body\">\r\n                                             <h5 className=\"mb-0 fs--1\">\r\n                                             {pers.last_name}\r\n                                             </h5>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td className=\"py-2\">\r\n                                    {pers.first_name}\r\n                                 </td>\r\n                                 <td className=\"py-2\">\r\n                                    <a href=\"tel:{pers.phone}\">{pers.phone}</a>\r\n                                 </td>\r\n                                 <td className=\"py-2 pl-5 wspace-no\"> {pers.adress} </td>\r\n                                 <td className=\"py-2\">30/03/2018</td>\r\n                                 <td className=\"py-2 text-right\">\r\n                                    <Drop id={pers.id}/>\r\n                                 </td>\r\n                              </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n        </> \r\n      )}\r\n        \r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default PersonnelList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\UpdateModal.js",["497","498","499","500"],"// import React, { useCallback, useEffect, useState } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\n// import { notifyError, notifySuccess } from '../Alert';\r\n// import useAxios from '../useAxios';\r\n// import Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { Link } from \"react-router-dom\";\r\n// import { Dropdown, Button, Modal } from \"react-bootstrap\";\r\n\r\n// function UpdateModal(props, show, onShowShange, userData) {\r\n\r\n// const handleShow = useCallback(() => { onShowShange(false) }, [onShowShange])\r\n\r\n//   const history = useHistory();\r\n\r\n\r\n// const api = useAxios();\r\n\r\n// const [data, setData] = useState();\r\n\r\n// console.warn(\"props\", props.match.params.id)\r\n\r\n\r\n// const usersId = props.match.params.id;\r\n\r\n// let usersURI = `${process.env.REACT_APP_API_URL}/rest-api/auth/users/${usersId}/`;\r\n\r\n//     const initialFormData = Object.freeze({\r\n//         email: userData[\"user\"],\r\n//         first_name: userData[\"user\"],\r\n//         last_name: userData[\"user\"],\r\n//         password: userData[\"user\"],\r\n//         re_password: userData[\"user\"],\r\n//     });\r\n\r\n//     const [formData, setFormData] = useState(initialFormData);\r\n//     const [userGroup, setUserGroup] = useState(userData['userGroup']);\r\n//     const [group, setGroup] = useState('');\r\n\r\n//     //   useEffect( () =>  {\r\n//     //     api.get(groupsEnd).then( res => {\r\n//     //        console.log('result ', res);\r\n//     //        setUserGroup(res.data)\r\n//     //     }).catch( err => {\r\n//     //        console.log('IRRROR', err);\r\n//     //     })\r\n//     //  }, [userData['userGroup']]);\r\n//     //  const groupIndex = () => {\r\n//     //   const groupList = userGroup\r\n//     //  }\r\n//     const { first_name, last_name, email, password, re_password } = formData;\r\n\r\n//     const handleChange = (e) => {\r\n//         setFormData({\r\n//             ...formData,\r\n//             [e.target.name]: e.target.value.trim(),\r\n//         });\r\n//     };\r\n\r\n// // useEffect(() => {\r\n// //     api.get(usersURI), {\r\n// //             email: formData.email,\r\n// //             first_name: formData.first_name,\r\n// //             last_name: formData.last_name,\r\n// //             password: formData.password,\r\n// //             re_password: formData.re_password,\r\n// //             group: userGroup,\r\n// //         }.then((res) => {\r\n// //             // window.location = '/login';\r\n// //             console.log(res);\r\n// //             console.log(res.data);\r\n// //             setData(res)\r\n\r\n// //     });\r\n\r\n// //     // result = res.json();\r\n// // }, []);\r\n\r\n\r\n//     useEffect(() => {\r\n//         api.get(`${process.env.REACT_APP_API_URL}/rest-api/auth/users/`).then(res => {\r\n//             console.log('result ', res);\r\n//             setData(res.data)\r\n//         }).catch(err => {\r\n//             console.log('IRRROR', err);\r\n//         })\r\n//             // setDette(res.data.dette)\r\n//             // setCreneau(res.data.creneau)\r\n//     }, []);\r\n\r\n//     const HandleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         const EditedUser = {\r\n//             email: email,\r\n//             first_name: first_name,\r\n//             last_name: last_name,\r\n//             password: password,\r\n//             re_password: re_password,\r\n//             group: userGroup,\r\n//             // dette :Number(dette),\r\n//             // creneau :Number(creneau),\r\n//         };\r\n//         api.put(usersURI, EditedUser).then(res => {\r\n//             notifySuccess('Personnel modifier avec succés')\r\n//             history.push(\"/personnel\");\r\n//         }).catch(err => {\r\n//             notifyError(\"Erreur lors de la modification du personnel\")\r\n//         })\r\n//     };\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//           <Modal className=\"fade bd-example-modal-md\" size=\"md\" onHide={handleShow} show={show}>\r\n//               <Modal.Header>\r\n//                   <Modal.Title className='text-black'>Modifier / Creer Admin</Modal.Title>\r\n//                   <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n//                       <span>&times;</span>\r\n//                   </Button>\r\n//               </Modal.Header>\r\n//               <Modal.Body>\r\n//                   <h4 className=\"text-center mb-4\">Creer un nouveau compte</h4>\r\n//                   <form onSubmit={(e) => HandleSubmit(e)}>\r\n//                       <div className=\"form-group\">\r\n//                           <label className=\"mb-1\">\r\n//                               <strong>Email</strong>\r\n//                           </label>\r\n//                           <input type=\"email\" className=\"form-control\" placeholder=\"hello@example.com\" name=\"email\" onChange={(e) => handleChange(e)} value={formData.email} />\r\n//                       </div>\r\n//                       <div className=\"form-group\">\r\n//                           <label className=\"mb-1\">\r\n//                               <strong>Nom</strong>\r\n//                           </label>\r\n//                           <input type=\"nom\" className=\"form-control\" placeholder=\"votre nom...\" name=\"first_name\" onChange={(e) => handleChange(e)} value={formData.first_name} />\r\n//                       </div>\r\n//                       <div className=\"form-group\">\r\n//                           <label className=\"mb-1\">\r\n//                               <strong>Prénom</strong>\r\n//                           </label>\r\n//                           <input type=\"nom\" className=\"form-control\" placeholder=\"votre Prénom...\" name=\"last_name\" onChange={(e) => handleChange(e)} value={formData.last_name} />\r\n//                       </div>\r\n//                       <div className=\"form-group\">\r\n//                           <label>Role(s)</label>\r\n//                           <Autocomplete\r\n//                               style={{ backgroundColor: '#ffffff' }}\r\n//                               onChange={(event, value) => {\r\n//                                   setUserGroup(value.id);\r\n//                               }}\r\n//                               defaultValue={userData[userGroup]}\r\n//                               options={userData['groups']}\r\n//                               getOptionLabel={(option) => (option['name'])}\r\n//                               renderInput={(params) => (<TextField {...params} className=\"form-control\" name=\"group\" label=\"Role\" variant=\"outlined\" fullWidth />)} />\r\n//                       </div>\r\n//                       <div className=\"form-group\">\r\n//                           <label className=\"mb-1\">\r\n//                               <strong>Password</strong>\r\n//                           </label>\r\n//                           <input type=\"password\" className=\"form-control\" name=\"password\" onChange={(e) => handleChange(e)} value={password} />\r\n//                       </div>\r\n//                       <div className=\"form-group\">\r\n//                           <label className=\"mb-1\">\r\n//                               <strong>Password</strong>\r\n//                           </label>\r\n//                           <input type=\"password\" className=\"form-control\" name=\"re_password\" onChange={(e) => handleChange(e)} value={re_password} />\r\n//                       </div>\r\n//                       <div className=\"text-center mt-4\">\r\n//                           <button type=\"submit\" className=\"btn btn-primary btn-block\" > Confirmer </button>\r\n//                       </div>\r\n//                   </form>\r\n//                   <div className=\"new-account mt-3\">\r\n//                       <p>\r\n//                           Vous avez déja un compte ?{\" \"}\r\n//                           <Link className=\"text-primary\" to=\"/login\">Se connecter</Link>\r\n//                       </p>\r\n//                   </div>\r\n//               </Modal.Body>\r\n//           </Modal> \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default UpdateModal\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useAxios from \"../useAxios\";\r\n\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ShortCuts from \"../ShortCuts\";\r\n\r\n\r\n\r\nconst UpdateModal = (props) => {\r\n    const api = useAxios();\r\n    \r\n    const currentUserId = props.match.params.id;\r\n\r\n    let userURI = `${process.env.REACT_APP_API_URL}/rest-api/auth/users/${currentUserId}/`\r\n\r\n    const history = useHistory();\r\n\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [re_password, setRePassword] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        api.get(userURI).then((res) => {\r\n            setLastName(res.data.last_name)\r\n            setFirstName(res.data.first_name)\r\n            setEmail(res.data.email)\r\n            setPassword(res.data.password)\r\n            setRePassword(res.data.re_password)\r\n        })\r\n    }, []);\r\n\r\n    const HandleSubmit = async e => {\r\n        e.preventDefault();\r\n        const EditedUser = {\r\n            last_name: lastName,\r\n            first_name: firstName,\r\n            email: email,\r\n            password: password,\r\n            repassword: re_password,\r\n        }\r\n        api.put(userURI, EditedUser).then(() => {\r\n            history.push(\"/users\")\r\n        })\r\n\r\n    }\r\n\r\n    const [u, setU] = useState(404);\r\n    const [userEditStatus, setUserEditStatus] = useState(null);\r\n\r\n    const aa = api.get(`${process.env.REACT_APP_API_URL}/rest-api/auth/users/${currentUserId}/`)\r\n        .then(res => {\r\n            setU(res.status);\r\n            setUserEditStatus(res.status);\r\n            console.log(res.status);\r\n        }).catch(err => {\r\n            const { status, data, config } = err.response;\r\n            if (status === 404) {\r\n                history.push(\"/users\")\r\n            }\r\n            if (status === 400 && config.method === 'get' && data.error.hasOwnProperty('id')) {\r\n                history.push('/users')\r\n            }\r\n            setUserEditStatus(err.response.status)\r\n            console.log(err)\r\n            // history.push('/users')\r\n        })\r\n\r\n\r\n        // if (status === 200)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n                <ShortCuts />\r\n            </div>\r\n            {userEditStatus == 200 && (\r\n                <div className=\"card\">\r\n        <div className=\"card-header\">\r\n            <h4 className=\"card-title\">Modifier Utilisateur</h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div className=\"basic-form\">\r\n                <form onSubmit={HandleSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Nom </label>\r\n                            <input type=\"text\" name=\"last_name\" className=\"form-control\" value={lastName} placeholder=\"Nom du client\" onChange={e => setLastName(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Prénom</label>\r\n                            <input type=\"text\" name=\"first_name\" className=\"form-control\" value={firstName} placeholder=\"Prénom du client\" onChange={e => setFirstName(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Email </label>\r\n                            <input type=\"email\" name=\"email\" className=\"form-control\" value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} />\r\n                        </div>\r\n                        {/* <div className=\"form-group col-md-4\">\r\n              <label>état</label>\r\n              <select  defaultValue={\"option\"} name=\"state\" className=\"form-control\"value={etat} onChange={e => setEtat(e.target.value)}>\r\n                <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                <option value=\"A\" >Active</option>\r\n                <option value=\"N\" >Non active</option>\r\n                <option value=\"S\" >Suspendue</option>\r\n              </select>\r\n            </div> */}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Confirmer la modification\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n                </div>\r\n            )}\r\n    \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default UpdateModal;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachList.js",["501","502","503","504"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\nimport Search from \"../../layouts/Search\";\r\n\r\n/// images\r\nimport avartar5 from \"../../../images/avatar/5.png\";\r\nimport avartar1 from \"../../../images/avatar/1.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ShortCuts from \"../ShortCuts\";\r\n\r\n\r\n\r\n\r\nfunction refreshPage() {\r\n   window.location.reload(false);\r\n }\r\n\r\nconst Drop = (props) => {\r\n   return <Dropdown>\r\n            <Dropdown.Toggle variant=\"\" className=\"table-dropdown i-false\">\r\n               <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                     <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\"></rect>\r\n                     <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\"></circle>\r\n                     <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\"></circle>\r\n                     <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\"></circle>\r\n                  </g>\r\n               </svg>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n               <Dropdown.Item href={`/coach/edit/${props.id}`}>Modifier</Dropdown.Item>\r\n               <Dropdown.Item type='button' className=\"text-danger\" onClick={ async () => {\r\n                    await useAxios.delete(`${process.env.REACT_APP_API_URL}/rest-api/coachs/delete/${props.id}`)\r\n                    refreshPage()\r\n                    }}>\r\n                   Supprimer\r\n                </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n         </Dropdown>\r\n};\r\nconst CoachList = () => {\r\n  const api = useAxios();\r\n\r\n   let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/coachs/`\r\n\r\n   \r\n   const [coachData, setCoachData] = useState([]);\r\n   const [coachStatus, setCoachStatus] = useState(null);\r\n   // const savedCoachs = api.get(endpoint)\r\n   \r\n   useEffect(() => {\r\n      api.get(endpoint).then( res=> {\r\n         setCoachData(res.data)\r\n         setCoachStatus(res.status);\r\n\r\n      }).catch(err => {\r\n         if (err.response) {\r\n            console.log(err.response.data);\r\n            console.log(err.response.status);\r\n            console.log(err.response.headers);\r\n            setCoachStatus(err.response.status);\r\n      }})\r\n      // const coachs = savedCoachs\r\n   }, [endpoint]);\r\n   // console.log('els clieeents', savedClients);\r\n\r\n\r\n\r\n   return (\r\n      <Fragment>\r\n         {/* <PageTitle activeMenu=\"Liste\" motherMenu=\"Abonnées\" /> */}\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n\r\n      {coachStatus == 200 && (\r\n      <>\r\n         <Search name= 'Ajouter Coach' lien= \"/coach/create\"/>\r\n\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> ID </th>\r\n                                 <th>Nom</th>\r\n                                 <th>Prénom</th>\r\n                                 <th>Téléphone</th>\r\n                                 <th className=\"pl-5 width200\"> Addresse </th>\r\n                                 <th>Adhesion</th>\r\n                                 <th></th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                           {coachData.map(coach => (\r\n                              <tr role=\"row\" key={coach.id} className=\"btn-reveal-trigger\">\r\n                                 <td className=\"customer_shop_single\"> {coach.id} </td>\r\n                                 <td className=\"py-3\">\r\n                                    <Link to={`/coach/${coach.id}`}>\r\n                                       <div className=\"media d-flex align-items-center\">\r\n                                          <div className=\"avatar avatar-xl mr-2\">\r\n                                             <div className=\"\">\r\n                                                <img className=\"rounded-circle img-fluid\" src={avartar5} width=\"30\" alt=\"\" />\r\n                                             </div>\r\n                                          </div>\r\n                                          <div className=\"media-body\">\r\n                                             <h5 className=\"mb-0 fs--1\">\r\n                                             {coach.last_name}\r\n                                             </h5>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td className=\"py-2\">\r\n                                    {coach.first_name}\r\n                                 </td>\r\n                                 <td className=\"py-2\">\r\n                                    <a href=\"tel:{coach.phone}\">{coach.phone}</a>\r\n                                 </td>\r\n                                 <td className=\"py-2 pl-5 wspace-no\"> {coach.adress} </td>\r\n                                 <td className=\"py-2\">30/03/2018</td>\r\n                                 <td className=\"py-2 text-right\">\r\n                                    <Drop id={coach.id}/>\r\n                                 </td>\r\n                              </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n      )}\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default CoachList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\context\\AuthContext.jsx",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PersonnelDetail.jsx",["505","506","507","508","509","510","511","512","513"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import productData from \"../productData\";\r\nimport useAxios from \"../useAxios\";\r\nimport { Tab, Button } from \"react-bootstrap\";\r\n\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport PaiementModal from './PaiementModal'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PersonnelDetail = (props) => {\r\n  const api = useAxios();\r\n  const [paiementModal, setPaiementModal] = useState(false);\r\n  const [employe, setEmploye] = useState({});\r\n  const [transactionsEmploye, setTransactionsEmploye] = useState([]);\r\n\r\n  const employeId = props.match.params.id;\r\n\r\n  let PersonnelDetailEndpoint = `${process.env.REACT_APP_API_URL}/rest-api/personnel/${employeId}`;\r\n  const transactionsEmployeEnd = `${process.env.REACT_APP_API_URL}/rest-api/transactions/remuneration/${employeId}`;\r\n  const [personnelData, setPersonnelData] = useState([])\r\n  //FK \r\n  useEffect(() => {\r\n    api.get(PersonnelDetailEndpoint).then((res) => {\r\n      setPersonnelData(res.data)\r\n    })\r\n  }, []);\r\n  useEffect(() => {\r\n    const personnelSelected = personnelData;\r\n    setEmploye(personnelSelected);\r\n  }, [personnelData]);\r\n\r\n  const capitalizeFirstLetter = (word) => {\r\n    if (word) return word.charAt(0).toUpperCase() + word.slice(1);\r\n    return \"\";\r\n  };\r\n  useEffect(() => {\r\n    //  const clientId = props.match.params.id;\r\n     api.get(transactionsEmployeEnd).then( res => {\r\n      setTransactionsEmploye(res.data)\r\n           })\r\n  }, [props.match.params.id] );\r\n  return (\r\n    <>\r\n<div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n<ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n        <ShortCuts />\r\n      </div>\r\n      {/* <div className=\"page-titles\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/coach\">Coachs</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">\r\n            <Link to=\"#\">ID: {employe.id} - {employe.last_name}</Link>\r\n          </li>\r\n        </ol>\r\n      </div> */}\r\n      {/* <div className=\"row\">\r\n        \r\n\r\n        <div className=\"col-lg-4  col-sm-6\">\r\n            <button type='button' className=\"btn btn-success\" onClick= { e => setPaiementModal(true)}>\r\n              <h2 style={{color:'#ffffff',  marginTop:'5px'}} >Ajouter Virement</h2>\r\n            </button>\r\n        </div>\r\n        <div className=\"col-lg-4  col-sm-6\">\r\n            <button type='button' className=\"btn btn-danger\" >\r\n              <h2 style={{color:'#ffffff',  marginTop:'5px'}} > Reste du salaire : {employe.salaire}</h2>\r\n            </button>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n              <div className=\"card-body bg-white \">\r\n                <div className=\"media profile-bx\">\r\n                      <img src={employe.picture} alt=\"\" />\r\n                      <div className=\"media-body align-items-center\">\r\n                        <h2 className=\"text-black font-w600\">\r\n                          {capitalizeFirstLetter(employe.last_name)} {capitalizeFirstLetter(employe.first_name)} { employeId.function && (employe.function)}\r\n                        </h2>\r\n                        <h4 className=\"mb-2 text-black\">ID: <span className='text-danger'>{employe.id}</span></h4>\r\n                        <h6 className=\"text-black\">\r\n                            inscrit le : <span className=\"text-primary\">{employe.date_added}</span>\r\n                        </h6>\r\n                        <div className=\"social-icons\">\r\n                            <Link to={`/personnel/edit/${employeId}`} className=\"btn btn-outline-dark\" > Modifier Profile </Link>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"social-icons m-3\">\r\n                        <h6 className='text-primary'>Civilité:                   <a className=\"item text-dark\">{employe.civility_display}</a> </h6>\r\n                        <h6 className='text-primary'>Téléphone:                  <span className=\"item text-dark\"><a href={`tel:${employe.phone}`}> {employe.phone}</a></span></h6>\r\n                        <h6 className='text-primary'>email:                      <span className=\"item text-dark\"><a href={`mailto:${employe.email}`}> {employe.email}</a></span></h6>\r\n                        <h6 className='text-primary'>Groupe sanguin:&nbsp;&nbsp; <span className=\"badge badge-danger light\">{employe.blood}</span> </h6>\r\n                      </div>\r\n                      <div className=\"social-icons m-3\">\r\n                        <h6 className='text-primary'>Nationalité:                 <span className=\"item text-dark\">{employe.nationality}</span> </h6>\r\n                        <h6 className='text-primary'>Date de naissance:           <span className=\"item text-dark\">{employe.birth_date}</span> </h6>\r\n                        <h6 className='text-primary'>Salaire par heure:           <a className=\"item text-dark\"> {employe.pay_per_hour}</a> </h6>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n                {/*Tab slider End*/}\r\n                <div className=\"col-xl-9 col-lg-6  col-md-6 col-xxl-7 col-sm-12\">\r\n                  <div className=\"product-detail-content\">\r\n                    {/*Product details*/}\r\n                    <div className=\"new-arrival-content pr\">\r\n                      <ul>\r\n                        {/* \r\n                          { client.maladie_name.map(maladie =>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                              <li className=\"custom-control-label\" key={maladie.id} htmlFor={maladie.id}> {maladie.name}</li>\r\n                            </div>\r\n                          )}\r\n                        */}\r\n                      </ul>\r\n                      <div className='row d-flex'>\r\n                        <div className=\"shopping-cart mt-3 col- col-md-6\">\r\n                          <h4>Note :</h4>\r\n                          <p>{employe.note}</p>\r\n                        </div>\r\n                        <div className=\"shopping-cart mt-3 col- col-md-6\">\r\n                          <h4>Adresse :</h4>\r\n                          <p>{employe.adress}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0\">\r\n              <h4 className=\"mb-0  fs-20\">Virements</h4>\r\n              \r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n            <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n              >\r\n              <div className=\"table-responsive card-table\">\r\n                <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left\">Montant</th>\r\n                      <th>Date</th>\r\n                      {/* <th className=\"text-right\">Total</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    \r\n                    {transactionsEmploye.map(trans => (\r\n                      <tr key={trans.id}>\r\n                      <td className=\"text-left\">{trans.amount}</td>\r\n                      {/* <td>0.18</td> */}\r\n                      <td className=\"text-right\">{trans.date_creation}</td>\r\n                    </tr>\r\n                    ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </PerfectScrollbar>\r\n            </div>\r\n            <div className=\"card-footer border-0 pt-0 text-center\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PaiementModal show={paiementModal} onShowShange={setPaiementModal} coachData={{employeId: employeId, emplyeName:employe.first_name}} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonnelDetail;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\CoachDetail.jsx",["514","515","516","517","518","519","520","521","522","523","524","525","526","527"],"import React, { useState , useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import productData from \"../productData\";\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport { Dropdown, Tab, Nav, Button } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nimport product1 from \"../../../images/product/1.jpg\";\r\nimport Search from \"../../layouts/Search\";\r\nimport { createContext } from \"react\";\r\nimport PaiementModal from './PaiementModal'\r\n// import RenewAbonnementModal from './RenewAbonnementModal'\r\nconst CoachDetail = (props) => {\r\n  const api = useAxios();\r\n  const [coach, setCoach] = useState({});\r\n  //  const [aBCmodalCreate, setABCModalCreate] = useState(false);\r\n   const [paiementModal, setPaiementModal] = useState(false);\r\n  //  const [abonDetailModal, setAbonDetailModal] = useState(false);\r\n  //  const [abonClient, setAbonClient] = useState([]);\r\n   const [transCoach, setTransCoach] = useState([]);\r\n   const [presencesCoach, setPresnecesCoach] = useState([]);\r\n   const [creneauxCoach, setCreneauxCoach] = useState([]);\r\n  //  const [abonClientID, setAbonClientID] = useState(\"\");\r\n  //  const [abonClientType, setAbonClientType] = useState(\"\");\r\n  //  const [abonClientEnd, setAbonClientEnd] = useState(\"\");\r\n  //  const [abonClientpresences, setAbonClientpresences] = useState(\"\");\r\n  const coachID = props.match.params.id;\r\n  const [lastPresence, setLastPresence] = useState('')\r\n  const presenceCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/presence/coachs/create`\r\n  const presenceUpdateEND = `${process.env.REACT_APP_API_URL}/rest-api/presence/coachs/${lastPresence}/`\r\n  const transactionClientEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/remunerationProf-by-coach/?cl=${coachID}`\r\n  const creneauCoachEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-coach?cl=${coachID}`\r\nconst presencesCoachEND = `${process.env.REACT_APP_API_URL}/rest-api/presence/by-coachs/?cl=${coachID}`\r\nconst coachDetailEnd = `${process.env.REACT_APP_API_URL}/rest-api/coachs/${coachID}/`\r\n  \r\n\r\n  // const [error, setError] = useState(false)\r\n  // const [success, setSuccess] = useState(false)\r\n  \r\n  // const notifySuccess = () => {\r\n  //   toast.success('Entrée Enregistré', {\r\n  //     position: 'top-right',\r\n  //     autoClose: 5000,\r\n  //     hideProgressBar: false,\r\n  //     closeOnClick: true,\r\n  //     pauseOnHover: true,\r\n  //     draggable: true,\r\n  //   })\r\n  // }\r\n\r\n  // const notifySortie = () => {\r\n  //   toast.success('Sortie Enregistré', {\r\n  //     position: 'top-right',\r\n  //     autoClose: 5000,\r\n  //     hideProgressBar: false,\r\n  //     closeOnClick: true,\r\n  //     pauseOnHover: true,\r\n  //     draggable: true,\r\n  //   })\r\n  // }\r\n\r\n  // const notifyError = () => {\r\n  //   toast.error('erreur lors Presence Coach', {\r\n  //     position: 'top-right',\r\n  //     autoClose: 5000,\r\n  //     hideProgressBar: false,\r\n  //     closeOnClick: true,\r\n  //     pauseOnHover: true,\r\n  //     draggable: true,\r\n  //   })\r\n  // }\r\n  // useEffect(() => {\r\n  //   if (error === true) {\r\n  //     notifyError()\r\n  //   }\r\n  //   setError(false)\r\n  // }, [error]);\r\n  // useEffect(() => {\r\n  //   if (success === true) {\r\n  //     notifySuccess()\r\n  //     setSuccess(false)\r\n  //   }\r\n  // }, [success]);\r\n  useEffect(() => {\r\n    //  const clientId = props.match.params.id;\r\n     const fetchData = async () => {\r\n        try {\r\n           const res = await api.get(creneauCoachEND);\r\n           setCreneauxCoach(res.data)\r\n        } catch (error) {\r\n           console.log(error);\r\n        }\r\n     }\r\n     fetchData();\r\n  }, [props.match.params.id] );\r\n  useEffect(() => {\r\n    //  const clientId = props.match.params.id;\r\n     api.get(presencesCoachEND).then( res => {\r\n            setPresnecesCoach(res.data)\r\n           })\r\n  }, [props.match.params.id] );\r\n  useEffect(() => {\r\n    //  const clientId = props.match.params.id;\r\n     const fetchData = async () => {\r\n        try {\r\n           const res = await api.get(transactionClientEND);\r\n           setTransCoach(res.data)\r\n \r\n            console.log('ghirrrr =creneauxClient', transCoach);\r\n        } catch (error) {\r\n           console.log(error, 'erreur presneces');\r\n        }\r\n     }\r\n     fetchData();\r\n  }, [props.match.params.id, paiementModal] );\r\n\r\n  const createPresence = () => {\r\n    const Newcoach = {\r\n      coach: Number(coachID)\r\n    }\r\n    api.post(presenceCreateEND, Newcoach).then(\r\n      notifySuccess('Entrée coach Enregistré')\r\n      ).catch(err => {\r\n      notifySuccess('erreur Enregistrement Presence Coach')\r\n    })\r\n  }\r\n  const updatePresence = async () => {\r\n    const Newcoach = {\r\n      coach: Number(coachID)\r\n    }\r\n    await api.put(presenceUpdateEND, Newcoach).then(\r\n      notifySuccess('Sortie coach Enregistré')\r\n      ).catch(err => {\r\n      notifySuccess('erreur Enregistrement Sortie Coach')\r\n    })\r\n  }\r\n  useEffect(() => {\r\n     const fetchData = async () => {\r\n        try {\r\n           const res = await api.get(coachDetailEnd);\r\n           setCoach(res.data)\r\n          //  console.log(res.data, ' COOOOOOOOOO');\r\n           setLastPresence(res.data.last_presence)\r\n        } catch (error) {\r\n           console.log(error);\r\n        }\r\n     }\r\n     fetchData();\r\n  }, [props.match.params.id, paiementModal] );\r\n\r\nconst capitalizeFirstLetter = (word) => {\r\n   if (word)\r\n       return word.charAt(0).toUpperCase() + word.slice(1);\r\n   return '';\r\n};\r\n  return (\r\n    <>\r\n<div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n<ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n        <ShortCuts />\r\n      </div>\r\n      {/* <div className=\"page-titles\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/coach\">Coachs</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">\r\n            <Link to=\"#\">ID: {coach.id} - {coach.last_name}</Link>\r\n          </li>\r\n        </ol>\r\n      </div> */}\r\n      <div className=\"row\">\r\n        \r\n      <div className=\"col-lg-4  col-sm-6\">\r\n         <div className=\"row\">\r\n           <div className=\"col-6\">\r\n           <Button\r\n             className=\"btn ml-3 btn-success rounded-0 mb-2\"\r\n             onClick={e => createPresence()}\r\n           >\r\n             Entré\r\n             <svg\r\n               className=\"ml-4 scale5\"\r\n               width={16}\r\n               height={16}\r\n               viewBox=\"0 0 29 29\"\r\n               fill=\"none\"\r\n               xmlns=\"http://www.w3.org/2000/svg\"\r\n             >\r\n               <path\r\n                 d=\"M5.35182 13.4965L5.35182 13.4965L5.33512 6.58823C5.33508 6.5844 5.3351 6.58084 5.33514 6.57759M5.35182 13.4965L5.83514 6.58306L5.33514 6.58221C5.33517 6.56908 5.33572 6.55882 5.33597 6.5545L5.33606 6.55298C5.33585 6.55628 5.33533 6.56514 5.33516 6.57648C5.33515 6.57684 5.33514 6.57721 5.33514 6.57759M5.35182 13.4965C5.35375 14.2903 5.99878 14.9324 6.79278 14.9305C7.58669 14.9287 8.22874 14.2836 8.22686 13.4897L8.22686 13.4896L8.21853 10.0609M5.35182 13.4965L8.21853 10.0609M5.33514 6.57759C5.33752 5.789 5.97736 5.14667 6.76872 5.14454C6.77041 5.14452 6.77217 5.14451 6.77397 5.14451L6.77603 5.1445L6.79319 5.14456L13.687 5.16121L13.6858 5.66121L13.687 5.16121C14.4807 5.16314 15.123 5.80809 15.1211 6.6022C15.1192 7.3961 14.4741 8.03814 13.6802 8.03626L13.6802 8.03626L10.2515 8.02798L23.4341 21.2106C23.9955 21.772 23.9955 22.6821 23.4341 23.2435C22.8727 23.8049 21.9625 23.8049 21.4011 23.2435L8.21853 10.0609M5.33514 6.57759C5.33513 6.57959 5.33514 6.58159 5.33514 6.5836L8.21853 10.0609M6.77407 5.14454C6.77472 5.14454 6.77537 5.14454 6.77603 5.14454L6.77407 5.14454Z\"\r\n                 fill=\"white\"\r\n                 stroke=\"white\"\r\n               />\r\n             </svg>\r\n           </Button>\r\n           </div>\r\n           <div className=\"col-6\">\r\n           <Button\r\n             onClick={e => updatePresence()}\r\n             className=\"btn btn-danger rounded-0 mb-2\"\r\n           >\r\n             Sortie\r\n             <svg\r\n               className=\"ml-4 scale3\"\r\n               width={16}\r\n               height={16}\r\n               viewBox=\"0 0 21 21\"\r\n               fill=\"none\"\r\n               xmlns=\"http://www.w3.org/2000/svg\"\r\n             >\r\n               <path\r\n                 d=\"M16.9638 11.5104L16.9721 14.9391L3.78954 1.7565C3.22815 1.19511 2.31799 1.19511 1.75661 1.7565C1.19522 2.31789 1.19522 3.22805 1.75661 3.78943L14.9392 16.972L11.5105 16.9637L11.5105 16.9637C10.7166 16.9619 10.0715 17.6039 10.0696 18.3978C10.0677 19.1919 10.7099 19.8369 11.5036 19.8388L11.5049 19.3388L11.5036 19.8388L18.3976 19.8554L18.4146 19.8555L18.4159 19.8555C18.418 19.8555 18.42 19.8555 18.422 19.8555C19.2131 19.8533 19.8528 19.2114 19.8555 18.4231C19.8556 18.4196 19.8556 18.4158 19.8556 18.4117L19.8389 11.5035L19.8389 11.5035C19.8369 10.7097 19.1919 10.0676 18.3979 10.0695C17.604 10.0713 16.9619 10.7164 16.9638 11.5103L16.9638 11.5104Z\"\r\n                 fill=\"white\"\r\n                 stroke=\"white\"\r\n               />\r\n             </svg>\r\n           </Button>\r\n           </div>\r\n           </div>\r\n        </div>\r\n        <div className=\"col-lg-4  col-sm-6\">\r\n            <button type='button' className=\"btn btn-success\" onClick= { e => setPaiementModal(true)}>\r\n              <h2 style={{color:'#ffffff',  marginTop:'5px'}} >Ajouter Virement</h2>\r\n            </button>\r\n        </div>\r\n        <div className=\"col-lg-4  col-sm-6\">\r\n            <button type='button' className=\"btn btn-danger\" >\r\n              <h2 style={{color:'#ffffff',  marginTop:'5px'}} > Reste du salaire : {coach.salaire}</h2>\r\n            </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n              <div className=\"card-body bg-white \">\r\n                <div className=\"media profile-bx\">\r\n                      <img src={coach.picture} alt=\"\" />\r\n                      <div className=\"media-body align-items-center\">\r\n                        <h2 className=\"text-black font-w600\">\r\n                          {capitalizeFirstLetter(coach.last_name)} {capitalizeFirstLetter(coach.first_name)}\r\n                        </h2>\r\n                        <h4 className=\"mb-2 text-black\">ID: <span className='text-danger'>{coach.id}</span></h4>\r\n                        <h6 className=\"text-black\">\r\n                            inscrit le : <span className=\"text-primary\">{coach.date_added}</span>\r\n                        </h6>\r\n                        <div className=\"social-icons\">\r\n                            <Link\r\n                              to={`/coach/edit/${coachID}`}\r\n                              className=\"btn btn-outline-dark\"\r\n                            >\r\n                              Modifier Profile\r\n                            </Link>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"social-icons m-3\">\r\n                        <h6 className='text-primary'>Civilité:                   <a className=\"item text-dark\"> {coach.civility_display}</a> </h6>\r\n                        <h6 className='text-primary'>Téléphone:                  <span className=\"item text-dark\"><a href={`tel:${coach.phone}`}> {coach.phone}</a></span></h6>\r\n                        <h6 className='text-primary'>email:                      <span className=\"item text-dark\"><a href={`mailto:${coach.email}`}> {coach.email}</a></span></h6>\r\n                        <h6 className='text-primary'>Groupe sanguin:&nbsp;&nbsp; <span className=\"badge badge-danger light\">{coach.blood}</span> </h6>\r\n                      </div>\r\n                      <div className=\"social-icons m-3\">\r\n                        <h6 className='text-primary'>Nationalité:                 <span className=\"item text-dark\">{coach.nationality}</span> </h6>\r\n                        <h6 className='text-primary'>Date de naissance:           <span className=\"item text-dark\">{coach.birth_date}</span> </h6>\r\n                        <h6 className='text-primary'>Salaire par heure:           <a className=\"item text-dark\"> {coach.pay_per_hour}</a> </h6>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n                {/*Tab slider End*/}\r\n                <div className=\"col-xl-9 col-lg-6  col-md-6 col-xxl-7 col-sm-12\">\r\n                  <div className=\"product-detail-content\">\r\n                    {/*Product details*/}\r\n                    <div className=\"new-arrival-content pr\">\r\n                      <ul>\r\n                        {/* \r\n                          { client.maladie_name.map(maladie =>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                              <li className=\"custom-control-label\" key={maladie.id} htmlFor={maladie.id}> {maladie.name}</li>\r\n                            </div>\r\n                          )}\r\n                           */}\r\n                      </ul>\r\n                      <div className='row d-flex'>\r\n                        <div className=\"shopping-cart mt-3 col- col-md-6\">\r\n                          <h4>Note :</h4>\r\n                          <p>{coach.note}</p>\r\n                        </div>\r\n                        <div className=\"shopping-cart mt-3 col- col-md-6\">\r\n                          <h4>Adresse :</h4>\r\n                          <p>{coach.adress}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"col-lg-4  col-sm-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0\">\r\n              <h4 className=\"mb-0  fs-20\">Creneaux</h4>\r\n              \r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n            <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n              >\r\n              <div className=\"table-responsive card-table\">\r\n                <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left\">Début</th>\r\n                      <th>Fin</th>\r\n                      <th>Jour</th>\r\n                      <th>Activité</th>\r\n                      {/* <th className=\"text-right\">Total</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    \r\n                    {creneauxCoach.map(creneau => (\r\n                      <tr key={creneau.id}>\r\n                      <td className=\"text-left\">{creneau.hour_start}</td>\r\n                      {/* <td>0.18</td> */}\r\n                      <td>{creneau.hour_finish}</td>\r\n                      <td>{creneau.day}</td>\r\n                      <td>{creneau.activity_name}</td>\r\n                    </tr>\r\n                    ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </PerfectScrollbar>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0\">\r\n              <h4 className=\"mb-0  fs-20\">Virements</h4>\r\n              \r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n            <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n              >\r\n              <div className=\"table-responsive card-table\">\r\n                <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left\">Mantant</th>\r\n                      <th>Date</th>\r\n                      {/* <th className=\"text-right\">Total</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    \r\n                    {transCoach.map(trans => (\r\n                      <tr key={trans.id}>\r\n                      <td className=\"text-left\">{trans.amount}</td>\r\n                      {/* <td>0.18</td> */}\r\n                      <td className=\"text-right\">{trans.date_creation}</td>\r\n                    </tr>\r\n                    ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </PerfectScrollbar>\r\n\r\n            </div>\r\n            <div className=\"card-footer border-0 pt-0 text-center\">\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header border-0\">\r\n              <h4 className=\"mb-0  fs-20\">Presences</h4>\r\n              \r\n            </div>\r\n            <div className=\"card-body p-0\">\r\n            <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_TimeLine\"\r\n                className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n              >\r\n              <div className=\"table-responsive card-table\">\r\n                <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr >\r\n                      <th className=\"text-left\">Entrée</th>\r\n                      <th>Sortie</th>\r\n                      {/* <th className=\"text-right\">Activité</th> */}\r\n                      <th className=\"text-right\">Date</th>\r\n                    </tr>\r\n                  { presencesCoach.map ( presence => (\r\n                    <tr key={presence.id}>\r\n                      <td className=\"text-left\">{presence.hour_entree}</td>\r\n                      <td>{presence.hour_sortie}</td>\r\n                      {/* <td>{presence.client_activity}</td> */}\r\n                      <td className=\"text-right\">{presence.date}</td>\r\n                    </tr>\r\n                  \r\n                    ))}\r\n                  </thead>\r\n                  <tbody>\r\n                    \r\n                    \r\n                    \r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </PerfectScrollbar>\r\n            </div>\r\n            <div className=\"card-footer border-0 pt-0 text-center\">\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PaiementModal show={paiementModal} onShowShange={setPaiementModal} coachData={{coachId: coachID, coachName:coach.first_name}} />\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoachDetail;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientCreate.jsx",["528","529","530","531","532","533"],"import React, { useState, useEffect } from \"react\";\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport {  useHistory } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n\r\n\r\nconst CreateClient = () => {\r\n  const api = useAxios();\r\n  const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n  let maladiesEnd = `${process.env.REACT_APP_API_URL}/rest-api/maladies/`\r\n  \r\n  const history = useHistory();\r\n  const [selectedMaladies, setSelectedMaladies] = useState([])\r\n  const [civility, setCivility] = useState('MLL');\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [carte, setCarte] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [adress, setAdress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"Algérienne\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [blood, setBlood] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [etat, setEtat] = useState(\"\");\r\n  // const [dette, setDette] = useState(\"\");\r\n  \r\n  const [picture, setPicture] = useState(null);\r\n  // const [clientCreated, setClientCreated] = useState(false);\r\n  const [realMaladies, setRealMaladies] = useState([])\r\n  const [maladies, setMaladies] = useState([])\r\n  useEffect(() => {\r\n    api.get(maladiesEnd).then((res) => {\r\n      setMaladies(res.data)\r\n    })\r\n  }, []);\r\n  const handleCheckbox = (event) => {\r\n    const maladie = event.target.name\r\n    if ( event.target.checked){\r\n      setSelectedMaladies(checkedMaladies => [...checkedMaladies, Number(maladie)])\r\n      console.log('maladiieiieiis=======>', selectedMaladies);\r\n    }else {\r\n      for ( var i = 0 ; i < selectedMaladies.length; i++){\r\n        if (selectedMaladies[i] === Number(maladie)){\r\n          selectedMaladies.splice(i, 1)\r\n        } \r\n      }\r\n      selectedMaladies.splice(Number(maladie) , 1)\r\n      console.log('unchecked=======>', selectedMaladies);\r\n  }\r\n}\r\n\r\n// useEffect(() => {\r\n//   if (clientCreated == true) {\r\n//     notifyClientCreated()\r\n//     // setClientCreated(false)\r\n//   }\r\n// }, [clientCreated]);\r\n\r\n\r\nconst handleImage = (e) => {\r\n  // if (e.target.name === \"picture\") {\r\n    setPicture({\r\n      image: e.target.files,\r\n      });\r\n    // setPicture(e.target.files[0])\r\n      console.log('e.target.files',e.target.files);\r\n      console.log('e.target.name', e.target.name);\r\n  // }\r\n};\r\nconst getSelectedMaladies = ( ) => {\r\n  console.log(\"REAL MALADIES=======> \", realMaladies);\r\n  console.log(\"REAL MALADIES=======> \", selectedMaladies);\r\n  for (let i = 0; i < selectedMaladies.length; i++) {\r\n      // setRealMaladies([...realMaladies, selectedMaladies[i]['id']])\r\n    realMaladies.push(selectedMaladies[i]['id'])\r\n  }\r\n}\r\n  const HandleSubmit = async e => {\r\n    getSelectedMaladies()\r\n      // console.log(\"setSelectedMaladie=======> \", realMaladies);\r\n      console.log(\"setSelectedMaladie=======> \", realMaladies);\r\n    // console.log('les maladiiiies', maladies);\r\n    let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/clients/create`\r\n    e.preventDefault();\r\n\t\tlet formData = new FormData();\r\n\r\n\r\n\r\n    console.log('the carte', carte);\r\n\r\n      formData.append('civility',civility );\r\n      formData.append('carte',carte );\r\n      formData.append('last_name',lastName );\r\n      formData.append('first_name',firstName );\r\n      formData.append('adress',adress );\r\n      formData.append('phone',phone );\r\n      formData.append('email',email );\r\n      formData.append('nationality',nationality );\r\n      formData.append('birth_date',birthDate );\r\n      formData.append('blood',blood );\r\n      formData.append('note',note );\r\n      // formData.append('state',etat );\r\n      // formData.append('dette', Number(dette));\r\n\r\n      realMaladies.forEach(item => {\r\n        formData.append('maladies', item);\r\n      })\r\n      if (picture !== null) {\r\n        formData.append('picture', picture.image[0]);\r\n      }else{\r\n        console.log('il ny a pas de photo', typeof(picture));\r\n      }\r\n      api.post(endpoint, formData, config)\r\n      \t.then((res) => {\r\n      \t\t// console.log(res.data);\r\n          history.push(\"/client\")\r\n          notifySuccess('Adhérent Ajouté Avec Succée') \r\n          console.log('THE NEW CLIENT ONEEE ', res.data);\r\n      \t})\r\n      \t.catch((err) => {\r\n          notifyError(`Erreur,  ${err}`)\r\n          console.log('THE NEW CLIENT ', err.response.data[0])\r\n          console.log('THE NEW CLIENT ', err.response)\r\n        });\r\n    }\r\n  return (\r\n        <div className=\"\">\r\n         <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n          <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Profile Abonné</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={HandleSubmit}>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Carte*</label>\r\n                      <input type=\"text\" name=\"carte\" className=\"form-control\" value={carte} placeholder=\"Carte de l'adhérent\" required onChange={e => setCarte(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Nom*</label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Nom de l'adhérent\" required onChange={e => setLastName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Photo</label>\r\n                      <input type=\"file\" accept=\"image/*\" name=\"picture\" className=\"form-control\" placeholder=\"Photo d'identité \" onChange={handleImage}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\"> \r\n                      <label>Prénom</label>\r\n                      <input  type=\"text\" name=\"first_name\"  className=\"form-control\"  placeholder=\"Prénom de l'adhérent\" required onChange={e => setFirstName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Email</label>\r\n                      <input  type=\"email\" name=\"email\"  className=\"form-control\"  placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Adresse</label>\r\n                      <input type=\"text\"name=\"adress\" className=\"form-control\" onChange={e => setAdress(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Date de naissance*</label>\r\n                      <input type=\"date\" name=\"birth_date\" className=\"form-control\" max=\"2099-01-01\" onChange={e => setBirthDate(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Nationalité</label>\r\n                      <input type=\"text\" name=\"nationality\" value={nationality} className=\"form-control\" onChange={e => setNationality(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                      <label>Téléphone*</label>\r\n                      <input type=\"text\" name=\"phone\" className=\"form-control\" onChange={e => setPhone(e.target.value)} />\r\n                    </div>\r\n                  </div>\r\n                \r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Civilité*</label>\r\n                      <select  value={civility} name=\"civility\"  className=\"form-control\" onChange={e => setCivility(e.currentTarget.value)}>\r\n                      {/* <option value=\"option\" disabled>Cliquez pour choisir</option> */}\r\n                        <option value=\"MLL\" >Mlle</option>\r\n                        <option value=\"MME\" >Mme</option>\r\n                        <option value=\"MR\" >Mr</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Groupe sanguin*</label>\r\n                      <select defaultValue={\"option\"} name=\"blood\" className=\"form-control\"  onChange={e => setBlood(e.target.value)}>\r\n                      <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value='A-' >A-</option>\r\n                        <option value='A+' >A+</option>\r\n                        <option value='B-' >B-</option>\r\n                        <option value='B+' >B+</option>\r\n                        <option value='O-' >O-</option>\r\n                        <option value='O+' >O+</option>\r\n                        <option value='AB-'>AB-</option>\r\n                        <option value='AB+'>AB+</option>\r\n                      </select>\r\n                    </div>\r\n                    {/* <div className=\"form-group col-md-4\">\r\n                      <label>état</label>\r\n                      <select  defaultValue={\"option\"} name=\"state\" className=\"form-control\" onChange={e => setEtat(e.target.value)}>\r\n                        <option value=\"option\" disabled>Cliquez pour choisir</option>\r\n                        <option value=\"A\" >Active</option>\r\n                        <option value=\"N\" >Non active</option>\r\n                        <option value=\"S\" >Suspendue</option>\r\n                      </select>\r\n                    </div> */}\r\n                     <div className=\"form-group col-md-4\">\r\n                      <label>Maladies</label>\r\n                        <Autocomplete\r\n                            multiple\r\n                            onChange={((event, value) => { \r\n                                setSelectedMaladies(value) \r\n                                // console.log(s);\r\n                            //   const maladieId = value.indexOf(value)\r\n                            //   if (maladieId !== -1) {\r\n                            //     const neawCren = value.filter(val => val !== maladieId)\r\n                            //     console.log('calue de i , id', value.id);\r\n                            //     console.log('calue de i , vaaal', neawCren);\r\n                            //     console.log('calue de i , maladieId', maladieId);\r\n                            //     setSelectedMaladies(neawCren) \r\n                            //   }\r\n                            //   for (let i = 0; i < value.length; i++) {\r\n                               \r\n                            //       setSelectedMaladies([...selectedMaladies, value[i].id])\r\n                            //       console.log('calue de i , maladieId', maladieId);\r\n\r\n                            //       console.log(\"je suis laaa\");\r\n                            // }\r\n                            console.log('les maladies selectionné', selectedMaladies);\r\n                            })}\r\n                            // onChange={handleSubmit}\r\n                            options={maladies}\r\n                            id=\"size-small-standard-multi\"\r\n                            defaultValue={maladies[9]}\r\n                            //  value={activities[creneauActivite]}\r\n                            // getOptionSelected={(option) =>  option['id']}\r\n                            \r\n                            // getOptionSelected={(option) => console.log('hello', option.id )}\r\n                            getOptionLabel={(option) =>  (\r\n                                option['name'])}\r\n                            renderInput={(params) =>\r\n                              (<TextField {...params} name=\"maladies\" label=\"Maladies\" variant=\"outlined\" fullWidth />)}\r\n                          />\r\n                      </div>\r\n                  </div>\r\n                    {/* <div className=\"form-group col-md-4\">\r\n                    <label>Dettes</label>\r\n                      <input type=\"number\" name=\"dette\" className=\"form-control\" onChange={e => setDette(e.target.value)}/>\r\n                      <input type=\"number\" name=\"dette\" className=\"form-control\" onChange={e => setDette(e.target.value)}/> \r\n                    </div> */}\r\n                \r\n                {/* <div className=\"form-group col-md-4\">\r\n                    <label>\r\n                      Maladies\r\n                    </label>\r\n                    <div className=\"col-4\">\r\n                        { maladies.map(maladie =>\r\n                          <div className=\"custom-control custom-checkbox mb-3\">\r\n                            <input type=\"checkbox\" name={maladie.id} className=\"custom-control-input\" id={maladie.id} required onClick={handleCheckbox}/>\r\n                            <label className=\"custom-control-label\" htmlFor={maladie.id}> {maladie.name}</label>\r\n                          </div>\r\n                        )}\r\n                </div> */}\r\n                {/* </div> */}\r\n                 \r\n                  <div className=\"form-row\">\r\n                      <label>Note</label>\r\n                      <textarea name=\"note\" className=\"form-control\" onChange={e => setNote(e.target.value)}/>\r\n                </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n                    Creer\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\nexport default CreateClient;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\abonnement\\AbonnementCreate.jsx",["534"],"import React, { useState, useEffect } from \"react\";\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport {  useHistory } from \"react-router-dom\";\r\n\r\n \r\n\r\nconst AbonnementCreate = (props) => {\r\n  let activityEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/`\r\n  \r\n  const api = useAxios();\r\n\r\n  \r\n  // let presenceURI = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/${currentPresenceId}/`\r\n  const history = useHistory();\r\n  \r\n  // const [abActivity, setAbActivity] = useState([]);\r\n  const [abName, setAbName] = useState('')\r\n  const [abPrice, setabPrice] = useState('')\r\n  const [abNumDays, setAbNumDays] = useState('')\r\n  const [abSeancesQuantity, setAbSeancesQuantity] = useState('')\r\n  const [selectedActivities, setSelectedActivities] = useState([])\r\n  const [activities, setActivities] = useState([])\r\n  \r\n    //FK \r\n    useEffect(() => {\r\n      api.get(activityEnd).then((res) => {\r\n        setActivities(res.data)\r\n      })\r\n    }, []);\r\n\r\n  //FK \r\n  // useEffect(() => {\r\n  //   api.get(presenceURI).then((res) => {\r\n    \r\n  //     setAbActivity(res.data.activity)\r\n  //     setAbName(res.data.name)\r\n  //     setabPrice(res.data.price)\r\n  //     setAbNumDays(res.data.number_of_days)\r\n  //     setAbSeancesQuantity(res.data.seances_quantity)\r\n  //     setAbActivityName(res.data.activity_name)\r\n  //     setAbNumClients(res.data.clients_number)\r\n  //     console.log('the Presence instance is ======>', res.data);\r\n  // })\r\n  // }, []);\r\n\r\n\r\n// const setNewAbonnement = () => {\r\n//   if (creneau  === '') {\r\n//     const newClient = {\r\n//       hour_entree:hour_entree,\r\n//       hour_sortie:hour_sortie,\r\n//     }\r\n//     return newClient\r\n//   }else {\r\n//     const newClient = {\r\n//       hour_entree:hour_entree,\r\n//       hour_sortie:hour_sortie,\r\n//       creneau : Number(creneau)\r\n\r\n//     }\r\n//     return newClient\r\n//   }\r\n// }\r\nconst handleCheckbox = (event) => {\r\n  const activity = event.target.name\r\n    if ( event.target.checked){\r\n      setSelectedActivities(checkedActivities => [...checkedActivities, Number(activity)])\r\n      console.log('maladiieiieiis=======>', selectedActivities);\r\n    }else {\r\n      for ( var i = 0 ; i < selectedActivities.length; i++){\r\n        if (selectedActivities[i] === Number(activity)){\r\n          selectedActivities.splice(i, 1)\r\n        } \r\n      }\r\n      selectedActivities.splice(Number(activity) , 1)\r\n      console.log('unchecked=======>', selectedActivities);\r\n  }\r\n}\r\n\r\n\r\n  const HandleSubmit = async e => {\r\n  \r\n    console.log(\"setSelectedMaladie=======> \", selectedActivities);\r\n\r\n  // console.log('les maladiiiies', maladies);\r\n  let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/create`\r\n  e.preventDefault();\r\n  const newAbonnement = {\r\n    activity:selectedActivities,\r\n    name:abName,\r\n    price:abPrice,\r\n    number_of_days:abNumDays,\r\n    seances_quantity:abSeancesQuantity,\r\n  }\r\n    api.post(endpoint, newAbonnement).then( () => {\r\n      history.push(\"/client\")\r\n      console.log('THE NEW CLIENT ', newAbonnement);\r\n\r\n    })\r\n  }\r\n  return (\r\n        <div className=\"\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header justify-content-between\">\r\n              <h4 className=\"card-title\">Creer un nouvel Abonnement  </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={HandleSubmit}>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Libellé </label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Nom de l'abonnement \" onChange={e => setAbName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Prix</label>\r\n                      <input  type=\"number\" name=\"first_name\"  className=\"form-control\"  placeholder=\"prix \"onChange={e => setabPrice(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Nombre de jours</label>\r\n                      <input  type=\"text\" name=\"first_name\"  className=\"form-control\"  placeholder=\"ex : 30\"onChange={e => setAbNumDays(e.target.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Nombre de Séances </label>\r\n                      <input type=\"number\" name=\"last_name\" className=\"form-control\" placeholder=\"ex: 8\" onChange={e => setAbSeancesQuantity(e.target.value)}/>\r\n                    </div>\r\n                  <div className=\"col-6\">\r\n                  <label>\r\n                      Activitées\r\n                    </label>\r\n                    <div className=\"row\">\r\n                          { activities.map(acti =>\r\n                          <div className=\"col-6\">\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                  <input type=\"checkbox\" name={acti.id} className=\"custom-control-input\" id={acti.id}  onClick={handleCheckbox}/>\r\n                                  <label className=\"custom-control-label\" htmlFor={acti.id}> {acti.name}</label>\r\n                                </div>\r\n                          </div>\r\n                          )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Creer\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\nexport default AbonnementCreate;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\history\\HistoryTrans.jsx",["535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n/// images\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const ClientContext = React.createContext()\r\n  const HistoryTrans = () => {\r\n  const api = useAxios();\r\n  const formatDate = (date) => {\r\n      try {\r\n         const returned = new Date(date).toISOString().slice(0, 10)\r\n         return returned\r\n      } catch (error) {\r\n         const returned = new Date().toISOString().slice(0, 10)\r\n         return returned\r\n      }\r\n   }\r\n   // const getCurrentDay = (PresneceDate) => {\r\n   //    const date = new Date(PresneceDate).getDay()\r\n   \r\n   //    if (date === 0) {\r\n   //       return 'Dimanche'\r\n   //    }else if (date === 1){\r\n   //       return 'Lundi'\r\n   \r\n   //    }else if (date === 2){\r\n   //       return 'Mardi'\r\n   \r\n   //    }else if (date === 3){\r\n   //       return 'Mercredi'\r\n   \r\n   //    }else if (date === 4){\r\n   //       return 'Jeudi'\r\n   \r\n   //    }else if (date === 5){\r\n   //       return 'Vendredi'\r\n   //    }else {\r\n   //       return 'Samedi'\r\n   //    }\r\n   // } \r\n   // const [editModal, setEditModal] = useState(false);\r\n   // const [presneceCreateModal, setPresneceCreateModal] = useState(false);\r\n   const [nextpage, setNextpage] = useState(1);\r\n   const [client, setClient ] = useState('')\r\n   const [abcsData, setAbcsData] = useState([]);\r\n   const [users, setUsers] = useState([]);\r\n   const [userId, setUserId] = useState(\"\");\r\n   const [abcId, setAbcId] = useState(\"\");\r\n\r\n   const [clientId, setClientId ] = useState('')\r\n   // const [carteClient, setCarteClient ] = useState('')\r\n\r\n   const [searchValue, setSearchValue] = useState('')\r\n   const [searchBarActivated, setSearchBarActivated] = useState(false)\r\n   const [presenceData, setPresenceData] = useState([]);\r\n   const [presencesCount, setPresencesCount] = useState('')\r\n   const [startDate, setStartDate] = useState(formatDate(new Date('2000-01-01')));\r\n   const [endDate, setEndDate] = useState(formatDate(new Date()));\r\n   const [salleId, setSalleId] = useState('');\r\n   const [startHour, setStartHour] = useState('');\r\n   let usersEnd =  `${process.env.REACT_APP_API_URL}/rest-api/auth/users`\r\n\r\n   // console.table('els clieeents', salle);\r\n\r\n   // const capitalizeFirstLetter = (word) => {\r\n   //    if (word)\r\n   //    return word.charAt(0).toUpperCase() + word.slice(1);\r\n   //    return '';\r\n   // };\r\n   // console.log('le clieeeeen RFID', client);\r\n// \r\n\r\n\r\nuseEffect(() => {\r\n   api.get(usersEnd).then(res => {\r\n      setUsers(res.data)\r\n   })\r\n}, [])\r\n\r\nuseEffect(() => {\r\n   api.get(`${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/history?cl=${searchValue}&abc=${abcId}&start=${startDate}&end=${endDate}&usr=${userId}`).then(res => {\r\n      setAbcsData(res.data)\r\n      console.log('setAbcsData', res.data);\r\n   })\r\n}, [abcId, endDate, searchValue, startDate, userId])\r\n\r\n\r\n   // useEffect(() => {\r\n   //    const presenceDateDate = async () => {\r\n   //       const dateDebut = formatDate(startDate)\r\n   //       const dateFin = formatDate(endDate)\r\n   //       const result =  await api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/?page=${nextpage}&start_date=${dateDebut}&end_date=${dateFin}&abc__client_id=${searchValue}&creneau__activity__salle=${salleId}&hour=${startHour}&creneau__activity=${filterActivity}`)\r\n   //       setPresenceData(result.data.results)\r\n   //       setPresencesCount(result.data.count)\r\n   //    }\r\n   //    presenceDateDate()\r\n   // }, [startDate, endDate, clientId,nextpage, searchValue, client, presenceCreatedSuccess, presenceupdatedSuccess, salleId, startHour, filterActivity]);\r\n\r\n\r\n   return (\r\n      <Fragment>\r\n            <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div>\r\n         <div className=\"row d-flex justify-content-center mb-3 pb-3\">\r\n               <Link to={'history-abc'} className=\"text-light col-3\">\r\n                  <div className=\"btn btn-success\" >\r\n                        Historique Abonnements\r\n                  </div>\r\n               </Link> \r\n               <Link to={'history-trans'} className=\"text-light col-3\">\r\n                  <div className=\"btn btn-danger\" >\r\n                     Historique Transactions\r\n                  </div>\r\n               </Link> \r\n               <Link to={'history-presence'} className=\"text-light col-3\">\r\n                  <div className=\"btn btn-info\" >\r\n                     Historique Presences\r\n                  </div>\r\n               </Link> \r\n               {/* <Link to={'history-transactions'} className=\"text-light\">\r\n            <div className=\"btn btn-info col-3\" >\r\n                  Historique Transactions\r\n            </div>\r\n                  </Link> \r\n               <Link to={'history-presence'}className=\"text-light\">\r\n            <div className=\"btn btn-info col-3\" >\r\n            Historique Presences\r\n            </div>\r\n               </Link> */}\r\n         </div>\r\n         <div className=\"row d-flex m-3 py-4\" style={{backgroundColor:'#ffffff'}}>\r\n            <div className=\" col-md-2\">\r\n               <label style={{color:'#000000'}} >Adhérant (ID / Carte) </label>\r\n               <input type=\"text\" className=\"form-control\" placeholder=\"rechercher par ID Client\" value={searchValue} onChange={e => setSearchValue(e.target.value)}/>\r\n            </div>\r\n            <div className=\" col-md-2\">\r\n               <label style={{color:'#000000'}} >Abonnement ID </label>\r\n               <input type=\"text\" className=\"form-control\" placeholder=\"rechercher par ID Abonnement\" value={abcId} onChange={e => setAbcId(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} >Utilisateur</label>\r\n                  <Autocomplete\r\n                  // id={(option) =>  option['id']}\r\n               \r\n                  // onChange={handleSubmit}\r\n                  options={users}\r\n                  onChange={((event, value) =>  {\r\n                     try {\r\n                        setUserId(value.id)\r\n                     } catch (error) {\r\n                        setUserId('')\r\n                     }\r\n                  })}\r\n                  //  value={activities[creneauActivite]}\r\n                  getOptionSelected={(option) =>  option['id']}\r\n                  getOptionLabel={(option) =>  option['email']}\r\n                  style={{ color: '#000' }}\r\n                  renderInput={(params) => \r\n                     <TextField {...params} style={{color:\"#000\"}}  className='text-light' label=\"Séléectionner un utilisateur\" variant=\"outlined\"  \r\n                     InputLabelProps={{style: { color: '#000', borderColor:'#000' }, }}\r\n                     />}\r\n                  />\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"birth_date\">Date début </label>\r\n               <input type=\"date\" name=\"start_date\" className=\"form-control\" value={startDate}  onChange={e => setStartDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"end_date\">Date Fin </label>\r\n               <input type=\"date\" name=\"end_date\" className=\"form-control\" value={endDate} onChange={e => setEndDate(e.target.value)}/>\r\n            </div>\r\n            {/* <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"start_hour\">Heure du créneau</label>\r\n               <input type=\"time\" name=\"start_hour\" className=\"form-control\" value={startHour} onChange={e => setStartHour(e.target.value)}/>\r\n            </div> */}\r\n         </div>\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\" style={{padding: '5px'}}>\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> Abonnement ID </th>\r\n                                 <th> Adhérant</th>\r\n                                 <th> Date de création </th>\r\n                                 <th> Date de changement </th>\r\n                                 <th className=\"pl-5 width200\">Séances </th>\r\n                                 <th> Notes </th>\r\n                                 <th className='text-right'>Dettes </th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                              {abcsData.map(abc => (\r\n                                 <tr role=\"row presences\" key={abc.history_id} className=\"btn-reveal-trigger cursor-abonnement presences p-0\">\r\n                                    <td className=\"customer_shop_single\"> {abc.id} </td>\r\n                                    <td className=\"customer_shop_single\"> {abc.client} </td>\r\n                                    <td >{abc.created_date_time}</td>\r\n                                    <td >{abc.history_date}</td>\r\n                                    <td >{abc.is_time_volume ? abc.left_minutes : abc.is_free_access ? 'Forfait': abc.presence_quantity }</td>\r\n                                    <td className=\" text-left\">{abc.history_user_name}</td>\r\n                                    <td className=\" text-right text-danger\">{abc.reste}</td>\r\n                                 </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {/* <PresenceEditModal show={editModal} onShowShange={setEditModal} presenceData={{presenceId:presenceId, client:client, hourIn:hourIn, hourOut: hourOut, creneau:creneau, note:note, clientId:clientId, date:date, activity:activity}}/>\r\n            <PresenceCreateModal show={presneceCreateModal} onShowShange={setPresneceCreateModal} /> */}\r\n         </div>\r\n         {\r\n            !searchBarActivated &&\r\n            <div className='d-flex text-center justify-content-end'>\r\n                <div className='dataTables_info text-black' id='example5_info '>\r\n                  {/* Showing {activePag.current * sort + 1} to{' '}\r\n                  {data.length > (activePag.current + 1) * sort\r\n                    ? (activePag.current + 1) * sort\r\n                    : data.length}{' '}\r\n                  of {data.length} entries{' '} */}\r\n                </div>\r\n                <div className='dataTables_paginate paging_simple_numbers' id='example5_paginate' >\r\n                  <Button\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(nextpage - 1)\r\n                  }\r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'left', fontSize:'15px', paddingLeft:'8px'}}>\r\n                    Précédent\r\n                  </Button>\r\n                  <span >\r\n                      <input to='/transactions' type='number' className='paginate_button_client' onChange={e => setNextpage(e.target.value)} value={nextpage} style={{width: '100px', border: 'none', height:'99%', textAlign: 'center', fontSize:'15px', backgroundColor: '#ffffff'}}/>\r\n                  </span>\r\n                  <Button \r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'center', fontSize:'15px', padding:'2px'}}\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(Number(nextpage) + 1)\r\n                    }\r\n                  >\r\n                    Suivant\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n         }\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default HistoryTrans;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\planning\\Calendar.jsx",["561","562","563","564","565"],"import React, { useState , useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport useAxios from \"../useAxios\";\r\nimport CreneauEditModal from './CreneauEditModal';\r\nimport CreneauCreateModal from './CreneauCreateModal';\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import RefreshIcon from '@mui/icons-material/Refresh';\r\nimport {Col,Card,Table,} from \"react-bootstrap\";\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nexport const ModalState = React.createContext()\r\n\r\n\r\nlet sallesEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/`\r\nlet coachEnd = `${process.env.REACT_APP_API_URL}/rest-api/coachs/`\r\nlet planningEND = `${process.env.REACT_APP_API_URL}/rest-api/planning/`\r\nlet defaultSalleIdEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/default_salle/`\r\nlet defaultPlanningIdEnd = `${process.env.REACT_APP_API_URL}/rest-api/planning/default_planning/`\r\nlet activitiesEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/`\r\n\r\nconst Calendar = () => {\r\n  const api = useAxios();\r\n\r\n  const [activities, setActivities] = useState([])\r\n  const [coachs, setCoachs] = useState([])\r\n  const [plannings, setPlannings] = useState([])\r\n  const [salles, setSalles] = useState([])\r\n  \r\n  //FK \r\n  useEffect(() => {\r\n    api.get(activitiesEnd).then((res) => {setActivities(res.data)})\r\n    api.get(coachEnd).then((res) => {setCoachs(res.data)})\r\n    api.get(planningEND).then((res) => {setPlannings(res.data)})\r\n    api.get(sallesEnd).then((res) => {setSalles(res.data)})\r\n  }, []);\r\n\r\n  // const defaultSalleGet = useGetAPI(defaultSalleIdEnd)\r\n  // const defaultPlanningGet = useGetAPI(defaultPlanningIdEnd)\r\n  const [modal, setModal] = useState(false);\r\n  const [modalCreate, setModalCreate] = useState(false);\r\n\r\n  const [salleId, setSalleId] = useState('');\r\n  const [defaultSalle, setDefaultSalle] = useState(\"\");\r\n  const [defaultPlanning, setDefaultPlanning] = useState(\"\");\r\n\r\n  const [planningId, setPlanningId] = useState(\"\");\r\n  // const [salles, setSalles] = useState([]);\r\n\r\n  const [samedi, setSamedi] = useState([]);\r\n  const [dimanche, setDimanche] = useState([]);\r\n  const [lundi, setLundi] = useState([]);\r\n  const [mardi, setMardi] = useState([]);\r\n  const [mercredi, setMercredi] = useState([]);\r\n  const [jeudi, setJeudi] = useState([]);\r\n  const [vendredi, setVendredi] = useState([]);\r\n  const [creneauName, setCreneauName] = useState(\"\")\r\n  const [creneauColor, setCreneauColor] = useState(\"\")\r\n  const [selectedCreneau, setSelectedCreneau] = useState(\"\")\r\n  const [creneauActi, setCreneauActi] = useState(\"\")\r\n  const [creneauCoach, setCreneauCoach] = useState(\"\")\r\n  const [creneauPlanning, setCreneauPlanning] = useState(\"\")\r\n  const [creneauDay, setCreneauDay] = useState(\"\")\r\n  const [creneau, setCreneau] = useState(\"\")\r\n  \r\n\r\n  const [startHour, setStartHour] = useState(\"\")\r\n  const [endHour, setEndHour] = useState(\"\")\r\n\r\n  const [coachName, setCoachName] = useState(\"\")\r\n  const [activityName, setActivityName] = useState(\"\")\r\n  const [jour, setJour] = useState(\"\")\r\n  \r\n  const [clients, setClients] = useState([])\r\n// console.log('la sallels salles', salles);\r\n// console.log('la sallels id', salle);\r\n    let result1=[]\r\n    let result2=[]\r\n    let result3=[]\r\n    let result4=[]\r\n    let result5=[]\r\n    let result6=[]\r\n    let result7=[]\r\n\r\n    const DAYS_CHOICES = [\r\n      {day :'SA', label : 'Samedi'},\r\n      {day :'DI', label : 'Dimanche'},\r\n      {day :'LU', label : 'Lundi'},\r\n      {day :'MA', label : 'Mardi'},\r\n      {day :'ME', label : 'Mercredi'},\r\n      {day :'JE', label : 'Jeudi'},\r\n      {day :'VE', label : 'Vendredi'},\r\n]\r\n\r\nuseEffect(() => {\r\n  api.get(defaultSalleIdEnd).then(function name(response) {\r\n    setSalleId(response.data['default_salle'].id)\r\n    setDefaultSalle(response.data['default_salle'])\r\n  })\r\n  api.get(defaultPlanningIdEnd).then(function name(response) {\r\n    setPlanningId(response.data['default_planning'].id)\r\n    setDefaultPlanning(response.data['default_planning'])\r\n  })\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"salleId\", salleId)\r\n  console.log(\"planningId\", planningId)\r\n  const FetchData = () => {\r\n      api.get(`${process.env.REACT_APP_API_URL}/rest-api/creneau/by-salle-planning?sa=${salleId}&pl=${planningId}`)\r\n    .then(function (response) {\r\n      console.log('les creneaux ', response.data);\r\n      response.data.forEach((req) => {\r\n      if (req.day === \"SA\") {\r\n          console.log('req.day', req.day);\r\n          result1.push(req);\r\n          }else if(req.day === \"DI\"){\r\n            result2.push(req);\r\n          }else if (req.day === \"LU\"){\r\n            result3.push(req);\r\n          }else if(req.day === \"MA\"){\r\n            result4.push(req);\r\n          }else if(req.day === \"ME\"){\r\n            result5.push(req);\r\n          }else if(req.day === \"JE\"){\r\n            result6.push(req);\r\n          }else if(req.day === \"VE\"){\r\n            result7.push(req);\r\n          }\r\n      })\r\n        setSamedi(result1)\r\n        setDimanche(result2)\r\n        setLundi(result3)\r\n        setMardi(result4)\r\n        setMercredi(result5)\r\n        setJeudi(result6)\r\n        setVendredi(result7)\r\n      })\r\n  }\r\n  FetchData();\r\n}, [modal, modalCreate,salleId, planningId]);\r\n\r\n  console.log('selected  creneaux', selectedCreneau);\r\n\r\n\r\nconst handleSelectedCreneau = (day) => {\r\n  setSelectedCreneau(day.id)\r\n  setCreneau(day.id)\r\n  setCreneauActi(getActivity(activities, day.activity))\r\n  setCreneauCoach(getActivity(coachs, day.coach))\r\n  setCreneauPlanning(getActivity(plannings, day.planning))\r\n  setCreneauDay(getDay(DAYS_CHOICES, day.day))\r\n  setStartHour(day.hour_start)\r\n  setEndHour(day.hour_finish)\r\n  setClients(day.clients)\r\n  setCoachName(day.coach_name)\r\n  setActivityName(day.activity_name)\r\n  setJour(day.day)\r\n  setModal(true) \r\n  setCreneauName(day.name)\r\n  setCreneauColor(day.color)\r\n  console.log('creneau ', day);\r\n}\r\n\r\n const getActivity = (acti,creneauActi) => {\r\n  for (let i = 0; i < acti.length; i++) {\r\n    if (creneauActi == acti[i].id){\r\n       return i\r\n      }            \r\n  }\r\n}\r\nconst getDay = (days,creneauDay) => {\r\n  for (let i = 0; i < days.length; i++) {\r\n    if (creneauDay == days[i].day){\r\n      console.log('the day is :', creneauDay);\r\n       return i\r\n      }            \r\n  }\r\n}\r\n   return (\r\n      <div className=\"h-80\">\r\n              <ToastContainer\r\n                position='top-right'\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n         <div>\r\n          <div className=\"row d-flex justify-content-between mb-5\">\r\n             <div className=\"col-4\">\r\n             <Autocomplete\r\n                  options={plannings}\r\n                  getOptionLabel={(option) => option.name || ''}\r\n                  onChange={((event, value) =>  {\r\n                    if (value) {\r\n                      setPlanningId(value.id)\r\n                      setDefaultPlanning(value)\r\n                    }\r\n                  })} \r\n                  renderInput={(params) => (<TextField {...params} name=\"planning\" label=\"Plannings\" variant=\"outlined\" fullWidth />)}\r\n                />\r\n             </div>\r\n             <div className=\"col-4\">\r\n             <Autocomplete\r\n                    options={salles}\r\n                    getOptionLabel={(option) => option.name || ''}\r\n                    onChange={((event, value) =>  {\r\n                    if (value) {\r\n                      setSalleId(value.id)\r\n                      setDefaultSalle(value)\r\n                    }\r\n                    })} \r\n                    renderInput={(params) => (<TextField {...params} name=\"salle\" label=\"Salles\" variant=\"outlined\" fullWidth />)}\r\n                />\r\n              {/* <label>Salles</label>\r\n              <select name=\"activities\" defaultValue={salleId} className=\"form-control\" onChange={e => setSalleId(e.target.value)  }>\r\n                {salles.map( salle => (\r\n                  <option key={salle.id} value={salle.id}>{salle.name}</option>\r\n                ))}\r\n              </select> */}\r\n             </div>\r\n            <div className=\"btn btn-primary m-3 ml-auto\" onClick={e => setModalCreate(true)  }>+ Creneau</div>\r\n          </div>\r\n         <Col lg={12}>\r\n         {/* <RefreshIcon /> */}\r\n          <Card>\r\n          <Card.Title className=\"text-center\">Planning: {defaultPlanning.name} | salle de {defaultSalle.name}</Card.Title>\r\n            {/* <Card.Body> */}\r\n          <Table responsive bordered className=\"verticle-middle calendar\">\r\n            <tbody>\r\n              { dimanche.length > 0 &&\r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\", width: \"130px\"}}>\r\n                      <h4 className=\"pl-2 text-black\">Dimanche</h4>\r\n                  </th>\r\n                  <td className =\"d-flex\">\r\n                  { dimanche.map(day=> ( \r\n                    <div className =\"ml-1\" style={{border: \"none\"}}  key={day.id} id={day.id} onClick={() => handleSelectedCreneau(day)}>\r\n                        <div className=\"fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded\" style={{backgroundColor: day.creneau_color}}>\r\n                          <h5> {day.hour_start}<span> - </span> {day.hour_finish}</h5> \r\n                          <ul className='text-left'>\r\n                            <li>  {day.name ? day.name :day.coach_name }  </li>\r\n                            <li> {day.clients_count} Abonné</li>\r\n                            <li> {day.activity_name}</li>\r\n                          </ul> \r\n                        </div>\r\n                      </div> \r\n                      ))}\r\n                  </td>\r\n                </tr>\r\n              }\r\n              { lundi.length > 0 &&\r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className=\"pl-2 text-black\">Lundi</h4>\r\n                  </th>\r\n                  <td  className =\"d-flex\" style={{ padding: '3px'}}>\r\n                  { lundi.map(day=>   ( \r\n                    <div className =\"ml-1\" style={{border: \"none\"}} id={day.id} key={day.id} onClick={() => handleSelectedCreneau(day)}>\r\n                        <div className=\"fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded\" style={{backgroundColor: day.creneau_color}}>\r\n                            <h5> {day.hour_start}<span> - </span> {day.hour_finish}</h5> \r\n                            <ul className='text-left'>\r\n                            <li> {day.coach_name}</li>\r\n                            <li> {day.clients_count} Abonné</li>\r\n                            <li>{day.activity_name}</li> \r\n                            </ul> \r\n                          </div>\r\n                      </div> \r\n                      ))}\r\n                  </td>\r\n                </tr>\r\n              }\r\n              { mardi.length > 0 &&\r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\"}}>\r\n                        <h4 className=\"pl-2 text-black\">Mardi</h4>\r\n                  </th>\r\n                  <td className =\"d-flex\">\r\n                  { mardi.map(day=>   ( \r\n                      <div className =\"ml-1\"  style={{border: \"none\"}} id={day.id}  key={day.id} onClick={() => handleSelectedCreneau(day)}>\r\n                        <div className=\"fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded\" style={{backgroundColor: day.creneau_color}}>\r\n                            <h5> {day.hour_start}<span> - </span> {day.hour_finish}</h5> \r\n                            <ul className='text-left'>\r\n                            <li>  {day.name ? day.name :day.coach_name }</li>\r\n                            <li> {day.clients_count} Abonné</li>\r\n                            <li>{day.activity_name}</li>\r\n                            </ul> \r\n                          </div>\r\n                      </div> \r\n                      ))}\r\n                  </td>\r\n                </tr>\r\n              }\r\n              { mercredi.length > 0 &&\r\n                \r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\"}}>\r\n                        <h4 className=\"pl-2 text-black\">Mercredi</h4>\r\n                  </th>\r\n                  <td className =\"d-flex\">\r\n                  { mercredi.map(day=>   ( \r\n                      <div className =\"ml-1\" style={{border: \"none\"}}  id={day.id}  key={day.id} onClick={() => handleSelectedCreneau(day)}>\r\n                        <div className=\"fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded\" style={{backgroundColor: day.creneau_color}}>\r\n                            <h5> {day.hour_start}<span> - </span> {day.hour_finish}</h5> \r\n                            <ul className='text-left'>\r\n                            <li>  {day.coach_name}</li>\r\n                            <li> {day.clients_count} Abonné</li>\r\n                            <li>{day.activity_name}</li>\r\n                            </ul> \r\n                          </div>\r\n                      </div> \r\n                      ))}\r\n                  </td>\r\n                </tr>\r\n              }\r\n              { jeudi.length > 0 &&\r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\"}}>\r\n                        <h4 className=\"pl-2 text-black\">Jeudi</h4>\r\n                  </th>\r\n                  <td className =\"d-flex\">\r\n                  { jeudi.map(day=>   ( \r\n                      <div className =\"ml-1\"  style={{border: \"none\"}}  id={day.id}   key={day.id} onClick={() => handleSelectedCreneau(day)}>\r\n                        <div className=\"fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded\" style={{backgroundColor: day.creneau_color}}>\r\n                            <h5> {day.hour_start}<span> - </span> {day.hour_finish}</h5> \r\n                            <ul className='text-left'>\r\n                            <li>  {day.coach_name}</li>\r\n                            <li> {day.clients_count} Abonné</li>\r\n                            <li>{day.activity_name}</li>\r\n                            </ul> \r\n                          </div>\r\n                      </div> \r\n                      ))}\r\n                  </td>\r\n                </tr>\r\n              }\r\n              { vendredi.length > 0 &&\r\n                \r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\"}}>\r\n                        <h4 className=\"pl-2 text-black\">Vendredi</h4>\r\n                  </th>\r\n                  <td className =\"d-flex\">\r\n                  { vendredi.map(day=>   ( \r\n                      \r\n                      <div className =\"ml-1\" style={{border: \"none\"}}  id={day.id} key={day.id}  onClick={() => handleSelectedCreneau(day)}>\r\n                        <div className=\"fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded\" style={{backgroundColor: day.creneau_color}}>\r\n                            <h5> {day.hour_start}<span> - </span> {day.hour_finish}</h5> \r\n                            <ul className='text-left'>\r\n                            <li>  {day.coach_name}</li>\r\n                            <li> {day.clients_count} Abonné</li>\r\n                            <li>{day.activity_name}</li>\r\n                            </ul> \r\n                          </div>\r\n                      </div> \r\n                      ))}\r\n                  </td>\r\n                </tr>\r\n              }\r\n              { samedi.length > 0 &&\r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className=\"pl-2 text-black\">Samedi</h4>\r\n                  </th>\r\n                  <td className =\"d-flex\">\r\n                  { samedi.map(day=> ( \r\n                      <div className =\"ml-1\" style={{border: \"none\"}}  id={day.id}  key={day.id} onClick={() => handleSelectedCreneau(day)}>\r\n                        <div className=\"fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded\" style={{backgroundColor: day.creneau_color}}>\r\n                            <h5> {day.hour_start}<span> - </span> {day.hour_finish}</h5> \r\n                            <ul className='text-left'>\r\n                              <li> {day.coach_name}</li>\r\n                              <li> {day.clients_count} Abonné</li>\r\n                              <li> {day.activity_name}</li>\r\n                            </ul> \r\n                          </div>\r\n                      </div> \r\n\r\n                      ))}\r\n                  </td>\r\n                </tr>\r\n              }\r\n            </tbody>\r\n          </Table>\r\n            <div>\r\n              <CreneauCreateModal show={modalCreate} onShowShange={setModalCreate} \r\n                creneauData={{\r\n                creneauId : selectedCreneau,\r\n                activite :creneauActi,\r\n                activities : activities,\r\n                coach : creneauCoach,\r\n                planning: creneauPlanning,\r\n                coachs: coachs,\r\n                plannings: plannings,\r\n                days : DAYS_CHOICES,\r\n                day : creneauDay ,\r\n                startHour: startHour,\r\n                endHour: endHour, \r\n                clients : clients\r\n                }} \r\n              />\r\n              <CreneauEditModal show={modal} onShowShange={setModal} creneauData={{\r\n                creneauId : selectedCreneau,\r\n                activite :creneauActi,\r\n                activities : activities,\r\n                coach : creneauCoach,\r\n                planning: creneauPlanning,\r\n                coachs: coachs,\r\n                plannings: plannings,\r\n                days : DAYS_CHOICES,\r\n                day : creneauDay ,\r\n                startHour: startHour,\r\n                endHour: endHour, \r\n                clients : clients,\r\n                coachName : coachName,\r\n                activityName : activityName,\r\n                jour : jour,\r\n                creneauName: creneauName,\r\n                creneauColor: creneauColor,\r\n                creneau: creneau\r\n                }} />\r\n              </div>\r\n          </Card>\r\n        </Col>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\history\\HistoryPresence.jsx",["566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n/// images\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const ClientContext = React.createContext()\r\nconst HistoryPresence = () => {\r\n   const api = useAxios();\r\n\r\n   const formatDate = (date) => {\r\n      try {\r\n         const returned = new Date(date).toISOString().slice(0, 10)\r\n         return returned\r\n      } catch (error) {\r\n         const returned = new Date().toISOString().slice(0, 10)\r\n         return returned\r\n      }\r\n   }\r\n   // const getCurrentDay = (PresneceDate) => {\r\n   //    const date = new Date(PresneceDate).getDay()\r\n   \r\n   //    if (date === 0) {\r\n   //       return 'Dimanche'\r\n   //    }else if (date === 1){\r\n   //       return 'Lundi'\r\n   \r\n   //    }else if (date === 2){\r\n   //       return 'Mardi'\r\n   \r\n   //    }else if (date === 3){\r\n   //       return 'Mercredi'\r\n   \r\n   //    }else if (date === 4){\r\n   //       return 'Jeudi'\r\n   \r\n   //    }else if (date === 5){\r\n   //       return 'Vendredi'\r\n   //    }else {\r\n   //       return 'Samedi'\r\n   //    }\r\n   // } \r\n   // const [editModal, setEditModal] = useState(false);\r\n   // const [presneceCreateModal, setPresneceCreateModal] = useState(false);\r\n   const [nextpage, setNextpage] = useState(1);\r\n   const [client, setClient ] = useState('')\r\n   const [presencesData, setPresencesData] = useState([]);\r\n   const [users, setUsers] = useState([]);\r\n   const [userId, setUserId] = useState(\"\");\r\n   const [abcId, setAbcId] = useState(\"\");\r\n\r\n   const [clientId, setClientId ] = useState('')\r\n   // const [carteClient, setCarteClient ] = useState('')\r\n\r\n   const [searchValue, setSearchValue] = useState('')\r\n   const [searchBarActivated, setSearchBarActivated] = useState(false)\r\n   const [presencesCount, setPresencesCount] = useState('')\r\n   const [startDate, setStartDate] = useState(formatDate(new Date('2000-01-01')));\r\n   const [endDate, setEndDate] = useState(formatDate(new Date()));\r\n   let usersEnd =  `${process.env.REACT_APP_API_URL}/rest-api/auth/users`\r\n   // console.table('els clieeents', salle);\r\n\r\n   // const capitalizeFirstLetter = (word) => {\r\n   //    if (word)\r\n   //    return word.charAt(0).toUpperCase() + word.slice(1);\r\n   //    return '';\r\n   // };\r\n   // console.log('le clieeeeen RFID', client);\r\n// \r\n\r\nuseEffect(() => {\r\n   api.get(usersEnd).then(res => {\r\n      setUsers(res.data)\r\n   })\r\n}, [])\r\n\r\n// api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/history/?cl=${searchValue}&abc=${abcId}&start=${startDate}&end=${endDate}&usr=${userId}`).then(res => {\r\nuseEffect(() => {\r\n   api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/history/`).then(res => {\r\n         setPresencesData(res.data)\r\n      console.log('setAbcsData', res.data);\r\n   })\r\n}, [abcId, endDate, searchValue, startDate, userId])\r\n\r\n\r\n   // useEffect(() => {\r\n   //    const presenceDateDate = async () => {\r\n   //       const dateDebut = formatDate(startDate)\r\n   //       const dateFin = formatDate(endDate)\r\n   //       const result =  await api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/?page=${nextpage}&start_date=${dateDebut}&end_date=${dateFin}&abc__client_id=${searchValue}&creneau__activity__salle=${salleId}&hour=${startHour}&creneau__activity=${filterActivity}`)\r\n   //       setPresenceData(result.data.results)\r\n   //       setPresencesCount(result.data.count)\r\n   //    }\r\n   //    presenceDateDate()\r\n   // }, [startDate, endDate, clientId,nextpage, searchValue, client, presenceCreatedSuccess, presenceupdatedSuccess, salleId, startHour, filterActivity]);\r\n\r\n\r\n   return (\r\n      <Fragment>\r\n            <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div>\r\n         <div className=\"row d-flex justify-content-center mb-3 pb-3\">\r\n            <Link to={'history-abc'} className=\"text-light col-3\">\r\n               <div className=\"btn btn-success\" >\r\n                     Historique Abonnements\r\n               </div>\r\n            </Link> \r\n            <Link to={'history-trans'} className=\"text-light col-3\">\r\n               <div className=\"btn btn-danger\" >\r\n                  Historique Transactions\r\n               </div>\r\n            </Link> \r\n            <Link to={'history-presence'} className=\"text-light col-3\">\r\n               <div className=\"btn btn-info\" >\r\n                  Historique Presences\r\n               </div>\r\n            </Link> \r\n         </div>\r\n         <div className=\"row d-flex m-3 py-4\" style={{backgroundColor:'#ffffff'}}>\r\n            <div className=\" col-md-2\">\r\n               <label style={{color:'#000000'}} >Adhérant (ID / Carte) </label>\r\n               <input type=\"text\" className=\"form-control\" placeholder=\"rechercher par ID Client\" value={searchValue} onChange={e => setSearchValue(e.target.value)}/>\r\n            </div>\r\n            <div className=\" col-md-2\">\r\n               <label style={{color:'#000000'}} >Presence ID </label>\r\n               <input type=\"text\" className=\"form-control\" placeholder=\"rechercher par ID Abonnement\" value={abcId} onChange={e => setAbcId(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} >Utilisateur</label>\r\n                  <Autocomplete\r\n                  // id={(option) =>  option['id']}\r\n                  // onChange={handleSubmit}\r\n                  options={users}\r\n                  onChange={((event, value) =>  {\r\n                     try {\r\n                        setUserId(value.id)\r\n                     } catch (error) {\r\n                        setUserId('')\r\n                     }\r\n                  })}\r\n                  //  value={activities[creneauActivite]}\r\n                  getOptionSelected={(option) =>  option['id']}\r\n                  getOptionLabel={(option) =>  option['email']}\r\n                  style={{ color: '#000' }}\r\n                  renderInput={(params) => \r\n                     <TextField {...params} style={{color:\"#000\"}}  className='text-light' label=\"Séléectionner un utilisateur\" variant=\"outlined\"  \r\n                     InputLabelProps={{style: { color: '#000', borderColor:'#000' }, }}\r\n                     />}\r\n                  />\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"birth_date\">Date début </label>\r\n               <input type=\"date\" name=\"start_date\" className=\"form-control\" value={startDate}  onChange={e => setStartDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"end_date\">Date Fin </label>\r\n               <input type=\"date\" name=\"end_date\" className=\"form-control\" value={endDate} onChange={e => setEndDate(e.target.value)}/>\r\n            </div>\r\n            {/* <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"start_hour\">Heure du créneau</label>\r\n               <input type=\"time\" name=\"start_hour\" className=\"form-control\" value={startHour} onChange={e => setStartHour(e.target.value)}/>\r\n            </div> */}\r\n         </div>\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\" style={{padding: '5px'}}>\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> Présence ID </th>\r\n                                 <th> Adhérant</th>\r\n                                 <th> Date de création </th>\r\n                                 <th> Date de changement </th>\r\n                                 <th> H entrée </th>\r\n                                 <th> H sortie </th>\r\n                                 <th> Utilisateur </th>\r\n                                 <th> Notes </th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                              {presencesData.map(presence => (\r\n                                 <tr role=\"row presences\" key={presence.history_id} className=\"btn-reveal-trigger cursor-abonnement presences p-0\">\r\n                                    <td className=\"customer_shop_single\"> {presence.id} </td>\r\n                                    <td className=\"customer_shop_single\"> {presence.client} </td>\r\n                                    <td >{presence.date}</td>\r\n                                    <td >{presence.history_date}</td>\r\n                                    <td >{presence.hour_entree }</td>\r\n                                    <td >{presence.hour_sortie }</td>\r\n                                    <td className=\" text-left\">{presence.history_user_name}</td>\r\n                                    <td className=\" text-left\">{presence.note}</td>\r\n                                 </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {/* <PresenceEditModal show={editModal} onShowShange={setEditModal} presenceData={{presenceId:presenceId, client:client, hourIn:hourIn, hourOut: hourOut, creneau:creneau, note:note, clientId:clientId, date:date, activity:activity}}/>\r\n            <PresenceCreateModal show={presneceCreateModal} onShowShange={setPresneceCreateModal} /> */}\r\n         </div>\r\n         {\r\n            !searchBarActivated &&\r\n            <div className='d-flex text-center justify-content-end'>\r\n                <div className='dataTables_info text-black' id='example5_info '>\r\n                  {/* Showing {activePag.current * sort + 1} to{' '}\r\n                  {data.length > (activePag.current + 1) * sort\r\n                    ? (activePag.current + 1) * sort\r\n                    : data.length}{' '}\r\n                  of {data.length} entries{' '} */}\r\n                </div>\r\n                <div className='dataTables_paginate paging_simple_numbers' id='example5_paginate' >\r\n                  <Button\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(nextpage - 1)\r\n                  }\r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'left', fontSize:'15px', paddingLeft:'8px'}}>\r\n                    Précédent\r\n                  </Button>\r\n                  <span >\r\n                      <input to='/transactions' type='number' className='paginate_button_client' onChange={e => setNextpage(e.target.value)} value={nextpage} style={{width: '100px', border: 'none', height:'99%', textAlign: 'center', fontSize:'15px', backgroundColor: '#ffffff'}}/>\r\n                  </span>\r\n                  <Button \r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'center', fontSize:'15px', padding:'2px'}}\r\n\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(Number(nextpage) + 1)\r\n                    }\r\n                  >\r\n                    Suivant\r\n                  </Button>\r\n                </div>\r\n\r\n              </div>\r\n         }\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default HistoryPresence;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\history\\HistoryAbc.jsx",["586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n/// images\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const ClientContext = React.createContext()\r\nconst HistoryList = () => {\r\n     const api = useAxios();\r\n\r\n   const formatDate = (date) => {\r\n      try {\r\n         const returned = new Date(date).toISOString().slice(0, 10)\r\n         return returned\r\n      } catch (error) {\r\n         const returned = new Date().toISOString().slice(0, 10)\r\n         return returned\r\n      }\r\n   }\r\n   // const getCurrentDay = (PresneceDate) => {\r\n   //    const date = new Date(PresneceDate).getDay()\r\n   \r\n   //    if (date === 0) {\r\n   //       return 'Dimanche'\r\n   //    }else if (date === 1){\r\n   //       return 'Lundi'\r\n   \r\n   //    }else if (date === 2){\r\n   //       return 'Mardi'\r\n   \r\n   //    }else if (date === 3){\r\n   //       return 'Mercredi'\r\n   \r\n   //    }else if (date === 4){\r\n   //       return 'Jeudi'\r\n   \r\n   //    }else if (date === 5){\r\n   //       return 'Vendredi'\r\n   //    }else {\r\n   //       return 'Samedi'\r\n   //    }\r\n   // } \r\n   // const [editModal, setEditModal] = useState(false);\r\n   // const [presneceCreateModal, setPresneceCreateModal] = useState(false);\r\n   const [nextpage, setNextpage] = useState(1);\r\n   const [client, setClient ] = useState('')\r\n   const [abcsData, setAbcsData] = useState([]);\r\n   const [users, setUsers] = useState([]);\r\n   const [userId, setUserId] = useState(\"\");\r\n   const [abcId, setAbcId] = useState(\"\");\r\n\r\n   const [clientId, setClientId ] = useState('')\r\n   // const [carteClient, setCarteClient ] = useState('')\r\n\r\n   const [searchValue, setSearchValue] = useState('')\r\n   const [searchBarActivated, setSearchBarActivated] = useState(false)\r\n   const [presenceData, setPresenceData] = useState([]);\r\n   const [presencesCount, setPresencesCount] = useState('')\r\n   const [startDate, setStartDate] = useState(formatDate(new Date('2000-01-01')));\r\n   const [endDate, setEndDate] = useState(formatDate(new Date()));\r\n   let usersEnd =  `${process.env.REACT_APP_API_URL}/rest-api/auth/users`\r\n\r\n   // console.table('els clieeents', salle);\r\n\r\n   // const capitalizeFirstLetter = (word) => {\r\n   //    if (word)\r\n   //    return word.charAt(0).toUpperCase() + word.slice(1);\r\n   //    return '';\r\n   // };\r\n   // console.log('le clieeeeen RFID', client);\r\n// \r\n\r\n\r\nuseEffect(() => {\r\n   api.get(usersEnd).then(res => {\r\n      setUsers(res.data)\r\n   })\r\n}, [])\r\n\r\nuseEffect(() => {\r\n   api.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-client-history?cl=${searchValue}&abc=${abcId}&start=${startDate}&end=${endDate}&usr=${userId}`).then(res => {\r\n      setAbcsData(res.data)\r\n      console.log('setAbcsData', res.data);\r\n   })\r\n}, [abcId, endDate, searchValue, startDate, userId])\r\n\r\n\r\n   // useEffect(() => {\r\n   //    const presenceDateDate = async () => {\r\n   //       const dateDebut = formatDate(startDate)\r\n   //       const dateFin = formatDate(endDate)\r\n   //       const result =  await api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/?page=${nextpage}&start_date=${dateDebut}&end_date=${dateFin}&abc__client_id=${searchValue}&creneau__activity__salle=${salleId}&hour=${startHour}&creneau__activity=${filterActivity}`)\r\n   //       setPresenceData(result.data.results)\r\n   //       setPresencesCount(result.data.count)\r\n   //    }\r\n   //    presenceDateDate()\r\n   // }, [startDate, endDate, clientId,nextpage, searchValue, client, presenceCreatedSuccess, presenceupdatedSuccess, salleId, startHour, filterActivity]);\r\n\r\n\r\n   return (\r\n      <Fragment>\r\n            <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div>\r\n         <div className=\"row d-flex justify-content-center mb-3 pb-3\">\r\n               <Link to={'history-abc'} className=\"text-light col-3\">\r\n                  <div className=\"btn btn-success\" >\r\n                        Historique Abonnements\r\n                  </div>\r\n               </Link> \r\n               <Link to={'history-trans'} className=\"text-light col-3\">\r\n                  <div className=\"btn btn-danger\" >\r\n                     Historique Transactions\r\n                  </div>\r\n               </Link> \r\n               <Link to={'history-presence'} className=\"text-light col-3\">\r\n                  <div className=\"btn btn-info\" >\r\n                     Historique Presences\r\n                  </div>\r\n               </Link> \r\n               {/* <Link to={'history-transactions'} className=\"text-light\">\r\n            <div className=\"btn btn-info col-3\" >\r\n                  Historique Transactions\r\n            </div>\r\n                  </Link> \r\n               <Link to={'history-presence'}className=\"text-light\">\r\n            <div className=\"btn btn-info col-3\" >\r\n            Historique Presences\r\n            </div>\r\n               </Link> */}\r\n         </div>\r\n         <div className=\"row d-flex m-3 py-4\" style={{backgroundColor:'#ffffff'}}>\r\n            <div className=\" col-md-2\">\r\n               <label style={{color:'#000000'}} >Adhérant (ID / Carte) </label>\r\n               <input type=\"text\" className=\"form-control\" placeholder=\"rechercher par ID Client\" value={searchValue} onChange={e => setSearchValue(e.target.value)}/>\r\n            </div>\r\n            <div className=\" col-md-2\">\r\n               <label style={{color:'#000000'}} >Abonnement ID </label>\r\n               <input type=\"text\" className=\"form-control\" placeholder=\"rechercher par ID Abonnement\" value={abcId} onChange={e => setAbcId(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} >Utilisateur</label>\r\n                  <Autocomplete\r\n                  // id={(option) =>  option['id']}\r\n                  // onChange={handleSubmit}\r\n                  options={users}\r\n                  onChange={((event, value) =>  {\r\n                     try {\r\n                        setUserId(value.id)\r\n                     } catch (error) {\r\n                        setUserId('')\r\n                     }\r\n                  })}\r\n                  //  value={activities[creneauActivite]}\r\n                  getOptionSelected={(option) =>  option['id']}\r\n                  getOptionLabel={(option) =>  option['email']}\r\n                  style={{ color: '#000' }}\r\n                  renderInput={(params) => \r\n                     <TextField {...params} style={{color:\"#000\"}}  className='text-light' label=\"Séléectionner un utilisateur\" variant=\"outlined\"  \r\n                     InputLabelProps={{style: { color: '#000', borderColor:'#000' }, }}\r\n                     />}\r\n                  />\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"birth_date\">Date début </label>\r\n               <input type=\"date\" name=\"start_date\" className=\"form-control\" value={startDate}  onChange={e => setStartDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"end_date\">Date Fin </label>\r\n               <input type=\"date\" name=\"end_date\" className=\"form-control\" value={endDate} onChange={e => setEndDate(e.target.value)}/>\r\n            </div>\r\n            {/* <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"start_hour\">Heure du créneau</label>\r\n               <input type=\"time\" name=\"start_hour\" className=\"form-control\" value={startHour} onChange={e => setStartHour(e.target.value)}/>\r\n            </div> */}\r\n         </div>\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\" style={{padding: '5px'}}>\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> Abonnement ID </th>\r\n                                 <th> Adhérant</th>\r\n                                 <th> Date de création </th>\r\n                                 <th> Date de changement </th>\r\n                                 <th className=\"pl-5 width200\">Séances </th>\r\n                                 <th> Utilisateur </th>\r\n                                 <th className='text-right'>Dettes </th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                              {abcsData.map(abc => (\r\n                                 <tr role=\"row presences\" key={abc.history_id} className=\"btn-reveal-trigger cursor-abonnement presences p-0\">\r\n                                    <td className=\"customer_shop_single\"> {abc.id} </td>\r\n                                    <td className=\"customer_shop_single\"> {abc.client} </td>\r\n                                    <td >{abc.created_date_time}</td>\r\n                                    <td >{abc.history_date}</td>\r\n                                    <td >{abc.is_time_volume ? abc.left_minutes : abc.is_free_access ? 'Forfait': abc.presence_quantity }</td>\r\n                                    <td className=\" text-left\">{abc.history_user_name}</td>\r\n                                    <td className=\" text-right text-danger\">{abc.reste}</td>\r\n                                 </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {/* <PresenceEditModal show={editModal} onShowShange={setEditModal} presenceData={{presenceId:presenceId, client:client, hourIn:hourIn, hourOut: hourOut, creneau:creneau, note:note, clientId:clientId, date:date, activity:activity}}/>\r\n            <PresenceCreateModal show={presneceCreateModal} onShowShange={setPresneceCreateModal} /> */}\r\n         </div>\r\n         {\r\n            !searchBarActivated &&\r\n            <div className='d-flex text-center justify-content-end'>\r\n                <div className='dataTables_info text-black' id='example5_info '>\r\n                  {/* Showing {activePag.current * sort + 1} to{' '}\r\n                  {data.length > (activePag.current + 1) * sort\r\n                    ? (activePag.current + 1) * sort\r\n                    : data.length}{' '}\r\n                  of {data.length} entries{' '} */}\r\n                </div>\r\n                <div className='dataTables_paginate paging_simple_numbers' id='example5_paginate' >\r\n                  <Button\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(nextpage - 1)\r\n                  }\r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'left', fontSize:'15px', paddingLeft:'8px'}}>\r\n                    Précédent\r\n                  </Button>\r\n                  <span >\r\n                      <input to='/transactions' type='number' className='paginate_button_client' onChange={e => setNextpage(e.target.value)} value={nextpage} style={{width: '100px', border: 'none', height:'99%', textAlign: 'center', fontSize:'15px', backgroundColor: '#ffffff'}}/>\r\n                  </span>\r\n                  <Button \r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'center', fontSize:'15px', padding:'2px'}}\r\n\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(Number(nextpage) + 1)\r\n                    }\r\n                  >\r\n                    Suivant\r\n                  </Button>\r\n                </div>\r\n\r\n              </div>\r\n         }\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default HistoryList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\Configuration.jsx",["608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628"],"import React, { Fragment, useState, useEffect , useCallback} from \"react\";\r\nimport { Dropdown, Tab, Nav, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n \r\nimport ShortCuts from \"../ShortCuts\";\r\n\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\n\r\nimport useAxios from \"../useAxios\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nimport AbonnementCreateModal from './AbonnementCreateModal';\r\nimport AbonnementEditModal from './AbonnementEditModal';\r\nimport SalleActiviteCreateModal from './SalleActiviteCreateModal'\r\nimport PlanningCreateModal from './PlanningCreateModal'\r\nimport SalleActiviteEditModal from './SalleActiviteEditModal'\r\nimport ActivityCreateModal from './ActivityCreateModal'\r\nimport ActivityEditModal from './ActivityEditModal'\r\nimport PlanningEditModal from './PlanningEditModal'\r\nimport AbonnementListModal from './AbonnementListModal'\r\nimport MaladieCreateModal from './MaladieCreateModal'\r\nimport MaladieEditModal from './MaladieEditModal'\r\nimport DoorModal from './DoorModal'\r\nconst Configuration = (props) => {\r\n  const api = useAxios();\r\n  const abonnementsListEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    const maladiesEnd = `${process.env.REACT_APP_API_URL}/rest-api/maladies/`\r\n    const doorsEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/door/`\r\n    const activitiesEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/`\r\n    const salleActivitiesEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/`\r\n    const planningsEND = `${process.env.REACT_APP_API_URL}/rest-api/planning/`\r\n    const startListenEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/start_listening`\r\n    const stopListenEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/stop_listening`\r\n    \r\n    const [ abonnements , setAbonnements] =useState([])\r\n    const [ maladies , setMaladies] =useState([])\r\n    const [ doors , setDoors] =useState([])\r\n    const [selectedActivities, setSelectedActivities] = useState([])\r\n\r\n    const [ abonnementListModal , setAbonnementListModal] =useState(false)\r\n    const [ abonnementCreateModal , setAbonnementCreateModal] =useState(false)\r\n    const [ abonnementEditModal , setAbonnementEditModal] =useState(false)\r\n    const [ salleActiviteCreateModal , setSalleActiviteCreateModal] =useState(false)\r\n    const [ salleActiviteEditModal , setSalleActiviteEditModal] =useState(false)\r\n    const [ planningCreateModal , setPlanningCreateModal] =useState(false)\r\n    const [ planningEditModal , setPlanningEditModal] =useState(false)\r\n    const [ activityCreateModal, setActivityCreateModal] = useState(false)\r\n    const [ activityEditModal, setActivityEditModal] = useState(false)\r\n    const [ maladieCreateModal, setMaladieCreateModal] = useState(false)\r\n    const [ maladieEditModal, setMaladieEditModal] = useState(false)\r\n    const [ doorModal, setDoorModal] = useState(false)\r\n\r\n    const [abonnementId, setAbonnementId] = useState('')\r\n    const [activityId, setActivityId] = useState('')\r\n    const [salleId, setSalleId] = useState('')\r\n    const [maladieId, setMaladieId] = useState('')\r\n    const [maladieName, setMaladieName] = useState('')\r\n    const [planId, setPlanId] = useState('')\r\n    const [planName, setPlanName] = useState('')\r\n    const [isDefaultPlanning, setDefaultPlanning] = useState('')\r\n    const [isDefaultSalle, setDefaultSalle] = useState('')\r\n    const [salleName, setSalleName] = useState('')\r\n    const [doorId, setDoorId] = useState('')\r\n    const [doorIp, setDoorIp] = useState('')\r\n    const [doorUsername, setDoorUsername] = useState('')\r\n    const [doorPassword, setDoorPassword] = useState('')\r\n\r\n    const [color, setColor] = useState(\"\")\r\n    const [salle, setSalle] = useState(\"\")\r\n    const [initEffect, setInitEffect] = useState(false)\r\n    const [gymStatus, setGymStatus] = useState(false)\r\n    const [activityName, setActivityName] = useState(\"\")\r\n    const [abDuree, setAbDuree] = useState(\"\")\r\n\r\n    const [abIdFromList, setAbIdFromList] = useState(\"\")\r\n    const [salllesActivities, setSalllesActivities] = useState([]);\r\n    const [dureeInd, setDureeInd] = useState(\"\");\r\n    const [typeOf, setTypeOf] = useState(\"\");\r\n    const [activityColor, setActivityColor] = useState(\"\");\r\n    \r\n    \r\n    const [activities, setActivities] = useState([])\r\n    const DureeAb = [\r\n        {mois :'1 Jour', jours : 1},\r\n        {mois :'15 Jour', jours : 15},\r\n        {mois :'45 Jour', jours : 45},\r\n        {mois :'1 mois', jours : 30},\r\n        {mois :'2 mois', jours : 60},\r\n        {mois :'3 mois', jours : 90},\r\n        {mois :'4 mois', jours : 120},\r\n        {mois :'6 mois', jours : 180},\r\n        {mois :'12 mois', jours : 360},\r\n      ]\r\n\r\n    useEffect(() => {\r\n        api.get(maladiesEnd).then(res =>{\r\n            setMaladies(res.data)\r\n            console.log('Maladies', res.data);\r\n        })\r\n    }, [maladieCreateModal, maladieEditModal, maladiesEnd]);\r\n\r\n    useEffect(() => {\r\n        api.get(activitiesEND).then(res =>{\r\n            setActivities(res.data)\r\n        })\r\n    }, [activitiesEND, activityCreateModal, activityEditModal]);\r\n\r\n    useEffect(() => {\r\n        api.get(salleActivitiesEND).then(res =>{\r\n            setSalllesActivities(res.data)\r\n        })\r\n    }, [salleActiviteCreateModal, salleActivitiesEND, salleActiviteEditModal]);\r\n\r\n    useEffect(() => {\r\n        api.get(doorsEnd).then(res =>{\r\n            setDoors(res.data)\r\n        })\r\n    }, [doorModal]);\r\n    // useEffect(() => {\r\n    //     setDureeInd(DureeAb.findIndex(x => x.jours === Number(abDuree)))\r\n    //     console.log('dureee de labonnement', DureeAb.findIndex(x => x.jours === Number(abDuree)));\r\n    //  }, [abDuree, abonnementCreateModal]);\r\n\r\n    // const salllesActivities = useGetAPI(salleActivitiesEND)\r\n    const [plannings, setPlannings] = useState([]);\r\n    useEffect(() => {\r\n    api.get(planningsEND).then(res => {\r\n        setPlannings(res.data)\r\n        console.log('plannings', res.data);\r\n    })\r\n    }, [planningEditModal, planningCreateModal, planningsEND]);\r\n\r\n    const getAbonnementsActitivties = (actiAbon) => {\r\n        const provActiId = []\r\n        const indexesList = []\r\n        for (let i = 0; i < salllesActivities.length; i++) {\r\n          const element = salllesActivities[i];\r\n          provActiId.push(element.id)\r\n        }\r\n        console.log(provActiId);\r\n        for (let i = 0; i < actiAbon.length; i++) {\r\n          const acti = actiAbon[i];\r\n          const index = provActiId.indexOf(acti) \r\n          // console.log('indexes', indexes);\r\n          indexesList.push(salllesActivities[index])\r\n        }\r\n        return indexesList    \r\n    }\r\n    const setSelectedSalle = (salles, salleId ) => {\r\n        for (let i = 0; i < salles.length; i++) {\r\n            if (salleId == salles[i].id){\r\n               return i\r\n            }            \r\n        }\r\n    }\r\n    const openTheGym = () => {\r\n        if (gymStatus === false) {\r\n            api.get(startListenEND).then(res => {\r\n                notifySuccess('Toutes les Portes sont activé')\r\n                setGymStatus(true)\r\n              }).catch( err => {\r\n                notifyError(\"Erreur lors de l'ouverture des portes, veuillez contacter le support'\")\r\n              })\r\n        }else{\r\n            notifyError('Toutes les Portes sont déja activé')\r\n        }\r\n    }\r\n    const closeTheGym = () => {\r\n        if (gymStatus === true) {\r\n            api.get(stopListenEND).then(res => {\r\n                notifySuccess('Toutes les Portes sont Désactivé')\r\n                setGymStatus(true)\r\n              }).catch( err => {\r\n                notifyError(\"Erreur lors de la fermeture des portes, veuillez contacter le support'\")\r\n              })\r\n        }else{\r\n            notifyError('Toutes les Portes sont déja Désactivé')\r\n        }\r\n    }\r\n\r\n    const getFkIndex = (list,selctedItem) => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          if (selctedItem === list[i].id){\r\n              console.log('the activiti salle ID',i);\r\n             return i\r\n            }            \r\n        }\r\n      }\r\n\r\n//  testFunc is the function to send data from child to parent # is triggered from the child\r\n    const TestFunc = useCallback((abId, acti) =>  {\r\n        if (abId !== '') {\r\n            setAbIdFromList(abId)\r\n            setAbonnementId(abId)\r\n            setSelectedActivities(getAbonnementsActitivties(acti))\r\n            setAbonnementEditModal(true)\r\n            }\r\n        }, [abonnementListModal])\r\n\r\n    const getDureeIndex = (duree) => {\r\n        const laDuree =DureeAb.findIndex(x => x.jours === duree)\r\n        console.log('selected duree', duree);\r\n        return laDuree\r\n    }\r\n    useEffect(() => {\r\n        //  const clientId = props.match.params.id;\r\n         const fetchData = async () => {\r\n            try {\r\n               const res = await api.get(abonnementsListEND);\r\n               setAbonnements(res.data)\r\n                console.log('ghirrrr =creneauxClient', abonnements);\r\n            } catch (error) {\r\n               console.log(error, 'erreur presneces');\r\n            }\r\n         }\r\n         fetchData();\r\n      }, [props.match.params.id, abonnementEditModal, abonnementCreateModal] );\r\n      console.log('selected activities', selectedActivities);\r\n   return (\r\n      <Fragment>\r\n         <>\r\n            <ToastContainer\r\n                position='top-right'\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n                <ShortCuts />\r\n            </div>\r\n            <div className=\"row d-flex justify-content-around m-3\">\r\n                <div>\r\n                    <Button className=\"btn btn-success\" onClick={ e => {openTheGym()}}>Ouvrir La salle</Button>\r\n                </div>\r\n                <div>\r\n                    <Button className=\"btn btn-danger\" onClick={ e => {closeTheGym()}}>Fermer La salle</Button>\r\n                {/* <Button onClick={ closeTheGym()}>fermé La salle</Button> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-lg-2 col-sm-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"card-title\">Planning</h4>\r\n                            <Button onClick={e => { setPlanningCreateModal(true)}}>Ajouter</Button>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nom du planning </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {plannings.map( plan => (\r\n                    <tr className='cursor-abonnement text-left' key={plan.id} onClick={e => {\r\n                        // setplanActiviteEditModal(true)\r\n                        setPlanId(plan.id)\r\n                        setPlanName(plan.name)\r\n                        setDefaultPlanning(plan.is_default)\r\n                        setPlanningEditModal(true)\r\n                        // setSelectedActivities(getsallesActitivties(salle.activity))\r\n                    }}>\r\n                      <td >{plan.name}</td>\r\n                    </tr>\r\n                  ))}\r\n                  </tbody>\r\n                </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-2 col-sm-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"card-title\">Salle</h4>\r\n                            <Button onClick={e => { \r\n                                setSalleActiviteCreateModal(true)\r\n                                \r\n                                }}>Ajouter</Button>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <table className=\"table text-center bg-warning-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Nom de la salle </th>\r\n                      <th>Adresse IP</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {salllesActivities.map( salle => (\r\n                    <tr className='cursor-abonnement text-left' key={salle.id} onClick={e => {\r\n                        setInitEffect(true)\r\n                        setSalleActiviteEditModal(true)\r\n                        setSalleId(salle.id)\r\n                        setDefaultSalle(salle.is_default)\r\n                        setSalleName(salle.name)\r\n                        setDoorId(getFkIndex(doors, salle.door))\r\n                        setDoorIp(salle.get_adress)\r\n                        console.log(initEffect)\r\n                        // setSelectedActivities(getsallesActitivties(salle.activity))\r\n                    }}>\r\n                      <td >{salle.name}</td>\r\n                      <td >{salle.get_door}</td>\r\n                    </tr>\r\n                  ))}\r\n                    </tbody>\r\n                    </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* type abonnement va au modal */}\r\n                <div className=\"col-xl-4 col-lg-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"card-title\">Activitées</h4>\r\n                            <Button onClick={e => { setActivityCreateModal(true)}}>Ajouter</Button>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <PerfectScrollbar   style={{ height: \"370px\" }}   id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\" >\r\n                                <div className=\"table-responsive card-table\">\r\n                                    <table className=\"table text-center bg-warning-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"text-left\">Nom</th>\r\n                                                <th >Salle</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {activities.map( activity => (\r\n                                            <tr className='cursor-abonnement' key={activity.id} onClick={e => {\r\n                                                setActivityEditModal(true)\r\n                                                setActivityId(activity.id)\r\n                                                setActivityName(activity.name)\r\n                                                setColor(activity.color)\r\n                                                setSalleId(getFkIndex(salllesActivities, activity.salle))\r\n                                            }}>\r\n                                                <td className=\"text-left\">{activity.name}</td>\r\n                                                <td >{activity.salle_name}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </PerfectScrollbar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* DEBUT MALADIES */}\r\n                <div className=\"col-xl-4 col-lg-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"card-title\">Maladies</h4>\r\n                            <Button onClick={e => { setMaladieCreateModal(true)}}>Ajouter</Button>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <PerfectScrollbar   style={{ height: \"370px\" }}   id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\" >\r\n                                <div className=\"table-responsive card-table\">\r\n                                    <table className=\"table text-center bg-warning-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"text-left\">Nom</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {maladies.map( maladie => (\r\n                                            <tr className='cursor-abonnement' key={maladie.id} onClick={e => {\r\n                                                setMaladieEditModal(true)\r\n                                                setMaladieId(maladie.id)\r\n                                                setMaladieName(maladie.name)\r\n                                            }}>\r\n                                                <td className=\"text-left\">{maladie.name}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </PerfectScrollbar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* FIN MALADIES */}\r\n                 {/* DEBUT portes */}\r\n                 <div className=\"col-xl-4 col-lg-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"card-title\">Portes</h4>\r\n                            <Button onClick={e => { \r\n                                setDoorModal(true)\r\n                                setDoorId('')\r\n                                setDoorIp('')\r\n                                setDoorUsername('')\r\n                                setDoorPassword('')\r\n                                }}>Ajouter</Button>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <PerfectScrollbar   style={{ height: \"370px\" }}   id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\" >\r\n                                <div className=\"table-responsive card-table\">\r\n                                    <table className=\"table text-center bg-warning-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"text-left\">Nom</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {doors.map( door => (\r\n                                            <tr className='cursor-abonnement' key={door.id} onClick={e => {\r\n                                                setDoorModal(true)\r\n                                                setDoorId(door.id)\r\n                                                setDoorIp(door.ip_adress)\r\n                                                setDoorUsername(door.username)\r\n                                                setDoorPassword(door.password)\r\n                                            }}>\r\n                                                <td className=\"text-left\">{door.ip_adress}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </PerfectScrollbar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* FIN portes */}\r\n                <div className=\" col-lg-6 config-tableaux\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4  className=\"card-title ajouter\">Type D'abonnement</h4>\r\n                            <Button onClick={e => { setAbonnementCreateModal(true)}}>Ajouter</Button>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <PerfectScrollbar   style={{ height: \"370px\" }}   id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\" >\r\n                                <div className=\"table-responsive card-table\">\r\n                                    <table className=\"table text-center bg-warning-hover config-tableaux\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"text-left\">Abonnement</th>\r\n                                                <th>Durée <br /> <small>(seances/ heures)</small></th>\r\n                                                <th className=\"text-right\">Nombre d'activités'</th>\r\n                                                <th >Inscrits</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {abonnements.map( abonnement => (\r\n                                            <tr className='cursor-abonnement' key={abonnement.id} onClick={ async e => {\r\n                                                setAbonnementEditModal(true)\r\n                                                setAbonnementId(abonnement.id)\r\n                                                setSelectedActivities(getAbonnementsActitivties(abonnement.salles))\r\n                                                setAbDuree(abonnement.number_of_days)\r\n                                                setTypeOf(abonnement.type_of)\r\n                                                await setDureeInd(getDureeIndex(abonnement.number_of_days))\r\n                                            }}>\r\n                                                <td className=\"text-left\">{abonnement.name}</td>\r\n                                                <td>{abonnement.seances_quantity}</td>\r\n                                                <td className=\"text-right\">{abonnement.salles.length}</td>\r\n                                                <td className=\"text-right\">{abonnement.clients_number}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </PerfectScrollbar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <div className=\"row\">\r\n            \r\n        {/* <div className=\"col-xl-6 col-lg-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"card-title\">Activités</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"basic-form\">\r\n                                <form onSubmit={(e) => e.preventDefault()}>\r\n                                    <div className=\"form-group row\">\r\n                                        <label className=\"col-sm-3 col-form-label\">Nom de la salle</label>\r\n                                        <div className=\"col-sm-9\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"...\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\">\r\n                                        <div className=\"col-sm-10\">\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                                Valider\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                \r\n        </div>\r\n        <AbonnementCreateModal show={abonnementCreateModal} onShowShange={setAbonnementCreateModal} abonnementData={{abonnementId: abonnementId}} />\r\n        <ActivityCreateModal show={activityCreateModal} onShowShange={setActivityCreateModal} activityData={{\r\n            activityId: activityId, \r\n            salllesActivities : salllesActivities\r\n            }} />\r\n        <ActivityEditModal show={activityEditModal} onShowShange={setActivityEditModal} activityData={{\r\n            activityId: activityId, \r\n            salllesActivities : salllesActivities, \r\n            color:color, \r\n            salle: salle, \r\n            activityName: activityName, \r\n            salles: salllesActivities, \r\n            salleId:salleId}} />\r\n        <SalleActiviteCreateModal  show={salleActiviteCreateModal} onShowShange={setSalleActiviteCreateModal}  salleData={{doors : doors}} />\r\n        <PlanningCreateModal  show={planningCreateModal} onShowShange={setPlanningCreateModal}  />\r\n        <MaladieCreateModal  show={maladieCreateModal} onShowShange={setMaladieCreateModal}  />\r\n        <MaladieEditModal  show={maladieEditModal} onShowShange={setMaladieEditModal} maladieData={{\r\n            maladieId : maladieId,\r\n            maladieName : maladieName\r\n        }} />\r\n        <DoorModal  show={doorModal} onShowShange={setDoorModal} doorData={{\r\n            doorId : doorId,\r\n            doorIp : doorIp,\r\n            doorUsername: doorUsername,\r\n            doorPassword: doorPassword\r\n        }} />\r\n        <PlanningEditModal  show={planningEditModal} onShowShange={setPlanningEditModal} planningData={{\r\n            planId : planId,\r\n            planName :planName,\r\n            isDefaultPlanning: isDefaultPlanning,\r\n        }}  />\r\n        < AbonnementListModal  show={abonnementListModal} onShowShange={setAbonnementListModal} abonnementData={TestFunc} />\r\n        \r\n\r\n        < SalleActiviteEditModal  show={salleActiviteEditModal} onShowShange={setSalleActiviteEditModal}  salleData={{\r\n            salleId : salleId,\r\n            salleName : salleName,\r\n            isDefaultSalle : isDefaultSalle,\r\n            doors : doors,\r\n            doorId : doorId,\r\n            doorIp : doorIp,\r\n            }} />\r\n        <AbonnementEditModal show={abonnementEditModal} onShowShange={setAbonnementEditModal} \r\n        abonnementData={\r\n            {\r\n            abonnementId: abonnementId,\r\n            selectedActivities: selectedActivities,\r\n            activities : activities,\r\n            salles: salllesActivities, \r\n            dureeInd: dureeInd,\r\n            // typeOf : typeOf\r\n            }\r\n            } />\r\n         </>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default Configuration;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\abonnement\\AbonnementList.jsx",["629","630","631","632"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport Search from \"../../layouts/Search\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport useAxios from \"../useAxios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst Drop = (props) => {\r\n   return <Dropdown>\r\n            <Dropdown.Toggle variant=\"\" className=\"table-dropdown i-false\">\r\n               <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                     <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\"></rect>\r\n                     <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\"></circle>\r\n                     <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\"></circle>\r\n                     <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\"></circle>\r\n                  </g>\r\n               </svg>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n               <Dropdown.Item href={`/abonnements/edit/${props.id}`}>Modifier</Dropdown.Item>\r\n               <Dropdown.Item type='button' className=\"text-danger\" onClick={ async () => {\r\n                    await useAxios.delete(`${process.env.REACT_APP_API_URL}/rest-api/abonnements/delete/${props.id}/`)\r\n                    }}>\r\n                   Supprimer\r\n                </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n         </Dropdown>\r\n};\r\n\r\n\r\n\r\nconst PresenceList = () => {\r\n   const api = useAxios();\r\n   let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n  const [savedAbonnements, setSavedAbonnements] = useState([])\r\n\r\n\r\n   useEffect(() => {\r\n      api.get(endpoint).then((res) => {\r\n         savedAbonnements(res.data)\r\n      })\r\n    }, []);\r\n\r\n\r\n   console.table('els clieeents', savedAbonnements);\r\n   const capitalizeFirstLetter = (word) => {\r\n      if (word)\r\n          return word.charAt(0).toUpperCase() + word.slice(1);\r\n      return '';\r\n   };\r\n\r\n   return (\r\n      <Fragment>\r\n          <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div>\r\n            <Search name= 'Abonnée' lien= \"/abonnements/create\"/>\r\n\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> ID </th>\r\n                                 <th>Nom</th>\r\n                                 <th>Prix</th>\r\n                                 <th> Durée (jours) </th>\r\n                                 <th className=\"pl-5 width200\"> Nombre de séances </th>\r\n                                 <th> Activité </th>\r\n                                 <th> Nombre d'inscrits </th>\r\n                                 {/* <th>Adhesion</th>\r\n                                 <th></th> */}\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                           {savedAbonnements.map(abonnement => (\r\n                              <tr role=\"row\" key={abonnement.id} className=\"btn-reveal-trigger\">\r\n                                 <td className=\"customer_shop_single\"> {abonnement.id} </td>\r\n                                 <td className=\"py-3\">\r\n                                    <Link to={`/abonnement/detail/${abonnement.id}`}>\r\n                                       <div className=\"media d-flex align-items-center\">\r\n                                        \r\n                                          <div className=\"media-body\">\r\n                                             <h5 className=\"mb-0 fs--1\">\r\n                                             {abonnement.name}\r\n                                             </h5>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td className=\"py-2\">{abonnement.price}</td>\r\n                                 <td className=\"py-2\">{abonnement.number_of_days}</td>\r\n                                 <td className=\"py-2 pl-5 wspace-no\"> {abonnement.seances_quantity} </td>\r\n                                 <td className=\"py-2\">{abonnement.activity_name}</td>\r\n                                 <td className=\"py-2\">{abonnement.clients_number}</td>\r\n                                 <td className=\"py-2 text-right\">\r\n                                    <Drop id={abonnement.id}/>\r\n                                 </td>\r\n                              </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default PresenceList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\abonnement\\AbonnementEdit.jsx",["633","634","635","636","637","638"],"import React, { useState, useEffect } from \"react\";\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport {  useHistory } from \"react-router-dom\";\r\n\r\n \r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst AbonnementEdit = (props) => {\r\n  let activityEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/`\r\n  const api = useAxios();\r\n\r\n  const abonnementId = props.match.params.id;\r\n  \r\n  let presenceURI = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/${abonnementId}/`\r\n  let presenceEditURI = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/${abonnementId}/`\r\n  const history = useHistory();\r\n  const [abActivity, setAbActivity] = useState([]);\r\n  const [abName, setAbName] = useState('')\r\n  const [abPrice, setabPrice] = useState('')\r\n  const [abNumDays, setAbNumDays] = useState('')\r\n  const [abSeancesQuantity, setAbSeancesQuantity] = useState('')\r\n  const [abActivityName, setAbActivityName] = useState('')\r\n  const [abNumClients, setAbNumClients] = useState('')\r\n  const [selectedActivities, setSelectedActivities] = useState([])\r\n  const [isSelected, setIsSelected] = useState(true)\r\n  const [activities, setActivities] = useState([])\r\n  \r\n  useEffect(() => {\r\n    api.get(activityEnd).then((res) => {\r\n      setActivities(res.data)\r\n    })\r\n  }, []);\r\n\r\n  //FK \r\n  useEffect(() => {\r\n    api.get(presenceURI).then((res) => {\r\n    \r\n      setAbActivity(res.data.activity)\r\n      setSelectedActivities(res.data.activity)//fzefzefezfezf\r\n      setAbName(res.data.name)\r\n      setabPrice(res.data.price)\r\n      setAbNumDays(res.data.number_of_days)\r\n      setAbSeancesQuantity(res.data.seances_quantity)\r\n      setAbActivityName(res.data.activity_name)\r\n      setAbNumClients(res.data.clients_number)\r\n    })\r\n  }, []);\r\n  \r\n  console.log('the Presence instance is ======>',selectedActivities, abActivity);\r\n\r\n// const setNewAbonnement = () => {\r\n//   if (creneau  === '') {\r\n//     const newClient = {\r\n//       hour_entree:hour_entree,\r\n//       hour_sortie:hour_sortie,\r\n//     }\r\n//     return newClient\r\n//   }else {\r\n//     const newClient = {\r\n//       hour_entree:hour_entree,\r\n//       hour_sortie:hour_sortie,\r\n//       creneau : Number(creneau)\r\n\r\n//     }\r\n//     return newClient\r\n//   }\r\n// }\r\n  // const getSelected = (activities, selAct )=> {\r\n\r\n  //   for (let i = 0; i < activities.length; i++) {\r\n  //     if ( activities[i] === selAct.id){\r\n  //       console.log('activities[i] === selAct.id', activities[i],selAct.id);\r\n  //       return isSelected ? true : false\r\n  //     }\r\n  //   }\r\n  // }\r\n    // useEffect(() => {\r\n\r\n  // }, [selectedActivities]);\r\n  // useEffect(() => {\r\n  //   const initialIsChecked = activities.reduce((selectedActivities,activity) => {\r\n  //     selectedActivities[activity] = false;\r\n  //     return selectedActivities;\r\n  //   }, {})\r\n  //   console.log('the initial state ', initialIsChecked);\r\n  //   setIsSelected(initialIsChecked)\r\n  //   console.log('the initial state ', initialIsChecked);\r\n  // }, [])\r\n  const getSelected = (activity )=> {\r\n    for (let i = 0; i < selectedActivities.length; i++) {\r\n      if ( selectedActivities[i] === activity){\r\n        console.log('activities[i] === selAct.id', selectedActivities[i],selectedActivities, activity);\r\n        return true \r\n      }\r\n    }\r\n  }\r\n\r\n  \r\nconst handleCheckbox = (event) => {\r\n  const activity = event.target.name\r\n    if ( event.target.checked){\r\n      setSelectedActivities(checkedActivities => [...checkedActivities, Number(activity)])\r\n      // setAbActivity(checkedActivities => [...checkedActivities, Number(activity)])\r\n      console.log('maladiieiieiis=======>', selectedActivities);\r\n      // setIsSelected(true)\r\n    }else {\r\n      // setIsSelected(false)\r\n\r\n      for ( var i = 0 ; i < selectedActivities.length; i++){\r\n        if (selectedActivities[i] === Number(activity)){\r\n\r\n          selectedActivities.splice(i, 1)\r\n        } \r\n      }\r\n\r\n      selectedActivities.splice(Number(activity) , 1)\r\n      console.log('unchecked=======>', selectedActivities);\r\n  }\r\n}\r\n  const HandleSubmit = async e => {\r\n    console.log('unchecked=======>', selectedActivities);\r\n\r\n      e.preventDefault();\r\n      const newAbonnement = {\r\n        name:abName,\r\n        price:abPrice,\r\n        number_of_days:abNumDays,\r\n        activity:selectedActivities,\r\n        seances_quantity:abSeancesQuantity,\r\n      }\r\n      api.put(presenceEditURI, newAbonnement).then( () => {\r\n        history.push(\"/client\")\r\n        console.log('THE NEW CLIENT ', newAbonnement);\r\n  \r\n      })\r\n      // history.push(\"/abonnements\")\r\n      // refreshPage()\r\n  }\r\n\r\n  return (\r\n        <div className=\"\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header justify-content-between\">\r\n              <div><h4 className=\"card-title\">Abonnement    <span className=\"text-success\">{abName}</span> </h4> </div>\r\n              <div><h4 className=\"card-title\">Nombre d'inscrits    <span className=\"text-success\">{abNumClients}</span> </h4> </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={HandleSubmit}>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Libellé </label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\"value={abName} placeholder=\"Nom du client\" onChange={e => setAbName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Prix</label>\r\n                      <input  type=\"text\" name=\"first_name\"  className=\"form-control\" value={abPrice} placeholder=\"Prénom du client\"onChange={e => setabPrice(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Nombre de jours</label>\r\n                      <input  type=\"text\" name=\"first_name\"  className=\"form-control\" value={abNumDays} placeholder=\"Prénom du client\"onChange={e => setAbNumDays(e.target.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n                      <label>Nombre de Séances </label>\r\n                      <input type=\"text\" name=\"last_name\" className=\"form-control\"value={abSeancesQuantity} placeholder=\"Nom du client\" onChange={e => setAbSeancesQuantity(e.target.value)}/>\r\n                    </div>\r\n                  \r\n                    <div className=\"col-6\">\r\n                    <label>\r\n                      Activitées\r\n                    </label>\r\n                    <div className=\"row\">\r\n                          { activities.map(acti =>\r\n                          <div key={acti.id} className=\"col-6\">\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                  <input checked={getSelected(acti.id)} type=\"checkbox\" name={acti.id} className=\"custom-control-input\" id={acti.id}  onClick={handleCheckbox}/>\r\n                                  <label className=\"custom-control-label\" htmlFor={acti.id}> {acti.name}</label>\r\n                                </div>\r\n                          </div>\r\n                          )}\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Modifier\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n  )\r\n}\r\nexport default AbonnementEdit;\r\n\r\n\r\n\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientList.jsx",["639","640","641","642","643","644","645","646","647","648"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown, Button } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\n\r\n/// images\r\nimport avartar5 from \"../../../images/avatar/5.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ShortCuts from \"../ShortCuts\";\r\n\r\n\r\n\r\nexport const ClientContext = React.createContext()\r\n// function refreshPage() {\r\n//    window.location.reload(false);\r\n//  }\r\nfunction refreshPage() {\r\n   window.location.reload(false);\r\n }\r\n\r\n\r\nconst ClientList = () => {\r\n   const api = useAxios();\r\n\r\n   const formatDate = (date) => {\r\n      try {\r\n         const returned = new Date(date).toISOString().slice(0, 10)\r\n         return returned\r\n      } catch (error) {\r\n         const returned = new Date().toISOString().slice(0, 10)\r\n         return returned\r\n      }\r\n   }\r\n\r\n   const [nextpage, setNextpage] = useState(1);\r\n   const [clientData, setclientData] = useState([]);\r\n   const [searchValue, setSearchValue] = useState('')\r\n   const [startDate, setStartDate] = useState(formatDate(new Date('2021-01-05')));\r\n   const [endDate, setEndDate] = useState(formatDate(new Date()));\r\n\r\n   const [searchBarActivated, setSearchBarActivated] = useState(false)\r\n   var endpoint = `${process.env.REACT_APP_API_URL}/rest-api/clients-name/?page=${nextpage}`\r\n   var searchEndpoint = `${process.env.REACT_APP_API_URL}/rest-api/clients-name/?search=${searchValue}`\r\n   \r\nuseEffect(() =>  {\r\n   if (searchValue !== '') {\r\n      api.get(searchEndpoint).then(res => {\r\n         setclientData(res.data.results)\r\n         console.log('le resultat des clients est ', res.data);\r\n      })\r\n   }else {\r\n      api.get(endpoint).then(res => {\r\n         setclientData(res.data.results)\r\n         console.log('le resultat des clients est ', res.data);\r\n      })}\r\n}, [nextpage, searchValue]);\r\n\r\nconst [clientStatus, setClientStatus] = useState(null);\r\n\r\n\r\napi.get(endpoint).then(res => {\r\n  console.log(res.status);\r\n  setClientStatus(res.status);\r\n}).catch(error => {\r\n  if (error.response) {\r\n     console.log(error.response.data);\r\n     console.log(error.response.status);\r\n     console.log(error.response.headers);\r\n     setClientStatus(error.response.status);\r\n  }\r\n})\r\n\r\n\r\n\r\nconsole.log('le searchValue des searchValue est ', searchValue);\r\n\r\n   const capitalizeFirstLetter = (word) => {\r\n      if (word)\r\n          return word.charAt(0).toUpperCase() + word.slice(1);\r\n      return '';\r\n   };\r\n\r\n return (\r\n      <Fragment>\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div>\r\n         {clientStatus == 200 && (\r\n         <>\r\n         {/* <PageTitle activeMenu=\"Liste\" motherMenu=\"Abonnées\" /> */}\r\n         <div className=\"form-head d-flex mb-4 mb-md-5 align-items-start\">\r\n            <div className=\"input-group search-area d-inline-flex\">\r\n               <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">\r\n                     <i className=\"flaticon-381-search-2\"/>\r\n                  </span>\r\n               </div>\r\n               <input id=\"searchClient\" type=\"text\" className=\"form-control\" placeholder=\"rechercher un client\" value={searchValue} onChange={e => setSearchValue(e.target.value)}/>\r\n            </div>\r\n               {/* <div className=\"input-group search-area d-inline-flex ml-3\">\r\n                  <input type=\"date\" name=\"birth_date\" value={startDate} className=\"form-control\"  onChange={e => setStartDate(e.target.value)}/>\r\n               </div>\r\n               <div className=\"input-group search-area d-inline-flex ml-3\">\r\n                  <input type=\"date\" name=\"birth_date\" value={endDate} className=\"form-control\"  onChange={e => setEndDate(e.target.value)}/>\r\n               </div> */}\r\n            <Link to=\"/client/create\" className=\"btn btn-primary ml-auto\">Ajouter un abonné</Link>\r\n         </div>\r\n\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> ID </th>\r\n                                 <th>Nom</th>\r\n                                 <th>Prénom</th>\r\n                                 <th>Téléphone</th>\r\n                                 <th className=\"pl-5 width200\"> Addresse </th>\r\n                                 <th>Adhesion</th>\r\n                                 <th>Dettes</th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                           {clientData.map(client => (\r\n                              <tr role=\"row\" key={client.id} className=\"btn-reveal-trigger\">\r\n                                 <td className=\"customer_shop_single\"> {client.id} </td>\r\n                                 <td className=\"py-3\">\r\n                                    <Link to={`/client/${client.id}`}>\r\n                                       <div className=\"media d-flex align-items-center\">\r\n                                          <div className=\"avatar avatar-xl mr-2\">\r\n                                             <div className=\"\">\r\n                                                <img className=\"rounded-circle img-fluid\" src={avartar5} width=\"30\" alt=\"\" />\r\n                                             </div>\r\n                                          </div>\r\n                                          <div className=\"media-body\">\r\n                                             <h5 className=\"mb-0 fs--1\">\r\n                                             {capitalizeFirstLetter(client.last_name)}\r\n                                             </h5>\r\n                                          </div>\r\n                                       </div>\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td className=\"py-2\">\r\n                                    {capitalizeFirstLetter(client.first_name)}\r\n                                 </td>\r\n                                 <td className=\"py-2\">\r\n                                    <a href=\"tel:{client.phone}\">{client.phone}</a>\r\n                                 </td>\r\n                                 <td className=\"py-2 pl-5 wspace-no\"> {client.adress} </td>\r\n                                 <td className=\"py-2\">{client.date_added}</td>\r\n                                 <td className=\"py-2  text-danger\">{client.dettes.reste__sum}</td>\r\n                              </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         {\r\n            !searchBarActivated &&\r\n\r\n            <div className='d-flex text-center justify-content-end'>\r\n\r\n                <div className='dataTables_info text-black' id='example5_info '>\r\n                  {/* Showing {activePag.current * sort + 1} to{' '}\r\n                  {data.length > (activePag.current + 1) * sort\r\n                    ? (activePag.current + 1) * sort\r\n                    : data.length}{' '}\r\n                  of {data.length} entries{' '} */}\r\n                </div>\r\n                <div\r\n                  className='dataTables_paginate paging_simple_numbers'\r\n                  id='example5_paginate'\r\n                >\r\n                  <Button\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(nextpage - 1)\r\n\r\n                  }\r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'left', fontSize:'15px', paddingLeft:'8px'}}>\r\n                    Précédent\r\n                  </Button>\r\n                  <span>\r\n                      <input\r\n                        to='/transactions'\r\n                        type='number'\r\n                        className='paginate_button_client  '\r\n                        onChange={e => setNextpage(e.target.value)}\r\n                      value={nextpage}\r\n                      style={{width: '100px', border: 'none', height:'99%', textAlign: 'center', fontSize:'15px'}}\r\n                      />\r\n                  </span>\r\n                  <Button\r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'center', fontSize:'15px', padding:'2px'}}\r\n\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(nextpage + 1)\r\n                    }\r\n                  >\r\n                    Suivant\r\n                  </Button>\r\n                </div>\r\n\r\n              </div>\r\n         }\r\n         </>\r\n         )}\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default ClientList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ClientDetail.jsx",["649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671"],"import React, { useState , useEffect, useRef} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import productData from \"../productData\";\r\nimport { ToastContainer } from 'react-toastify'\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nimport { Helmet } from 'react-helmet'\r\nimport { Dropdown, Tab, Nav, Button } from \"react-bootstrap\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Badge,\r\n  ProgressBar,\r\n} from \"react-bootstrap\"\r\n\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport product1 from \"../../../images/product/1.jpg\";\r\nimport Search from \"../../layouts/Search\";\r\nimport { createContext } from \"react\";\r\nimport ABCCreateModal from './ABCCreateModal';\r\nimport PaiementModal from './PaiementModal'\r\nimport ABCDetailModal from './ABCDetailModal'\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport AssuranceCreateModal from './AssuranceCreateModal';\r\nimport PaiementsClientModal from './PaiementsClientModal';\r\nimport PresencesClientModal from './PresencesClientModal';\r\nimport PaiementEditModal from './PaiementEditModal';\r\nimport RenewAbonnementModal from './RenewAbonnementModal';\r\nimport AbonnementClientModal from './AbonnementClientModal';\r\nimport femaleImg from \"../../../images/profile/female.png\";\r\nimport useAxios from \"../useAxios\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport { ComponentToPrint } from './ComponentToPrint';\r\n\r\nconst ComponentToPrintWrapper = ({ item }) => {\r\n  console.log('iteMM', item);\r\n  const componentRef = useRef();\r\n\r\n  const marginTop=\"40px\"\r\n  const marginRight=\"5px\"\r\n  const marginBottom=\"40px\"\r\n  const marginLeft=\"5px\"\r\n\r\n\r\n  const getPageMargins = () => {\r\n    return `@page { margin: ${marginTop} ${marginRight} ${marginBottom} ${marginLeft}  !important; }`;\r\n  };\r\n\r\n// const pageStyle = `\r\n//   @page {\r\n//     size: landscape;\r\n//   }\r\n// `;\r\n\r\n  return (\r\n    <div style={{ display: \"flex\"}}>\r\n     \r\n      <ReactToPrint\r\n        trigger={() =>   <div > Imprimer <i className=\"fa la-print text-danger mr-2 h5\" /> </div>}\r\n        content={() => componentRef.current }\r\n    \r\n      />\r\n      <div className=\"d-none\">\r\n        <style> {getPageMargins()}</style>\r\n        <ComponentToPrint ref={componentRef} value={item}></ComponentToPrint>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst ProductDetail = (props) => {\r\n  const [client, setClient] = useState({});\r\n  const [aBCmodalCreate, setABCModalCreate] = useState(false);\r\n  const [paiementModal, setPaiementModal] = useState(false);\r\n  const [abonDetailModal, setAbonDetailModal] = useState(false);\r\n  const [abonClient, setAbonClient] = useState([]);\r\n  const [transClient, setTransClient] = useState([]);\r\n   const [presencesClient, setPresnecesClient] = useState([]);\r\n   const [dettesClient, setDettesClient] = useState([]);\r\n   const [creneauxClient, setCreneauxClient] = useState([]);\r\n   const [abonClientID, setAbonClientID] = useState(\"\");\r\n   const [abonClientType, setAbonClientType] = useState(\"\");\r\n   const [presenceSuccess, setPresenceSuccess] = useState(false);\r\n   const [presenceError, setPresenceError] = useState(false);\r\n   const [abonClientTypeName, setAbonClientTypeName] = useState(\"\");\r\n   const [paiementAmountInfo, setPaiementAmountInfo] = useState(\"\");\r\n   const [paiementABCInfo, setPaiementABCInfo] = useState(\"\");\r\n   const [paiementABCName, setPaiementABCName] = useState(\"\");\r\n   const [paiementDateInfo, setPaiementDateInfo] = useState(\"\");\r\n   const [paiementEditModal, setPaiementEditModal] = useState(false);\r\n   const [paiementIdInfo, setPaiementIdInfo] = useState(\"\");\r\n   \r\n   \r\n   const [abonClientEnd, setAbonClientEnd] = useState(\"\");\r\n   const [abonClientpresences, setAbonClientpresences] = useState(\"\");\r\n   const [paiementNotesInfo, setPaiementNotesInfo] = useState(\"\");\r\n   const [abonClientReste, setAbonClientReste] = useState(\"\");\r\n   const [abonnementClientCreneaux, setAbonnementClientCreneaux] = useState([]);\r\n   const [assuranceModal, setAssuranceModal] = useState(false);\r\n   const [clientPaiementsModal, setClientPaiementsModal] = useState(false);\r\n   const [clientPresencesModal, setClientPresencesModal] = useState(false);\r\n   const [clientAbcModal, setClientAbcModal] = useState(false);\r\n   const [renewAbcModal, setRenewAbcModal] = useState(false);\r\n   \r\n   const clientId = props.match.params.id;\r\n   const presenceCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/presence/create`\r\n   const transactionClientEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement-by-client/?cl=${clientId}`\r\n  const creneauClientEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-client?cl=${clientId}`\r\n  // console.log('les trnasactions ',transactions);\r\n  // console.log('le id de labonnd client est ', abonnementClientCreneaux);\r\n  const api = useAxios();\r\n\r\n  const addPresence = async () => {\r\n    const clientData =  {\r\n      client : Number(clientId)\r\n    }\r\n    try {\r\n      const axWait = await api.post(presenceCreateEND, clientData)\r\n      notifySuccess('Presence enregistré avec succés')\r\n        return axWait\r\n    } catch (error) {\r\n      notifyError(\"Cet adherant n'a aucun cours maintenant\")\r\n      }\r\n    }\r\n  // useEffect(() => {\r\n  //   if (presenceSuccess == true) {\r\n  //     notifyPresenceSuccess()\r\n  //   }\r\n  // }, [presenceSuccess]);\r\n  // useEffect(() => {\r\n  //   if (presenceError == true) {\r\n  //     notifyPresenceError()\r\n  //   }\r\n  // }, [presenceError]);\r\n\r\n  // const notifyPresenceSuccess = () => {\r\n  //   toast.success('Activité Creer Avec Succée', {\r\n  //     position: 'top-right',\r\n  //     autoClose: 5000,\r\n  //     hideProgressBar: false,\r\n  //     closeOnClick: true,\r\n  //     pauseOnHover: true,\r\n  //     draggable: true,\r\n  //   })\r\n  // }\r\n  // const notifyPresenceError = () => {\r\n  //   toast.error('le client avec l\\'ID ' +' ' + clientId +' ' +\"n'a pas le droit d'assisté a cours\", {\r\n  //     position: 'top-right',\r\n  //     autoClose: 5000,\r\n  //     hideProgressBar: false,\r\n  //     closeOnClick: true,\r\n  //     pauseOnHover: true,\r\n  //     draggable: true,\r\n  //   })\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   //  const clientId = props.match.params.id;\r\n  //    const fetchData = async () => {\r\n  //       try {\r\n  //          const res = await api.get(creneauClientEND);\r\n  //          let creneaux = res.data\r\n  //         //  let result = (creneaux) => creneaux.filter((v,i) => creneaux.indexOf(v) === i)\r\n  //          setCreneauxClient(creneaux)\r\n \r\n  //           // console.log('ghirrrr =creneauxClient', creneauxClient);\r\n  //       } catch (error) {\r\n  //          console.log(error, 'erreur presneces');\r\n  //       }\r\n  //    }\r\n  //    fetchData();\r\n  // }, [props.match.params.id] );\r\n  useEffect(() => {\r\n     const fetchData = async () => {\r\n        try {\r\n           const res = await api.get(`${process.env.REACT_APP_API_URL}/rest-api/clients/${clientId}/`);\r\n           setClient(res.data);\r\n        } catch (error) {\r\n           console.log(error);\r\n        }\r\n     }\r\n     fetchData();\r\n  }, [props.match.params.id] );\r\n\r\n  useEffect(() => {\r\n     const fetchData = async () => {\r\n        try {\r\n           const res = await api.get(creneauClientEND);\r\n           setCreneauxClient(res.data)\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n     }\r\n     fetchData();\r\n  }, [props.match.params.id, aBCmodalCreate, abonDetailModal] );\r\n  \r\n  useEffect(() => {\r\n     const fetchData = async () => {\r\n        try {\r\n           const res = await api.get(transactionClientEND);\r\n           setTransClient(res.data)\r\n           const res2 = await api.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-client-dettes/?cl=${clientId}`);\r\n           setDettesClient(res2.data.abonnees.reste__sum)\r\n        } catch (error) {\r\n           console.log(error);\r\n        }\r\n     }\r\n     fetchData();\r\n  }, [props.match.params.id,  aBCmodalCreate, , paiementModal, paiementEditModal,abonDetailModal] );\r\n  useEffect(() => {\r\n    //  const clientId = props.match.params.id;\r\n     const fetchData = async () => {\r\n        try {\r\n           const res = await api.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${clientId}`);\r\n           setAbonClient(res.data)\r\n        } catch (error) {\r\n           console.log(error);\r\n        }\r\n     }\r\n     fetchData();\r\n  }, [props.match.params.id, aBCmodalCreate, abonDetailModal, paiementModal, paiementEditModal] );\r\n\r\nconst capitalizeFirstLetter = (word) => {\r\n   if (word)\r\n       return word.charAt(0).toUpperCase() + word.slice(1);\r\n   return '';\r\n};\r\n\r\nconst populatePaimentData = (e) => {\r\n  setPaiementIdInfo(e.target.id)\r\n  setPaiementAmountInfo(e.target.amount)\r\n  setPaiementABCInfo(e.target.abonnement_name)\r\n  setPaiementDateInfo(e.target.date_creation)\r\n  setPaiementEditModal(true)\r\n  console.log('TRHE RRRREEEE', e.target);\r\n}\r\nuseEffect(() => {\r\n  try {\r\n    populatePaimentData()\r\n  } catch (error) {\r\n    \r\n  }\r\n}, [populatePaimentData]);\r\n  return (\r\n    <>\r\n     <Helmet>\r\n          <title>{String(clientId)} - {String(client.last_name)} </title>\r\n        </Helmet>\r\n      <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n        <ShortCuts />\r\n      </div>\r\n      <ToastContainer\r\n        position='top-right'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {/* info profile */}\r\n      <div className=\"profile-info\">\r\n        <div className=\"profile-photo\">\r\n            <img src={client.picture  ? `${process.env.REACT_APP_API_URL}${client.picture}` : femaleImg} className=\"img-fluid rounded-circle\" alt=\"profile\" width='90' />\r\n        </div>\r\n        <div className=\"profile-details\">\r\n          <div>\r\n            <div className=\"profile-name px-3 pt-2\">\r\n              <h4 className=\"text-primary mb-0\">\r\n              {capitalizeFirstLetter(client.last_name)} {capitalizeFirstLetter(client.first_name)}\r\n              </h4>\r\n              <p>ID: <span className='text-danger'>{client.id}</span></p>\r\n            </div>\r\n            <div className=\"social-icons\">\r\n                <Link to={`/client/edit/${client.id}`} className=\"btn-xs btn-primary light\" > Modifier Profile </Link>\r\n            </div>\r\n          </div>\r\n            <div className=\"profile-email px-2 pt-2\">\r\n              <h4 className=\"text-muted mb-0\">\r\n              inscrit le : {client.date_added}\r\n              </h4>\r\n              {\r\n                client.debut_assurance !== 'false'\r\n                &&\r\n                <h5 className='mt-3'>Début frais Annuel: <span style={new Date() > new Date(client.fin_assurance) ? {color: 'red'} : {color: '#06eeee'} }>{client.debut_assurance} </span></h5>\r\n              }\r\n              <p>Fin Frais Annuel : <span style={new Date() > new Date(client.fin_assurance) ? {color: 'red'} : {color: '#06eeee'} }>{client.fin_assurance}   {new Date() > new Date(client.fin_assurance) && 'éxpiré' } </span>\r\n              {new Date() > new Date(client.fin_assurance) && <Button className=\"btn-xs  btn-danger light m-3 ml-auto\" onClick={e => setAssuranceModal(true) }>Payer</Button> }</p>\r\n            </div>\r\n            <div className=\"profile-email px-2 pt-2\">\r\n              <h4 className=\"text-muted mb-0\">\r\n                {client.note}             \r\n              </h4>\r\n            </div>\r\n            <div className=\"profile-email text-danger pt-2\" style={{marginLeft: 'auto'}}>\r\n              <h3 className=\"text-danger mb-0\">\r\n                Dettes :{dettesClient}             \r\n              </h3>\r\n            </div>\r\n            <Dropdown className=\"dropdown ml-auto\">\r\n              <Dropdown.Toggle  variant=\"primary\"  className=\"btn btn-primary light sharp i-false\"  data-toggle=\"dropdown\"  aria-expanded=\"true\" >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\" >\r\n                    <g  stroke=\"none\"  strokeWidth=\"1\"  fill=\"none\"  fillRule=\"evenodd\" >\r\n                      <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" ></rect>\r\n                      <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" ></circle>\r\n                      <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" ></circle>\r\n                      <circle  fill=\"#000000\"  cx=\"19\"  cy=\"12\"  r=\"2\" ></circle>\r\n                    </g>\r\n                  </svg>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\r\n                  <Dropdown.Item className=\"dropdown-item\" href= {`/client/edit/${client.id}`}>\r\n                    <i className=\"fa fa-user-circle text-primary mr-2\" />\r\n                    Modifier profile\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"dropdown-item\" onClick= { e => addPresence(true)}>\r\n                  <i className=\"fa fa-plus text-primary mr-2\" />\r\n                    Ajouter Presence\r\n                  </Dropdown.Item>\r\n                  \r\n                  <Dropdown.Item className=\"dropdown-item\" onClick= { e => setABCModalCreate(true)}>\r\n                    <i className=\"fa fa-plus text-primary mr-2\" />\r\n                    Ajouter Abonnement \r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item className=\"dropdown-item\" onClick= { e => setPaiementModal(true)}>\r\n                    <i className=\"fa fa-plus text-primary mr-2\" />\r\n                    Ajouter Paiement \r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"dropdown-item\" onClick= { e => setClientPresencesModal(true)}>\r\n                    <i className=\"fa fa-list text-primary mr-2\" />\r\n                    {/* <i className=\"fa fa-clipboard\"></i> */}\r\n                     Présences Client\r\n                  </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n      </div>\r\n          {/* <div className=\"row d-flex justify-content-start mb-3 ml-4\">\r\n              <div className=\"btn btn-success ml-4\" onClick={e => setPaiementModal(true) }>\r\n                  + Paiement \r\n              </div>\r\n              <div className=\"btn btn-danger ml-4\" onClick={e => setRenewAbcModal(true)}>\r\n                Renouvelé un abonnement\r\n              </div>\r\n          </div> */}\r\n      <div className=\"container-fluid\" style={{padding: '0px'}}>\r\n\r\n      <div className=\"row d-flex no-gutters \">\r\n      <div className='col-6 col-md-2'>\r\n          <Card >\r\n            <Card.Header style={{padding :'10px 30px'}}>\r\n              <Card.Title>\r\n                <h5>Informations personnelles</h5>\r\n              </Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>Civilité: <a className=\"item text-light\"> {client.civility_display}</a> </h6>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>Téléphone:                  <span className=\"item text-light\"><a href={`tel:${client.phone}`}> {client.phone}</a></span></h6>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>email:                      <span className=\"item text-light\"><a href={`mailto:${client.email}`}> {client.email}</a></span></h6>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>Groupe sanguin:&nbsp;&nbsp; <span className=\"badge badge-danger light\">{client.blood}</span> </h6>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>Nationalité:                <span className=\"item text-light\">{client.nationality}</span> </h6>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>Date de naissance:          <span className=\"item text-light\">{client.birth_date}</span> </h6>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>Age:                        <span className=\"item text-light\">{client.age}</span> </h6>\r\n              <h6 className='text-primary' style={{fontSize: '0.9rem'}}>Profession :                <span className=\"item text-light\">{client.profession}</span> </h6>\r\n              <h5 className='text-primary' style={{fontSize: '0.9rem'}}>Maladies:</h5>\r\n              <ul>\r\n                {client.maladie_name && client.maladie_name.map(maladie =>(\r\n                    <li key={maladie.id} className='ml-2'>{maladie.name}</li>\r\n                  ))}\r\n              </ul>\r\n              <div className=\"shopping-cart \">\r\n                <h4>Adresse :</h4>\r\n                <p>{client.adress}</p>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n        <div className='col-6 col-md-4'>\r\n          <Card >\r\n            <Card.Header style={{padding :'10px 30px'}}>\r\n              <Card.Title>\r\n                  <div className='ajouter' onClick={e => setClientAbcModal(true)}>Abonnements</div>\r\n           </Card.Title>\r\n               <Card.Title>\r\n                  <div className=' ajouter' onClick= { e => setABCModalCreate(true)}> <i className=\"fa fa-plus text-primary mr-2\" /></div>\r\n              </Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive striped bordered className=\"verticle-middle\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Nom</th>\r\n                    <th scope=\"col\">Séances</th>\r\n                    <th scope=\"col\">Date Début</th>\r\n                    <th scope=\"col\">Date Fin</th>\r\n                    <th scope=\"col\">Prix</th>\r\n                    <th scope=\"col\">Reste</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                {abonClient.map( abonnement => (\r\n                    <tr  className='cursor-abonnement' key={abonnement.id} onClick={e => {\r\n                      setAbonDetailModal(true)\r\n                      setAbonClientID(abonnement.id)\r\n                      setAbonClientType(abonnement.type_abonnement)\r\n                      setAbonClientTypeName(abonnement.type_abonnement_name)\r\n                      setAbonClientEnd(abonnement.end_date)\r\n                      setAbonClientpresences(abonnement.presence_quantity)\r\n                      setAbonnementClientCreneaux(abonnement.creneaux)\r\n                      setAbonClientReste(abonnement.reste)\r\n                      }}>\r\n                      <td className=\"text-left\">{abonnement.type_abonnement_name}</td>\r\n                      <td>{abonnement.is_time_volume ? abonnement.left_minutes : abonnement.is_free_access ? 'Forfait': abonnement.presence_quantity }</td>\r\n                      <td className=\"text-right\">{abonnement.start_date}</td>\r\n                      <td className=\"text-right\">{abonnement.end_date}</td>\r\n                      <td className=\"text-right\">{abonnement.price}</td>\r\n                      <td className=\"text-left\">{abonnement.reste}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n          </div>\r\n          <div className='col-6 col-md-3'>\r\n          <Card >\r\n            <Card.Header style={{padding :'10px 30px'}}>\r\n              <Card.Title >\r\n                  <div className=' ajouter' onClick={e => setClientPaiementsModal(true)}> Paiements </div>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                  <div className=' ajouter' onClick= { e => setPaiementModal(true)}>  <i className=\"fa fa-plus text-primary mr-2\" /></div>\r\n              </Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive striped bordered className=\"verticle-middle\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Mantant</th>\r\n                    <th scope=\"col\">Date</th>\r\n                    <th scope=\"col\">Abonnement</th>\r\n                    <th scope=\"col\">Reçu</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {transClient.map(trans => (\r\n                    <tr className=\"ajouter\" key={trans.id} onClick={ e => {\r\n                        setPaiementIdInfo(trans.id)\r\n                        setPaiementAmountInfo(trans.amount)\r\n                        setPaiementABCInfo(trans.abc_id)\r\n                        setPaiementABCName(trans.abonnement_name)\r\n                        setPaiementDateInfo(trans.date_creation)\r\n                        setPaiementNotesInfo(trans.notes)\r\n                        }}>\r\n                        <td className=\"text-left\" onClick={e => setPaiementEditModal(true)}>{trans.amount}</td>\r\n                        <td>{trans.date_creation}</td>\r\n                        <td className=\"text-left\">{trans.abonnement_name}</td>\r\n                        <td><ComponentToPrintWrapper item={trans} /></td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n          </div>\r\n          <div className='col-6 col-md-3'>\r\n            <Card >\r\n              <Card.Header style={{padding :'10px 30px'}}>\r\n                <Card.Title >\r\n                  <div className='ajouter' onClick= { e => setClientPresencesModal(true)}> <h4>Seances / Presences</h4> </div>\r\n                </Card.Title>\r\n                <Card.Title>\r\n                    <div className=' ajouter'  onClick= { e => addPresence(true)}> <i className=\"fa fa-plus text-primary mr-2\" /></div>\r\n                </Card.Title>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Table responsive striped bordered className=\"verticle-middle\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Début</th>\r\n                      <th scope=\"col\">Fin</th>\r\n                      <th scope=\"col\">Jour</th>\r\n                      <th scope=\"col\">Activité</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  { creneauxClient.map ( creneau => (\r\n                      <tr key={creneau.id}>\r\n                        <td>{creneau.hour_start}</td>\r\n                        <td>{creneau.hour_finish}</td>\r\n                        <td>{creneau.day}</td>\r\n                        <td className=\"text-left\">{creneau.activity_name}</td>\r\n                      </tr>\r\n                      ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n        </div>\r\n        <ABCCreateModal show={aBCmodalCreate} onShowShange={setABCModalCreate} clientData={{clientId: clientId}} />\r\n        <RenewAbonnementModal show={renewAbcModal} onShowShange={setRenewAbcModal} clientData={{clientId: clientId}}/>\r\n        <PaiementsClientModal show={clientPaiementsModal} onShowShange={setClientPaiementsModal} paiementsData={{clientId: clientId}} />\r\n        <PresencesClientModal show={clientPresencesModal} onShowShange={setClientPresencesModal} presencesData={{clientId: clientId}} />\r\n        <AbonnementClientModal show={clientAbcModal} onShowShange={setClientAbcModal} abcData={{clientId: clientId}} />\r\n        <PaiementModal show={paiementModal} onShowShange={setPaiementModal} clientData={{clientId: clientId, abcs :abonClient}} />\r\n        <PaiementEditModal show={paiementEditModal} onShowShange={setPaiementEditModal} paiementData={{clientId: clientId,\r\n          abcs :abonClient,\r\n          paiementIdInfo: paiementIdInfo,\r\n          paiementAmountInfo: paiementAmountInfo,\r\n          paiementABCInfo: paiementABCInfo,\r\n          paiementDateInfo: paiementDateInfo,\r\n          paiementNotesInfo: paiementNotesInfo,\r\n          paiementABCName : paiementABCName,\r\n        }} />\r\n        \r\n        <ABCDetailModal show={abonDetailModal} onShowShange={setAbonDetailModal} abonnementData={{\r\n          clientId: clientId, \r\n          abonClientID: abonClientID,\r\n          abonClientType : abonClientType,\r\n          abonClientEnd : abonClientEnd,\r\n          abonClientpresences : abonClientpresences,\r\n          abonClientTypeName : abonClientTypeName,\r\n          abonnementClientCreneaux :abonnementClientCreneaux,\r\n          abonClientReste :abonClientReste\r\n          }} />\r\n          <AssuranceCreateModal show={assuranceModal} onShowShange={setAssuranceModal} clientData={{clientId: clientId}}/>\r\n          {/* <AssuranceCreateModal show={assuranceModal} onShowShange={setAssuranceModal} clientData={{clientId: clientId}}/> */}\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\UserList.jsx",["672","673","674","675","676","677","678","679","680","681","682"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown, Button } from \"react-bootstrap\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n// import DetteCreateModal from './DetteCreateModal';\r\n/// images \r\nimport { Link } from \"react-router-dom\";\r\nimport useAxios from \"../useAxios\";\r\nimport UserModal from \"./UserModal\"\r\n// import EditForm from \"./EditForm\";\r\n// import UpdateIcon from '@material-ui/icons/Update';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Pagination from \"./Pagination.js\";\r\nimport Users from \"./Users\";\r\nconst UserList = () => {\r\n\r\nconst api = useAxios();\r\nconst [usersData, setUsersData] = useState([]);\r\nconst [userModal, setUserModal] = useState(false);\r\nconst [userId, setUserId] = useState(\"\");\r\nconst [selectedUser, setSelectedUser] = useState(\"\");\r\n\r\n\r\nconst [userGroup, setUserGroup] = useState([]);\r\nconst [groups, setGroups] = useState([]);\r\nconst [usersStatus, setUsersStatus] = useState(null);\r\n\r\nconst groupsEnd = `${process.env.REACT_APP_API_URL}/rest-api/auth/groups/`\r\n\r\n   useEffect( () =>  {\r\n      api.get(`${process.env.REACT_APP_API_URL}/rest-api/auth/users`).then( res => {\r\n         console.log('result ', res);\r\n         setUsersData(res.data)\r\n         setUsersStatus(res.status)\r\n      }).catch( err => {\r\n         console.log('IRRROR', err);\r\n         setUsersStatus(err.response.status)\r\n      })\r\n      api.get(groupsEnd).then( res => {\r\n         setGroups(res.data)\r\n         console.log(\"MY GROUSP \", res.data);\r\n     })\r\n   }, [userModal]);\r\n\r\n   const setSelectedGroup = (groups, groupId ) => {\r\n      for (let i = 0; i < groups.length; i++) {\r\n          if (groupId == groups[i].id){\r\n             return i\r\n          }            \r\n      }\r\n  }\r\n   // const [users, setUsers] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [UserPerPage] = useState(4);\r\n\r\n  const indexOfLastUser = currentPage * UserPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - UserPerPage;\r\n  const currentUsers = usersData.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n   const paginate = pageNumber => setCurrentPage(pageNumber);\r\n  \r\n   return (\r\n      <Fragment>\r\n         <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div>\r\n         {usersStatus == 200 && (\r\n         <>\r\n         <div className=\"form-head d-flex mb-4 mb-md-5 align-items-start\">\r\n            <div className=\"input-group search-area d-inline-flex\">\r\n            </div>\r\n               <Button onClick={e => { setUserModal(true)}}>Ajouter</Button>\r\n            {/* <Link to=\"/users/create\" className=\"btn btn-primary ml-auto\">Ajouter un utilisateur</Link> */}\r\n         </div>\r\n            {/* <Search name= 'Abonnée' lien= \"/client/create\"/> */}\r\n            {/* <div className=\"row d-flex justify-content-arround mb-3\">\r\n                  <div className=\"btn btn-success ml-auto\" onClick={e => setPaiementModal(true) }>\r\n                     + Paiement \r\n                  </div>\r\n                  <div className=\"btn btn-danger ml-auto\" onClick={e => setRemunerationPersonnelModal(true) }>\r\n                  + Remunération Personnel \r\n                  </div>\r\n                  <div className=\"btn btn-info ml-auto\" onClick={e => setRemunerationCoachModal(true) }>\r\n                  + Remunération Coach\r\n                  </div>\r\n                  <div className=\"btn btn-primary ml-auto\" onClick={e => setAutreModal(true) }>\r\n                  + Autre Transaction\r\n                  </div>\r\n                <div className=\"col-md-2\">\r\n                      <input type=\"date\" name=\"birth_date\" value={startDate} className=\"form-control\"  onChange={e => setStartDate(e.target.value)}/>\r\n               </div>\r\n               <div className=\" col-md-2\">\r\n                     <input type=\"date\" name=\"birth_date\" value={endDate} className=\"form-control\"  onChange={e => setEndDate(e.target.value)}/>\r\n               </div>\r\n            </div> */}\r\n\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\" style={{padding: '5px'}}>\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th>ID</th>\r\n                                 <th>Email</th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                              <Users usersData={currentUsers} setUserId={setUserId} setSelectedUser={setSelectedUser}\r\n                              setUserGroup={setUserGroup} userGroup={userGroup} loading={loading}/>\r\n                           </tbody>\r\n                        </table>\r\n                        <Pagination\r\n                           UserPerPage={UserPerPage}\r\n                           totalUsers={usersData.length}\r\n                           paginate={paginate}\r\n                        />\r\n \r\n                        \r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         { userModal == true && \r\n         <UserModal show={userModal} onShowShange={setUserModal}  userData={{\r\n            userId : userId,\r\n            selectedUser : setSelectedUser,\r\n            userGroup: userGroup,\r\n            groups : groups\r\n            // userGroop : userGroop,\r\n            }}\r\n           />\r\n         }\r\n\r\n            {/* <EditForm show={userModal} onShowShange={setUserModal} userData={{\r\n               userId: userId,\r\n            }} /> */}\r\n         </>\r\n         )}\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default UserList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\presence\\PresenceList.jsx",["683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n/// images\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport PresenceEditModal from './PresenceEditModal'\r\nimport PresenceCreateModal from './PresenceCreateModal'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useAxios from \"../useAxios\";\r\n// import axiosInstance from \"../../axiosApi\";\r\n\r\nexport const ClientContext = React.createContext()\r\nfunction refreshPage() {\r\n   window.location.reload(false);\r\n }\r\n\r\n\r\nconst PresenceList = () => {\r\n   const api = useAxios();\r\n\r\n\r\n   const [editModal, setEditModal] = useState(false);\r\n   const [presneceCreateModal, setPresneceCreateModal] = useState(false);\r\n   const [nextpage, setNextpage] = useState(1);\r\n   const [client, setClient ] = useState('')\r\n   const [carteClient, setCarteClient ] = useState('')\r\n   \r\n   const [clientId, setClientId ] = useState('')\r\n   const [presenceId, setPresenceId ] = useState('')\r\n   const [hourIn, setHourIn ] = useState('') \r\n   const [hourOut, setHourOut ] = useState('') \r\n   const [creneau,setCreneau] = useState('')\r\n   const [note, setNote] = useState('')\r\n   const [date, setDate] = useState('')\r\n   const [activity, setActivity] = useState('')\r\n   const [filterActivity, setFilterActivity] = useState('')\r\n   const [presenceSuccess, setPresenceSuccess] = useState(false);\r\n   const [presenceError, setPresenceError] = useState(false);\r\n   const [presenceupdatedSuccess, setPresenceupdatedSuccess] = useState(false);\r\n   const [presenceCreatedSuccess, setPresenceCreatedSuccess] = useState(false);\r\n   const [searchValue, setSearchValue] = useState('')\r\n   const [searchBarActivated, setSearchBarActivated] = useState(false)\r\n   const [presenceData, setPresenceData] = useState([]);\r\n   const [sallesData, setSallesData] = useState([]);\r\n   const [activities, setActivities] = useState([]);\r\n   const [presencesCount, setPresencesCount] = useState('')\r\n   \r\n   \r\n\r\n   // console.table('els clieeents', salle);\r\n\r\n   // const capitalizeFirstLetter = (word) => {\r\n   //    if (word)\r\n   //    return word.charAt(0).toUpperCase() + word.slice(1);\r\n   //    return '';\r\n   // };\r\n   // console.log('le clieeeeen RFID', client);\r\n// \r\n\r\n   const formatDate = (date) => {\r\n      try {\r\n         const returned = new Date(date).toISOString().slice(0, 10)\r\n         return returned\r\n      } catch (error) {\r\n         const returned = new Date().toISOString().slice(0, 10)\r\n         return returned\r\n      }\r\n   }\r\n\r\n   const [startDate, setStartDate] = useState(formatDate(new Date('2000-01-01')));\r\n   const [endDate, setEndDate] = useState(formatDate(new Date()));\r\n   const [salleId, setSalleId] = useState('');\r\n   const [startHour, setStartHour] = useState('');\r\n   // const sallesData = useGetAPI(`${process.env.REACT_APP_API_URL}/rest-api/salle-activite/`)\r\n   // const activities = useGetAPI(`${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/`)\r\n   let presenceCreateEND =  `${process.env.REACT_APP_API_URL}/rest-api/presence/auto-create`\r\n   \r\n   const [salleStatus, setSalleStatus] = useState(null)\r\n   \r\n   useEffect(() => {\r\n      api.get(`${process.env.REACT_APP_API_URL}/rest-api/salle-activite/`).then( res=> {\r\n         setSallesData(res.data)\r\n         setSalleStatus(res.status)\r\n      }).catch(err => {\r\n         setSalleStatus(err.response.status)\r\n      })\r\n      api.get(`${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/`).then( res=> {\r\n         setActivities(res.data)\r\n      }) \r\n   }, []);\r\n\r\nconst getCurrentDay = (PresneceDate) => {\r\n   const date = new Date(PresneceDate).getDay()\r\n\r\n   if (date === 0) {\r\n      return 'Dimanche'\r\n   }else if (date === 1){\r\n      return 'Lundi'\r\n\r\n   }else if (date === 2){\r\n      return 'Mardi'\r\n\r\n   }else if (date === 3){\r\n      return 'Mercredi'\r\n\r\n   }else if (date === 4){\r\n      return 'Jeudi'\r\n\r\n   }else if (date === 5){\r\n      return 'Vendredi'\r\n   }else {\r\n      return 'Samedi'\r\n   }\r\n} \r\nconst [presenceStatus, setPresenceStatus] = useState(null);\r\n\r\n   useEffect(() => {\r\n      const presenceDateDate = async () => {\r\n         const dateDebut = formatDate(startDate)\r\n         const dateFin = formatDate(endDate)\r\n         // const result =  await api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/?page=${nextpage}&start_date=${dateDebut}&end_date=${dateFin}&abc__client_id=${searchValue}&creneau__activity__salle=${salleId}&hour=${startHour}&creneau__activity=${filterActivity}`)\r\n         // console.log('cest un result ', result);\r\n         // setPresenceData(result.data.results)\r\n         // setPresencesCount(result.data.count)\r\n         await api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/?page=${nextpage}&start_date=${dateDebut}&end_date=${dateFin}&abc__client_id=${searchValue}&creneau__activity__salle=${salleId}&hour=${startHour}&creneau__activity=${filterActivity}`)\r\n         .then(res => {\r\n            console.log('cest un result ', res);\r\n            setPresenceData(res.data.results)\r\n            setPresencesCount(res.data.count)\r\n            setPresenceStatus(res.status)\r\n         }).catch(err => {\r\n            console.log(err);\r\n            setPresenceStatus(err.response.status)\r\n         })\r\n      }\r\n      presenceDateDate()\r\n   }, [startDate, endDate, clientId,nextpage, searchValue, client, presenceCreatedSuccess, presenceupdatedSuccess, salleId, editModal, presneceCreateModal, startHour, filterActivity]);\r\n\r\nconst HandleSubmit = (e) => {\r\n   e.preventDefault();\r\n   const presenceData =  api.get(`${process.env.REACT_APP_API_URL}/rest-api/get-client/?cl=${clientId}`).then(async res=> {\r\n      if (res.data.last_presence) {\r\n         setPresenceId(res.data.last_presence)\r\n         await api.put( `${process.env.REACT_APP_API_URL}/rest-api/presence/edit/${res.data.last_presence}/`)\r\n         notifySuccess(`la sortie de ${clientId} a été éffectué Avec Succée`)\r\n         setClientId('')\r\n         return presenceData\r\n      } else {\r\n         try {\r\n            const presenceData1 = await api.post(presenceCreateEND,{client: clientId}).then(res => {\r\n               notifySuccess(`Entrée autorisée, ${clientId}`)\r\n               setClientId('')\r\n            })\r\n            return presenceData1\r\n         } catch (error) {\r\n            notifyError(\"Erreur, Entrée non autorisée\")\r\n         }} \r\n   }).catch(err => {\r\n      notifyError(\"Cet ID n'existe pas dans nos fichier\")\r\n   })\r\n}\r\n\r\n   return (\r\n      <Fragment>\r\n         <Link target=\"_blank\" to={`/client/${clientId}`} >\r\n            <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n         </Link>\r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n         </div> \r\n         {presenceStatus == 200 && (\r\n         <>\r\n         <div className=\"m-5 row\">\r\n            <div className='col- col-md-4'>\r\n               <form onSubmit={HandleSubmit}>\r\n                  <div className='row'>\r\n                     <div className=\"col-6\">\r\n                     <label htmlFor=\"entree\">Présence Automatique </label>\r\n                        <input name='entree' type=\"text\" className=\"form-control\" value={clientId} placeholder=\" ID Client\" onChange={e =>  setClientId(e.target.value)} />\r\n                     </div>\r\n                     <div className=\"col-6 mt-auto\">\r\n                        <Button  variant=\"success\" type=\"submit\" > Valider</Button>\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n            <div className=\"col-md-2 mt-auto\">\r\n               <Button  variant=\"primary\" type=\"submit\" onClick={e => setPresneceCreateModal(true)}> Présence Manuelle</Button>\r\n            </div>\r\n            <div  className=\"ml-auto col-md-2\">\r\n               <h2 className='text-danger'>Total :{presencesCount}</h2>\r\n            </div>\r\n         </div>\r\n         <div className=\"row d-flex m-3 py-4\" style={{backgroundColor:'#ffffff'}}>\r\n            <div className=\" col-md-2\">\r\n               <label style={{color:'#000000'}} >ID Adhérant</label>\r\n               <input type=\"text\" className=\"form-control\" placeholder=\"rechercher par ID Client\" value={searchValue} onChange={e => setSearchValue(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} >Salle d'activité</label>\r\n                  <Autocomplete\r\n                     // id={(option) =>  option['id']}\r\n                     onChange={((event, value) =>  {\r\n                        try {\r\n                           setSalleId(value.id)\r\n                        } catch (error) {\r\n                           setSalleId('')\r\n                        }\r\n                     })}\r\n                     // onChange={handleSubmit}\r\n                     options={sallesData}\r\n                     //  value={activities[creneauActivite]}\r\n                     \r\n                     getOptionSelected={(option) =>  option['id']}\r\n                     getOptionLabel={(option) =>  option['name']}\r\n                     style={{ color: '#000' }}\r\n                     renderInput={(params) => \r\n                     <TextField {...params} style={{color:\"#000\"}}  className='text-light' label=\"Salles\" variant=\"outlined\" InputLabelProps={{style: { color: '#000' }, }}/>}\r\n                  />\r\n\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} >Activité</label>\r\n               <Autocomplete\r\n               // id={(option) =>  option['id']}\r\n               onChange={((event, value) =>  {\r\n                  try {\r\n                     setFilterActivity(value.id)\r\n                  } catch (error) {\r\n                     setFilterActivity('')\r\n                  }\r\n               })}\r\n               // onChange={handleSubmit}\r\n               options={activities}\r\n               style={{ color: '#000' }}\r\n               //  value={activities[creneauActivite]}\r\n               getOptionSelected={(option) =>  option['id']}\r\n               getOptionLabel={(option) =>  option['name']}\r\n               renderInput={(params) => \r\n                  <TextField {...params}  \r\n                     InputLabelProps={{\r\n                        style: { color: '#000' }, \r\n                     }}\r\n                  style={{color:'#ffffff'}}  label=\"Activitées\" variant=\"outlined\" />}\r\n               />\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"birth_date\">Date début </label>\r\n               <input type=\"date\" name=\"start_date\" className=\"form-control\" value={startDate}  onChange={e => setStartDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"end_date\">Date Fin </label>\r\n               <input type=\"date\" name=\"end_date\" className=\"form-control\" value={endDate} onChange={e => setEndDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n               <label style={{color:'#000000'}} htmlFor=\"start_hour\">Heure du créneau</label>\r\n               <input type=\"time\" name=\"start_hour\" className=\"form-control\" value={startHour} onChange={e => setStartHour(e.target.value)}/>\r\n            </div>\r\n         </div>\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\" style={{padding: '5px'}}>\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> ID </th>\r\n                                 <th>Nom</th>\r\n                                 <th>Activité</th>\r\n                                 <th> Date </th>\r\n                                 <th> Jour </th>\r\n                                 <th className=\"pl-5 width200\"> Heure d'entrée </th>\r\n                                 <th> Heure de sortie </th>\r\n                                 <th> Notes </th>\r\n                                 <th className='text-right'>Dettes </th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                              {presenceData.map(presence => (\r\n                                 <tr role=\"row presences\" key={presence.id} className=\"btn-reveal-trigger cursor-abonnement presences p-0\"onClick={e => {\r\n                                    setEditModal(true)\r\n                                    setClient(presence.client_last_name)\r\n                                    setClientId(presence.client)\r\n                                    setPresenceId(presence.id)\r\n                                    setHourIn(presence.hour_entree)\r\n                                    setHourOut(presence.hour_sortie)\r\n                                    setCreneau(presence.creneau)\r\n                                    setNote(presence.note)\r\n                                    setDate(presence.date)\r\n                                    setActivity(presence.activity)\r\n                                 }}>\r\n                                    <td className=\"customer_shop_single\"> {presence.client} </td>\r\n                                    <td className=\"\">\r\n                                       {/* <Link to={`/presence/detail/${presence.id}`}> */}\r\n                                          <div className=\"media d-flex align-items-center\">\r\n                                             <div className=\"media-body\">\r\n                                                <h5 className=\"mb-0 fs--1\">\r\n                                                   {presence.client_last_name}\r\n                                                </h5>\r\n                                             </div>\r\n                                          </div>\r\n                                       {/* </Link> */}\r\n                                    </td>\r\n                                    <td >{presence.activity}</td>\r\n                                    <td >{presence.date}</td>\r\n                                    <td >{getCurrentDay(presence.date)}</td>\r\n                                    <td className=\" pl-5 wspace-no\"> {presence.hour_entree} </td>\r\n                                    <td >{presence.hour_sortie}</td>\r\n                                    <td className=\" text-left\">{presence.note}</td>\r\n                                    <td className=\" text-right text-danger\">{presence.dettes.reste__sum}</td>\r\n                                 </tr>\r\n                              ))}\r\n                              </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <PresenceEditModal show={editModal} onShowShange={setEditModal} presenceData={{presenceId:presenceId, client:client, hourIn:hourIn, hourOut: hourOut, creneau:creneau, note:note, clientId:clientId, date:date, activity:activity}}/>\r\n            <PresenceCreateModal show={presneceCreateModal} onShowShange={setPresneceCreateModal} />\r\n         </div>\r\n         {\r\n            !searchBarActivated &&\r\n            <div className='d-flex text-center justify-content-end'>\r\n                <div className='dataTables_info text-black' id='example5_info '>\r\n                  {/* Showing {activePag.current * sort + 1} to{' '}\r\n                  {data.length > (activePag.current + 1) * sort\r\n                    ? (activePag.current + 1) * sort\r\n                    : data.length}{' '}\r\n                  of {data.length} entries{' '} */}\r\n                </div>\r\n                <div className='dataTables_paginate paging_simple_numbers' id='example5_paginate' >\r\n                  <Button\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(nextpage - 1)\r\n                  }\r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'left', fontSize:'15px', paddingLeft:'8px'}}>\r\n                    Précédent\r\n                  </Button>\r\n                  <span >\r\n                      <input to='/transactions' type='number' className='paginate_button_client' onChange={e => setNextpage(e.target.value)} value={nextpage} style={{width: '100px', border: 'none', height:'99%', textAlign: 'center', fontSize:'15px', backgroundColor: '#ffffff'}}/>\r\n                  </span>\r\n                  <Button \r\n                  style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'center', fontSize:'15px', padding:'2px'}}\r\n\r\n                    onClick={() =>\r\n                     nextpage > 0 && setNextpage(Number(nextpage) + 1)\r\n                    }\r\n                  >\r\n                    Suivant\r\n                  </Button>\r\n                </div>\r\n\r\n              </div>\r\n         }\r\n         </>\r\n         )}\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default PresenceList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\TransactionsList.jsx",["706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723"],"import React, { Fragment , useState, useEffect} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown, Button } from \"react-bootstrap\";\r\nimport Search from \"../../layouts/Search\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport PaiementCreateModal from './PaiementCreateModal';\r\nimport RemunerationCoachModal from './RemunerationCoachModal';\r\nimport RemunerationPersonnelModal from './RemunerationPersonnelModal';\r\nimport useAxios from \"../useAxios\";\r\nimport AutreCreateModal from './AutreCreateModal';\r\n// import DetteCreateModal from './DetteCreateModal';\r\n/// images \r\n\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { transformToNestObject } from \"react-hook-form\";\r\n\r\nimport {\r\n   MuiPickersUtilsProvider,KeyboardDatePicker\r\n } from '@material-ui/pickers';\r\n import DateFnsUtils from '@date-io/date-fns';\r\n \r\n\r\n\r\nconst TransactionList = () => {\r\n   const api = useAxios();\r\n\r\n   const formatDate = (date) => {\r\n      try {\r\n         const returned = new Date(date).toISOString().slice(0, 10)\r\n         return returned\r\n      } catch (error) {\r\n         const returned = new Date().toISOString().slice(0, 10)\r\n         return returned\r\n      }\r\n   }\r\n   \r\nconst [startDate, setStartDate] = useState(formatDate(new Date('2021-01-05')));\r\n   const [endDate, setEndDate] = useState(formatDate(new Date()));\r\n   const [paiementModal, setPaiementModal] = useState(false);\r\n   const [autreModal, setAutreModal] = useState(false);\r\n   const [remunerationCoachModal, setRemunerationCoachModal] = useState(false);\r\n   const [remunerationPersonnelModal, setRemunerationPersonnelModal] = useState(false);\r\n   const [detteModal, setDetteModal] = useState(false);\r\n   // const [modal, setModal] = useState(false);\r\n   const [presenceData, setPresenceData] = useState([]);\r\n   const [searchValue, setSearchValue] = useState('')\r\n   const [transData, setTransData] = useState([]);\r\n   // const savedTransactions = (endpoint)\r\n   // console.log('els clieeents', savedTransactions);\r\n   const capitalizeFirstLetter = (word) => {\r\n      if (word)\r\n          return word.charAt(0).toUpperCase() + word.slice(1);\r\n      return '';\r\n   };\r\n\r\n   // useEffect(() =>  {\r\n   //    const dateDebut = formatDate(startDate)\r\n   //    const dateFin = formatDate(endDate)\r\n   //    if (searchValue !== '') {\r\n   //       api.get(`${process.env.REACT_APP_API_URL}/rest-api/transactions/?start_date=${dateDebut}&end_date=${dateFin}&search=${searchValue}`).then(res => {\r\n   //          setTransData(res.data)\r\n   //          console.log('le resultat des clients est ', res.data);\r\n   //       })\r\n   //    }else {\r\n\r\n   //       api.get(`${process.env.REACT_APP_API_URL}/rest-api/transactions/?start_date=${dateDebut}&end_date=${dateFin}&search=${searchValue}`).then(res => {\r\n   //          setTransData(res.data)\r\n   //          console.log('le resultat des clients est ', res.data);\r\n   //       })}\r\n   // }, [searchValue]);\r\n\r\n   const [uStatus, setUStatus] = useState(null);\r\n\r\n   const [nextpage, setNextpage] = useState(1);\r\n\r\n\r\n   const history = useHistory();\r\n\r\n\r\n   useEffect(() =>  {\r\n      // api.get(`${process.env.REACT_APP_API_URL}/rest-api/presence/?start_date=${startDate}&end_date=${endDate}`).then(res => {\r\n      //    setStartDate(res.data.results)\r\n      //    setEndDate(res.data.results)\r\n      //    console.log('le resultat des clients est ', res.data);\r\n      // })\r\n\r\n      const dateDebut = formatDate(startDate)\r\n      const dateFin = formatDate(endDate)\r\n\r\n      api.get(`${process.env.REACT_APP_API_URL}/rest-api/transactions/?page=${nextpage}&start_date=${dateDebut}&end_date=${dateFin}`).then( res => {\r\n         // setUStatus(res.status);\r\n         console.log(res.status);\r\n         console.log('result ', res);\r\n         setUStatus(res.status);\r\n\r\n         // setTransData(res.data.results);\r\n         // console.log(res.status)\r\n         // return res.status < 400;\r\n      }).catch((error) => {\r\n         if (error.response) {\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            setUStatus(error.response.status);\r\n\r\n\r\n      }\r\n   })\r\n\r\n\r\n   // api.get(`${process.env.REACT_APP_API_URL}/rest-api/clients-name-drop/`).then(res => {\r\n   //    console.log(res.status);\r\n   //    setUStatus(res.status);\r\n   // }).catch(error => {\r\n   //    if (error.response) {\r\n   //       console.log(error.response.data);\r\n   //       console.log(error.response.status);\r\n   //       console.log(error.response.headers);\r\n   //       setUStatus(error.response.status);\r\n   //    }\r\n   // })\r\n\r\n      // const presenceDateDate =  () => {\r\n         // const page = nextpage\r\n      // }\r\n   // }else {\r\n   //    api.get(endpoint).then(res => {\r\n   //       setStartDate(res.data.results)\r\n   //       setEndDate(res.data.results)\r\n   //       console.log('le resultat des clients est ', res.data);\r\n   //    })}\r\n   // presenceDateDate()\r\n   }, [startDate, endDate,nextpage,paiementModal,remunerationCoachModal,remunerationPersonnelModal,autreModal]);\r\n\r\n\r\n\r\n   console.log(uStatus);\r\n\r\n   return (\r\n      <Fragment>\r\n        \r\n         <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} newestOnTop closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      \r\n         <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts  />\r\n         </div>\r\n\r\n         {uStatus == 200 && (\r\n         <>\r\n\r\n            {/* <Search name= 'Abonnée' lien= \"/client/create\"/> */}\r\n            <div className=\"row d-flex justify-content-arround mb-3\">\r\n                  <div className=\"btn btn-success ml-auto\" onClick={e => setPaiementModal(true) }>\r\n                     + Paiement \r\n                  </div>\r\n                  <div className=\"btn btn-danger ml-auto\" onClick={e => setRemunerationPersonnelModal(true) }>\r\n                  + Remunération Personnel \r\n                  </div>\r\n                  <div className=\"btn btn-info ml-auto\" onClick={e => setRemunerationCoachModal(true) }>\r\n                  + Remunération Coach\r\n                  </div>\r\n                  <div className=\"btn btn-primary ml-auto\" onClick={e => setAutreModal(true) }>\r\n                  + Autre Transaction\r\n                  </div>\r\n                <div className=\"col-md-2\">\r\n                      <input type=\"date\"  value={startDate} className=\"form-control\"  onChange={e => setStartDate(e.target.value)}/>\r\n               </div>\r\n               <div className=\" col-md-2\">\r\n                     <input type=\"date\"  value={endDate} className=\"form-control\"  onChange={e => setEndDate(e.target.value)}/>\r\n               </div>\r\n            </div>\r\n\r\n         <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-body\" style={{padding: '5px'}}>\r\n                     <div className=\"table-responsive\">\r\n                        <table className=\"table mb-0 table-striped\">\r\n                           <thead>\r\n                              <tr>\r\n                                 {/* <th className=\"customer_shop\"> ID </th> */}\r\n                                 <th>Date</th>\r\n                                 <th>montant</th>\r\n                                 <th>Type</th>\r\n                                 <th className=\"pl-5 width200\"> Nom </th>\r\n                                 <th className=\"pl-5 width200\">Note</th>\r\n                                 <th></th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody id=\"customers\">\r\n                           {transData.map(tran => (\r\n                              <tr role=\"row\" key={tran.id} className=\"btn-reveal-trigger presences\">\r\n                                 <td className=\"customer_shop_single\">\r\n                                       <div className=\"media d-flex align-items-center\">\r\n                                          <div className=\"media-body\">\r\n                                             <h5 className=\"mb-0 fs--1\">\r\n                                             {capitalizeFirstLetter(tran.date_creation)}\r\n                                             </h5>\r\n                                          </div>\r\n                                       </div>\r\n                                 </td>\r\n                                 <td className=\"\">\r\n                                    <h5 style={ tran.type === 'remunerationProf' || tran.type === 'remuneration'  ? {color: '#FF2E2E'} : tran.type === 'paiement' || tran.type === 'assurance' ? {color: '#24a247'} :  {color: '#000000'}  }>{tran.amount}</h5>\r\n                                 </td>\r\n                                 <td className=\"\">\r\n                                  {tran.type === 'remunerationProf' ? 'Coach' : tran.type === 'paiement' ? capitalizeFirstLetter(tran.abonnement_name) : tran.type === 'remuneration'  ? 'Personnel' : tran.type === 'assurance' ? 'Frais Annuel' : 'Autre'} \r\n                                 </td>\r\n                                     { tran.coach &&\r\n                                       <td className=\" \">\r\n                                          <Link to={`/coach/${tran.coach.id}`} >\r\n                                             {tran.coach.name} \r\n                                          </Link> \r\n                                       </td>\r\n                                     }\r\n                                     {tran.abonnement_client && \r\n                                       <td className=\" \"> \r\n                                          <Link to={`/client/${tran.client_id}`} >\r\n                                             {tran.client_last_name}  \r\n                                          </Link> \r\n                                       </td>\r\n                                     }\r\n                                       {tran.type === 'remuneration' &&\r\n                                             <td className=\" \"> \r\n                                             {tran.client.name}\r\n                                             </td>\r\n                                       }\r\n                                       {tran.type === 'autre' &&\r\n                                             <td className=\" \"> \r\n                                             {tran.name}\r\n                                             </td>\r\n                                       }\r\n                                       {tran.type === 'assurance' &&\r\n                                             <td className=\" \"> \r\n                                             {tran.name}\r\n                                             </td>\r\n                                       }\r\n                                 <td className=\" pl-5\"> { tran.notes } </td>\r\n                                 {/* <td className=\"\">30/03/2018</td> */}\r\n                                 {/* <td className=\" text-right\">\r\n                                    <Drop id={tran.id}/>\r\n                                 </td> */}\r\n                              </tr>\r\n                              ))}\r\n                           </tbody>\r\n                        </table>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {/* <TransactionCreateModal show={modal} onShowShange={setModal}/> */}\r\n            <PaiementCreateModal show={paiementModal} onShowShange={setPaiementModal}/>\r\n            <RemunerationCoachModal show={remunerationCoachModal} onShowShange={setRemunerationCoachModal}/>\r\n            <RemunerationPersonnelModal show={remunerationPersonnelModal} onShowShange={setRemunerationPersonnelModal}/>\r\n            <AutreCreateModal show={autreModal} onShowShange={setAutreModal}/>\r\n         </div>\r\n         <div className='d-flex text-center justify-content-end'>\r\n            <div className='dataTables_info text-black' id='example5_info '>\r\n          \r\n            </div>\r\n            <div className='dataTables_paginate paging_simple_numbers' id='example5_paginate' >\r\n            <Button\r\n               onClick={() =>\r\n               nextpage > 0 && setNextpage(nextpage - 1)\r\n            }\r\n            style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'left', fontSize:'15px', paddingLeft:'8px'}}>\r\n               Précédent\r\n            </Button>\r\n            <span>\r\n                  <input\r\n                  to='/transactions'\r\n                  type='number'\r\n                  className='paginate_button_client  '\r\n                  onChange={e => setNextpage(e.target.value)}\r\n                  value={nextpage}\r\n                  style={{width: '100px', border: 'none', height:'99%', textAlign: 'center', fontSize:'15px'}}\r\n                  />\r\n            </span>\r\n            <Button\r\n            style={{width: '100px', border: 'none', height:'48px', color:'#ffffff',textAlign: 'center', fontSize:'15px', padding:'2px'}}\r\n            onClick={() =>\r\n               nextpage > 0 && setNextpage(nextpage + 1)\r\n            }\r\n            >\r\n               Suivant\r\n            </Button>\r\n            </div>\r\n\r\n         </div>\r\n   \r\n         </>\r\n         )}\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default TransactionList;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\tresorie\\Tresorie.jsx",["724","725","726","727","728"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\n\r\nimport { ToastContainer } from 'react-toastify'\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport useAxios from \"../useAxios\";\r\n\r\n\r\n\r\nconst CoinDetails = () => {\r\n  const api = useAxios();\r\n  const formatDate = (date) => {\r\n        return new Date(date).toISOString().slice(0, 10)\r\n     }\r\n    \r\n    const [caBySalle, setCaBySalle] = useState([])\r\n    const [caByAB, setCaByAB] = useState([])\r\n    const [chiffre, setChiffre] = useState([])\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date())\r\n    const caBySalleEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/ca-by-salle?st=${formatDate(startDate)}&nd=${formatDate(endDate)}`\r\n    const caByABEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/ca-by-abonnement?st=${formatDate(startDate)}&nd=${formatDate(endDate)}`\r\n    const caEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/ca_by_date?st=${formatDate(startDate)}&nd=${formatDate(endDate)}`\r\n    const [caBySalleStatus,setCaBySalleStatus] = useState(null);\r\n    const [caByABStatus,setCaByABStatus] = useState(null);\r\n\r\nuseEffect(() => {\r\n   api.get(caBySalleEND).then((res) => {\r\n        setCaBySalle(res.data)\r\n        setCaBySalleStatus(res.status)\r\n     }).catch(err => {\r\n      setCaBySalleStatus(err.response.status)\r\n     })\r\n    \r\n    api.get(caByABEND).then((res) => {\r\n        setCaByAB(res.data)\r\n        setCaByABStatus(res.status)\r\n     }).catch(err => {\r\n      setCaByABStatus(err.response.status)\r\n     })\r\n    api.get(caEND).then((res) => {\r\n      setChiffre(res.data)\r\n      console.log('resulta ca', res.data);\r\n   })\r\n     \r\n}, [startDate, endDate]);\r\n  return (\r\n    <Fragment>\r\n        <div className=\"testimonial-one owl-right-nav owl-carousel owl-loaded owl-drag mb-4\">\r\n            <ShortCuts />\r\n        </div>\r\n\r\n    {caByABStatus == 200 && (\r\n          <div className=\"row\">\r\n        <div className=\"form-group col-md-2\">\r\n            <label >Date Début</label>\r\n            <input type=\"date\" name=\"start_date\" className=\"form-control\" value={formatDate(startDate)} onChange={e => setStartDate(e.target.value)}/>\r\n        </div>\r\n         <div className=\"form-group col-md-2\">\r\n             <label >Date Fin</label>\r\n            <input type=\"date\" name=\"end_date\" className=\"form-control\" value={formatDate(endDate)} onChange={e => setEndDate(e.target.value)}/>\r\n         </div>\r\n        <div className=\"form-group float-right \">\r\n          <h2 className=\"text-danger ml-5\">Résultat: {chiffre.chiffre_affaire ? chiffre.chiffre_affaire : 0} DA</h2>\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\n    {caBySalleStatus == 200 && (\r\n    <div className=\"row\">\r\n    <div className=\"col-lg-4 col-xxl-4  col-sm-6\">\r\n     <div className=\"card\"  >\r\n       <div className=\"card-header border-0\">\r\n         <h4 className=\"mb-0 text-black fs-20\">Chiffre d'affaire par salle</h4>\r\n       </div>\r\n       <div className=\"card-body p-0\">\r\n       <PerfectScrollbar style={{ height: \"370px\" }} id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\" >\r\n         <div className=\"table-responsive card-table\">\r\n           <table className=\"table text-center bg-warning-hover\">\r\n             <thead>\r\n               <tr>\r\n                 <th className=\"text-left\"><h5>nom</h5></th>\r\n                 <th className=\"text-center\"><h5>Mantant</h5></th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n               {caBySalle.map(tran => (\r\n                 <tr key={tran.name }>\r\n                 <td className=\"py-2 text-left\">\r\n                   {tran.name} \r\n                 </td>\r\n                   <td className=\"py-2 pl-5 wspace-no text-center\">\r\n                       {tran.abonnements__type_abonnement_client__transactions__amount__sum}\r\n                   </td>\r\n               </tr>\r\n               ))\r\n               }\r\n             </tbody>\r\n           </table>\r\n         </div>\r\n       </PerfectScrollbar>\r\n\r\n       </div>\r\n       <div className=\"card-footer border-0 pt-0 text-center\">\r\n         <Link to=\"/transactions\" className=\"btn-link\">\r\n           Afficher tout <i className=\"fa fa-caret-right ml-2 scale-2\" />\r\n         </Link>\r\n       </div>\r\n     </div>\r\n   </div>\r\n\r\n\r\n   <div className=\"col-lg-4 col-xxl-4  col-sm-6\" >\r\n     <div className=\"card\">\r\n       <div className=\"card-header border-0\">\r\n         <h4 className=\"mb-0 text-black fs-20\">Chiffre d'affaire par Abonnement</h4>\r\n       </div>\r\n       <div className=\"card-body p-0\">\r\n       <PerfectScrollbar style={{ height: \"370px\" }} id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\" >\r\n         <div className=\"table-responsive card-table\">\r\n           <table className=\"table text-center bg-warning-hover\">\r\n             <thead>\r\n               <tr>\r\n                 <th className=\"text-left\"><h5>nom</h5></th>\r\n                 <th className=\"text-center\"><h5>Mantant</h5></th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n               {caByAB.map(tran => (\r\n                 <tr key={tran.name}>\r\n                 <td className=\"py-2 text-left\">\r\n                   {tran.name} \r\n                 </td>\r\n               <td className=\"py-2 pl-5 wspace-no text-center\">\r\n                   {tran.type_abonnement_client__transactions__amount__sum}\r\n               </td>\r\n               </tr>\r\n               ))}\r\n             </tbody>\r\n           </table>\r\n         </div>\r\n       </PerfectScrollbar>\r\n\r\n       </div>\r\n       <div className=\"card-footer border-0 pt-0 text-center\">\r\n         <Link to=\"/transactions\" className=\"btn-link\">\r\n           Transactions <i className=\"fa fa-caret-right ml-2 scale-2\" />\r\n         </Link>\r\n       </div>\r\n     </div>\r\n   </div>\r\n\r\n\r\n    </div>\r\n    )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CoinDetails;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\index.js",["729","730"],"import React, { Fragment, useState } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport NavHader from \"./NavHader\";\r\nimport Header from \"./Header\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst JobieNav = ({ title, onClick: ClickToAddEvent, onClick2, onClick3 }) => {\r\n   const [toggle, setToggle] = useState(\"\");\r\n   const onClick = (name) => setToggle(toggle === name ? \"\" : name);\r\n\r\n   // const [NamesTab, setNamesTab] = useState(title);\r\n\r\n   const [textTab, setTextTab] = useState(null);\r\n\r\n   let match = window.location.pathname === \"/\";\r\n   let match0 = window.location.pathname === \"/client\" ;\r\n   let match1 = useRouteMatch(\"/transactions\");\r\n   let match2 = useRouteMatch(\"/creneaux\");\r\n   let match3 = useRouteMatch(\"/presences\");\r\n   let match4 = useRouteMatch(\"/coach\");\r\n   let match5 = useRouteMatch(\"/personnel\");\r\n   let match6 = useRouteMatch(\"/configuration\");\r\n   let match7 = useRouteMatch(\"/users\");\r\n   let match8 = useRouteMatch(\"/history-abc\");\r\n   let match9 = useRouteMatch(\"/tresorie\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   React.useEffect(() => {\r\n      \r\n      if (match) {\r\n         setTextTab(\"Tableau de Board\")\r\n      }if (match0) {\r\n         setTextTab(\"Client\")\r\n      }if(match1){\r\n         setTextTab(\"Transactions\")\r\n      }if (match2) {\r\n         setTextTab(\"Créneaux\")\r\n      }if (match3) {\r\n         setTextTab(\"Présences\")\r\n      }if (match4) {\r\n         setTextTab(\"Coachs\")\r\n      }if (match5) {\r\n         setTextTab(\"Personnels\")\r\n      }if(match6){\r\n         setTextTab(\"Configuration\")\r\n      }if (match7) {\r\n         setTextTab(\"Users\")\r\n      }if (match8) {\r\n         setTextTab(\"History\")\r\n      }if (match9) {\r\n         setTextTab(\"Trésorie\")\r\n      }\r\n   }, [match,match0,match1,match2,match3,match4,match5,match6,match7,match8,match9]);\r\n  \r\n\r\n   return (\r\n      <Fragment>\r\n         <NavHader />\r\n         <SideBar onClick={() => onClick2()} onClick3={() => onClick3()}  />\r\n         <Header\r\n            textTab={textTab}\r\n            onNote={() => onClick(\"chatbox\")}\r\n            onNotification={() => onClick(\"notification\")}\r\n            onProfile={() => onClick(\"profile\")}\r\n            toggle={toggle}\r\n            title={title}\r\n            onBox={() => onClick(\"box\")}\r\n            onClick={() => ClickToAddEvent()}\r\n         />\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default JobieNav;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\useAxios.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\Pagination.js",["731","732","733"],"import React, { useState } from 'react';\r\n\r\nconst Pagination = ({ UserPerPage, totalUsers, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalUsers / UserPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    \r\n    const [activeLink, setActiveLink] = useState(null);\r\n\r\n    const [activeId, setActiveId] = useState(1);\r\n\r\n    const handleClick = (id) => {\r\n        setActiveLink(id);\r\n    };\r\n    return (\r\n        <nav>\r\n            <ul className='pagination d-flex mt-2 border-0' style={{display: \"flex\", justifyContent: \"flex-end\", cursor: \"pointer\"}}>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} onClick={() => setActiveId(number)} className={\" \" + (activeId === number ? \"text-primary\" : \"\") }>\r\n                        <a onClick={() => paginate(number)} className='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\salle\\SalleCreate.js",["734","735","736"],"import React, { useState , useEffect, useReducer, useContext} from \"react\";\r\nimport useAxios from \"../useAxios\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { SalleContext } from './Salle';\r\n\r\n\r\n\r\nconst AddSalle = () => {\r\n  const { state, dispatch } = useContext(SalleContext);\r\n  const api = useAxios();\r\n\r\n  const [salleName, setSalleName] = useState(\"\");\r\n  const [salleAdresse, setSalleAdresse] = useState(\"\");\r\n  const [sallePhone, setSallePhone] = useState(\"\");\r\n\r\n  let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/salle-sport/`\r\n  const [savedSalles, setSavedSalles] = useState([])\r\n  \r\n  //FK \r\n  useEffect(() => {\r\n    api.get(endpoint).then((res) => {\r\n      setSavedSalles(res.data)\r\n    })\r\n  }, []);\r\n  \r\n  useEffect(()=>{\r\n    dispatch({type: \"get\", payload: savedSalles})\r\n  },[savedSalles]) \r\n\r\n  \r\n  const handleSubmit = async e => {\r\n      let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/salle-sport/create`\r\n      e.preventDefault();\r\n      const newSalle = {name:salleName, adresse: salleAdresse, phone: sallePhone}\r\n\r\n      await api.post(endpoint, newSalle)\r\n      dispatch({type:'add', payload:newSalle})\r\n      setSalleName('')\r\n      setSalleAdresse('')\r\n      setSallePhone('')\r\n    }\r\n  return (\r\n    //<div>\r\n      <div>\r\n        {state.salles.map(salle =>  (\r\n       <div >\r\n         <ul key={salle.id}>\r\n           <li>{salle.name}</li>\r\n           <li>{salle.adresse}</li>\r\n           <li>{salle.phone}</li>\r\n         </ul>\r\n         </div>\r\n        ))}\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" id=\"salle_name\" name=\"name\" onChange={e => setSalleName(e.target.value)} />\r\n            <label>name</label>\r\n            <br/>\r\n            \r\n            <input type=\"text\" id=\"salle_adresse\" name=\"adresse\" onChange={e => setSalleAdresse(e.target.value)} />\r\n            <label>adresse </label>\r\n            <br/>\r\n          \r\n            <input type=\"text\" name=\"phone\" id=\"salle_phone\" onChange={e => setSallePhone(e.target.value)} />\r\n            <label>phone </label>\r\n            <br/>\r\n            <Button type=\"submit\" >Submit</Button>\r\n        </form>\r\n         \r\n\r\n\r\n      </div>\r\n  );\r\n}\r\nexport default AddSalle ;\r\n\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\PageTitle.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\Search.js",["737"],"import React, {useContext}  from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Search = (props) => {\r\n   // const context = useContext({ClientContext,SerchPlanContext})\r\n\r\n  return (\r\n      <div className=\"form-head d-flex mb-4 mb-md-5 align-items-start\">\r\n         <div className=\"input-group search-area d-inline-flex\">\r\n            <div className=\"input-group-append\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"flaticon-381-search-2\" />\r\n               </span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"rechercher un client\" />\r\n         </div>\r\n         <Link to={props.lien} className=\"btn btn-primary ml-auto\">\r\n               {props.name} \r\n         </Link>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\ShortCuts.js",["738","739","740","741","742","743","744","745","746","747","748","749"],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\Alert.jsx",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\Users.js",["750"],"import React from 'react'\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nfunction Users({usersData,setUserId, setSelectedUser, setUserGroup, userGroup, loading}) {\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n  return (\r\n    <>\r\n          {usersData.map(user => (\r\n              <>\r\n                  <tr role=\"row\" key={user.id} className=\"btn-reveal-trigger presences cursor-abonnement\" onClick={e => {\r\n                      setUserId(user.id)\r\n                      setSelectedUser(user)\r\n                      setUserGroup(user.groups)\r\n                      // setUserModal(true)\r\n                      console.log('user data-> ', user);\r\n                      console.log(\"user group\", userGroup);\r\n                  }}>\r\n                      <td className=\" pl-5\"> {user.id} </td>\r\n                      <td className=\"customer_shop_single\">\r\n                          <div className=\"media d-flex align-items-center\">\r\n                              <div className=\"media-body\">\r\n                                  <h5 className=\"mb-0 fs--1\">\r\n                                      {user.email}\r\n                                      {/* <Link to={\"users/edit\"}> */}\r\n                                      {/* <span>Update</span> */}\r\n                                      {/* </Link> */}\r\n                                  </h5>\r\n                              </div>\r\n                          </div>\r\n                      </td>\r\n                      <td className=\"text-center\">\r\n                          <a href={`/user/edit/${user.id}`}>\r\n                              <UpdateIcon fontSize=\"1rem\" className='' />\r\n                              <span className=\"text-center\">Modifier</span>\r\n\r\n                          </a>\r\n                      </td>\r\n                      {/* <td className=\"text-center\">\r\n                                    <a className=\"text-danger\" onClick={async () => {\r\n                                       await useAxios.delete(`${process.env.REACT_APP_API_URL}/rest-api/users/delete/${user.id}`)\r\n                                    }}>\r\n                                       <DeleteIcon fontSize=\"1rem\" />\r\n                                       <span className=\"text-center\">Supprimer</span>\r\n\r\n                                    </a>\r\n                                 </td> */}\r\n\r\n                  </tr>\r\n\r\n              </>\r\n          ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ComponentToPrint.js",["751"],"import React from \"react\";\r\nimport logo from \"../../../images/logo.png\";\r\n\r\nexport const ComponentToPrint = React.forwardRef((props, ref) => {\r\n//   const { id, date } = props;\r\nconsole.log('PROESSSS', props);\r\n  return (\r\n    <div className=\"container\"  ref={ref}>\r\n    <div className=\"row px-5\">\r\n        {/* <div className=\"col-12\">\r\n            <div className=\"card\">\r\n                <div className=\"p-0\">\r\n                    <div className=\"row p-5\">\r\n                        <div className=\"col-md-6\">\r\n                            <img  src={logo} style={{width: \"4rem\", height: \"4rem\"}} />\r\n                        </div>\r\n                        <div className=\"col-md-6 text-right\">\r\n                            <p className=\"font-weight-bold mb-1\">N°: <span className=\"font-weight-light\">#{props.value.id}</span></p>\r\n                            <p className=\"text-muted\">Date: <span className=\"font-weight-light\">{props.value.date_creation}</span></p>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <p className=\"font-weight-bold mb-4 h4\">Adhérant</p>\r\n                            <p className=\"mb-1 h4\">Nom: <span className=\"font-weight-light\">{props.value.client_last_name}</span></p>\r\n                            <p className=\"mb-1 h4\">ID: <span className=\"font-weight-light\">{props.value.client_id}</span></p>\r\n                        </div>\r\n                    </div>   \r\n                    <div className=\"row p-5\">\r\n                        <div className=\"col-reverse\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style={{fontSize: \"21px\"}} className=\"border-0 text-uppercase font-weight-bold h1\">Abonnement</th>\r\n                                        <th style={{fontSize: \"21px\"}} className=\"border-0 text-uppercase font-weight-bold h1\">Séances</th>\r\n                                        <th style={{fontSize: \"21px\"}} className=\"border-0 text-uppercase font-weight-bold h1\">Début</th>\r\n                                        <th style={{fontSize: \"21px\"}} className=\"border-0 text-uppercase font-weight-bold h1\">Fin</th>\r\n                                        <th style={{fontSize: \"21px\"}} className=\"border-0 text-uppercase font-weight-bold h1\">Montant</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td><div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.abonnement_name}</div></td>\r\n                                        <td><div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.quantity}</div></td>\r\n                                        <td><div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.start_abc}</div></td>\r\n                                        <td><div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.end_abc}</div></td>\r\n                                        <td><div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.amount}</div></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <h4 className=''>Abonnement</h4>\r\n                            <div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.abonnement_name}</div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <h4>Séances</h4>\r\n                            <div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.quantity}</div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <h4>Début</h4>\r\n                            <div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.start_abc}</div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <h4>Fin</h4>\r\n                            <div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.end_abc}</div>\r\n                        </div>\r\n                        <div className=\"d-flex\">\r\n                            <h4>Montant</h4>\r\n                            <div style={{fontSize: \"19px\"}} className=\"font-weight-lighter mt-1 h1\" >{props.value.amount}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row bg-light text-dark p-2\">\r\n                        <div className=\"py-2 px-3 d-flex text-left\">\r\n                            <div className=\"mb-2 h3 mr-4\">Total : </div>\r\n                            <div className=\"h3 font-weight-light\">{props.value.amount}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> */}\r\n        <div className=\"col-12 pt-5 p-3\">\r\n            <div className=\"row pt-4 p-5\">\r\n                <div className=\"col-12 mb-2 text-center\">\r\n                    <img  src={logo} style={{width: \"5rem\", height: \"5rem\"}} />\r\n                </div>\r\n            </div>   \r\n        \r\n            <div className=\"row mb-5 py-3 \">\r\n                <div className=\"col-6\">\r\n                    <p className=\"font-weight-bold mb-4 h2\">Adhérant</p>\r\n                    <p className=\"mb-1 h3 mb-3\">ID : <span className=\"font-weight-light\">{props.value.client_id}</span></p>\r\n                    <p className=\"mb-1 h3 mb-2\">Nom : <span className=\"font-weight-light\">{props.value.client_last_name}</span></p>\r\n                </div>\r\n                <div className=\"col-6 text-right font-italic\">\r\n                    <p className=\"mb-1 h3 \">N° : <span className=\"font-weight-light\">#{props.value.id}</span></p>\r\n                    <p className=\"text-muted h3\">Date : <span className=\"font-weight-light\">{props.value.date_creation}</span></p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <hr className=\"mb-2\"/>\r\n\r\n\r\n            <div className=\"row d-flex align-items-center px-5 mx-5 pt-5 mb-5\">\r\n                <div className=\"col-12 justify-content-between align-items-center d-flex mb-3 text-uppercase\">\r\n                    <th><h4 className='h2 mr-5'>Abonnement : </h4></th>\r\n                    <td><div className=\"text-left font-weight-lighter mt-1 h2 text-capitalize\" >{props.value.abonnement_name}</div></td>\r\n                </div>\r\n                <div className=\"col-12 justify-content-between align-items-center d-flex mb-3 text-uppercase\">\r\n                    <th><h4 className=\"h2 mr-5\">Séances : </h4></th>\r\n                    <td><div className=\"text-left font-weight-lighter mt-1 h2\" >{props.value.quantity}</div></td>\r\n                </div>\r\n                <div className=\"col-12 justify-content-between align-items-center d-flex mb-3 text-uppercase\">\r\n                    <th><h4 className=\"h2 mr-5\">Début : </h4></th>\r\n                    <td><div className=\"text-left font-weight-lighter mt-1 h2\" >{props.value.start_abc}</div></td>\r\n                </div>\r\n                <div className=\"col-12 justify-content-between align-items-center d-flex mb-3 text-uppercase \">\r\n                    <th><h4 className=\"h2 mr-5\">Fin : </h4></th>\r\n                    <td><div className=\"text-left font-weight-lighter mt-1 h2\" >{props.value.end_abc}</div></td>\r\n                </div>\r\n                <div className=\"col-12 justify-content-between align-items-center d-flex mb-3 text-uppercase\">\r\n                    <th><h4 className=\"h2 mr-5\">Montant : </h4></th>\r\n                    <td><div className=\"text-left font-weight-lighter mt-1 h2\" >{props.value.amount}</div></td>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex flex-row bg-light text-dark p-2 mt-5\">\r\n                <div className=\"py-2 px-3 d-flex text-left align-items-center\">\r\n                    <div className=\"mb-2 h1 mr-4\">Total : </div>\r\n                    <div className=\"h1 font-weight-light\">{props.value.amount}</div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n  );\r\n});\r\n\r\n\r\n// export class ComponentToPrint extends React.PureComponent {\r\n//     render() {\r\n//       return (\r\n//         <div className=\"container\">\r\n//     <div className=\"row\">\r\n//         <div className=\"col-12\">\r\n//             <div className=\"card\">\r\n//                 <div className=\"card-body p-0\">\r\n//                     <div className=\"row p-5\">\r\n//                         <div className=\"col-md-6\">\r\n//                             <img src=\"http://via.placeholder.com/400x90?text=logo\" />\r\n//                         </div>\r\n\r\n//                         <div className=\"col-md-6 text-right\">\r\n//                             <p className=\"font-weight-bold mb-1\">Invoice #550</p>\r\n//                             <p className=\"text-muted\">Due to: 4 Dec, 2019</p>\r\n//                         </div>\r\n//                     </div>\r\n//                     <hr className=\"my-5\" />\r\n\r\n//                     <div className=\"row pb-5 p-5\">\r\n//                         <div className=\"col-md-6\">\r\n//                             <p className=\"font-weight-bold mb-4\">Client Information</p>\r\n//                             <p className=\"mb-1\">John Doe, Mrs Emma Downson</p>\r\n//                             <p>Acme Inc</p>\r\n//                             <p className=\"mb-1\">Berlin, Germany</p>\r\n//                             <p className=\"mb-1\">6781 45P</p>\r\n//                         </div>\r\n\r\n//                         <div className=\"col-md-6 text-right\">\r\n//                             <p className=\"font-weight-bold mb-4\">Payment Details</p>\r\n//                             <p className=\"mb-1\"><span className=\"text-muted\">VAT: </span> 1425782</p>\r\n//                             <p className=\"mb-1\"><span className=\"text-muted\">VAT ID: </span> 10253642</p>\r\n//                             <p className=\"mb-1\"><span className=\"text-muted\">Payment Type: </span> Root</p>\r\n//                             <p className=\"mb-1\"><span className=\"text-muted\">Name: </span> John Doe</p>\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <div className=\"row p-5\">\r\n//                         <div className=\"col-md-12\">\r\n//                             <table className=\"table\">\r\n//                                 <thead>\r\n//                                     <tr>\r\n//                                         <th className=\"border-0 text-uppercase small font-weight-bold\">ID</th>\r\n//                                         <th className=\"border-0 text-uppercase small font-weight-bold\">Item</th>\r\n//                                         <th className=\"border-0 text-uppercase small font-weight-bold\">Description</th>\r\n//                                         <th className=\"border-0 text-uppercase small font-weight-bold\">Quantity</th>\r\n//                                         <th className=\"border-0 text-uppercase small font-weight-bold\">Unit Cost</th>\r\n//                                         <th className=\"border-0 text-uppercase small font-weight-bold\">Total</th>\r\n//                                     </tr>\r\n//                                 </thead>\r\n//                                 <tbody>\r\n//                                     <tr>\r\n//                                         <td>1</td>\r\n//                                         <td>Software</td>\r\n//                                         <td>LTS Versions</td>\r\n//                                         <td>21</td>\r\n//                                         <td>$321</td>\r\n//                                         <td>$3452</td>\r\n//                                     </tr>\r\n//                                     <tr>\r\n//                                         <td>1</td>\r\n//                                         <td>Software</td>\r\n//                                         <td>Support</td>\r\n//                                         <td>234</td>\r\n//                                         <td>$6356</td>\r\n//                                         <td>$23423</td>\r\n//                                     </tr>\r\n//                                     <tr>\r\n//                                         <td>1</td>\r\n//                                         <td>Software</td>\r\n//                                         <td>Sofware Collection</td>\r\n//                                         <td>4534</td>\r\n//                                         <td>$354</td>\r\n//                                         <td>$23434</td>\r\n//                                     </tr>\r\n//                                 </tbody>\r\n//                             </table>\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <div className=\"d-flex flex-row-reverse bg-dark text-white p-4\">\r\n//                         <div className=\"py-3 px-5 text-right\">\r\n//                             <div className=\"mb-2\">Grand Total</div>\r\n//                             <div className=\"h2 font-weight-light\">$234,234</div>\r\n//                         </div>\r\n\r\n//                         <div className=\"py-3 px-5 text-right\">\r\n//                             <div className=\"mb-2\">Discount</div>\r\n//                             <div className=\"h2 font-weight-light\">10%</div>\r\n//                         </div>\r\n\r\n//                         <div className=\"py-3 px-5 text-right\">\r\n//                             <div className=\"mb-2\">Sub - Total amount</div>\r\n//                             <div className=\"h2 font-weight-light\">$32,432</div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     </div>\r\n    \r\n//     <div className=\"text-light mt-5 mb-5 text-center small\">by : <a className=\"text-light\" target=\"_blank\" href=\"http://totoprayogo.com\">totoprayogo.com</a></div>\r\n\r\n// </div>\r\n//       );\r\n//     }\r\n//   }","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\personnels\\PaiementModal.jsx",["752","753","754","755","756","757","758","759","760"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nconst PaiementModal = ({show, onShowShange, coachData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const coachId  = coachData['coachId']\r\n     const coachName =  coachData['coachName']\r\n  const paiementCreateEND =`${process.env.REACT_APP_API_URL}/rest-api/transactions/remunerationProf/create` \r\n\r\n  const [amount, setAmount] = useState(\"\")\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n        const paiementDetails = {\r\n          coach  : Number(coachId) ,\r\n          amount : amount\r\n        }\r\n        console.log(\" =================> new Creneau \", paiementDetails);\r\n        api.post(paiementCreateEND, paiementDetails).then( res => {\r\n          notifySuccess('Paiement creer avec succés')\r\n                handleShow()\r\n          }).catch(err => {\r\n            notifyError(\"echec de paiement\")\r\n          })\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className=\"text-black\">C\r\n      </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"input-group input-group-lg\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text bg-white border rounded-0\">\r\n                          Montant\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control rounded-0\"\r\n                        placeholder=\"0000000\"\r\n                        onChange={ e => setAmount(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                      onClick={handleShow}\r\n                      variant=\"danger light\"\r\n                      className='m-2'\r\n                      >\r\n                      Fermer\r\n                  </Button>\r\n                  <Button variant=\"primary\" type=\"submit\">Valider</Button>\r\n                </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default PaiementModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\coachs\\PaiementModal.jsx",["761","762","763","764","765","766","767","768","769"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nconst PaiementModal = ({show, onShowShange, coachData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n     const coachId  = coachData['coachId']\r\n     const coachName =  coachData['coachName']\r\n  const paiementCreateEND =`${process.env.REACT_APP_API_URL}/rest-api/transactions/remunerationProf/create` \r\n\r\n  const [amount, setAmount] = useState(\"\")\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n        const paiementDetails = {\r\n          coach  : Number(coachId) ,\r\n          amount : amount\r\n        }\r\n        console.log(\" =================> new Creneau \", paiementDetails);\r\n        api.post(paiementCreateEND, paiementDetails).then( res => {\r\n          notifySuccess('Paiement creer avec succés')\r\n                handleShow()\r\n          }).catch(err => {\r\n            notifyError(\"echec de paiement\")\r\n          })\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className=\"text-black\">C\r\n      </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"input-group input-group-lg\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text bg-white border rounded-0\">\r\n                          Montant\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control rounded-0\"\r\n                        placeholder=\"0000000\"\r\n                        onChange={ e => setAmount(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                      onClick={handleShow}\r\n                      variant=\"danger light\"\r\n                      className='m-2'\r\n                      >\r\n                      Fermer\r\n                  </Button>\r\n                  <Button variant=\"primary\" type=\"submit\">Valider</Button>\r\n                </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default PaiementModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\AbonnementClientModal.jsx",["770","771","772"],"import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport {  Button, Modal } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\n \r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst AbonnementClientModal = ({show, onShowShange, abcData}) => {\r\n  const api = useAxios();\r\n  const formatDate = (date) => {\r\n      return new Date(date).toISOString().slice(0, 10)\r\n   }\r\n   const today = new Date()\r\n   var before = today.setDate(today.getDate() - 60);\r\n   var after = today.setDate(today.getDate() + 120);\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const [startDate, setStartDate] = useState(formatDate(before));\r\n    const [endDate, setEndDate] = useState(formatDate(after));\r\n  \r\n    const [abcs, setAbcs] = useState([])\r\n      const clientId = abcData['clientId']\r\n      const abcEnd = `${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client-all/?cl=${clientId}&start=${startDate}&end=${endDate}`\r\n    useEffect(() => {\r\n       const fetchData = async () => {\r\n          try {\r\n             const res = await api.get(abcEnd);\r\n             setAbcs(res.data)\r\n          } catch (error) {\r\n             console.log(error);\r\n          }\r\n       }\r\n       fetchData();\r\n    }, [abcData['clientId'], startDate, endDate] );  \r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Abonnements du client <span className='test-danger'>{clientId}</span> </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <div className=\"col-xl-12 col-lg-6\">\r\n      <div className=\"row d-flex\">\r\n         <div className=\"form-group col-md-6\">\r\n            <label className='text-dark font-weight-bold'>Date de début</label>\r\n            <input type=\"date\" name=\"start_date\" className=\"form-control\" value={startDate}  onChange={e => setStartDate(e.target.value)}/>\r\n         </div>\r\n         <div className=\"form-group col-md-6\">\r\n            <label className='text-dark font-weight-bold'>Date de Fin</label>\r\n            <input type=\"date\" name=\"end_date\" className=\"form-control\" value={endDate}  onChange={e => setEndDate(e.target.value)}/>\r\n         </div>\r\n       </div>\r\n         <div className=\"card\">\r\n            {/* <div className=\"card-header border-0 d-xl-flex d-lg-block d-md-flex d-sm-flex d-block\">\r\n                  <h4 className=\"fs-20 text-black\">\r\n                     Fiche Créneau\r\n                  </h4>\r\n            </div> */}\r\n            <div className=\"table-responsive\">\r\n               <table className=\"table\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th scope=\"col\"><h5>Nom</h5></th>\r\n                        <th scope=\"col\"><h5>Type</h5></th>\r\n                        <th scope=\"col\"><h5>Séances</h5></th>\r\n                        <th scope=\"col\"><h5>Date D'éxpiration</h5></th>\r\n                        <th scope=\"col\"><h5>Reste</h5></th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {abcs.map( abc => (\r\n                     <tr key={abc.id}>\r\n                        <td className=\"font-w600 text-left\">\r\n                        {abc.type_abonnement_name}\r\n                        </td>\r\n                        <td>\r\n                           {abc.cochage ? 'prepayé' : 'Normal'}\r\n                        </td>\r\n                        <td>{abc.is_time_volume ? abc.left_minutes : abc.is_free_access ? 'Forfait': abc.presence_quantity }</td>\r\n                        <td>\r\n                           {abc.end_date}\r\n                        </td>\r\n                        <td>\r\n                           {abc.reste}\r\n                        </td>\r\n                     </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default AbonnementClientModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\AssuranceCreateModal.jsx",["773","774","775","776","777","778","779","780","781","782"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst AssuranceCreateModal = ({show, onShowShange, clientData}) => {\r\n  const api = useAxios();\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n\r\n    // let clientEnd = `${process.env.REACT_APP_API_URL}/rest-api/clients-name/`\r\n    // let assuranceEnd = `${process.env.REACT_APP_API_URL}/rest-api/assurance/`\r\n    \r\n    // const clients = useGetAPI(clientEnd)\r\n    // const assurance = useGetAPI(assuranceEnd)\r\n    // console.log('les clients ', clients);\r\n    // const history = useHistory();\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [notes, setNotes] = useState(\"\");\r\n    // const [type, setType] = useState(\"\");\r\n    // const [client, setClient] = useState(\"\");\r\n   //  useEffect(() => {\r\n         // setPeople(clients)\r\n      //   console.log('THE NEW CLIENT ONEEE ', res.data);\r\n\r\n      //   setCreneauDetail(res.data)\r\n      //   console.log(res.data);\r\n      //   setNewActivity(activities[creneauActivite].id)\r\n      //   setNewCoach(coachs[creneauCoach].id)\r\n      //   setNewStartHour(startHour)\r\n      //   setNewEndHour(endHour)\r\n      //   setNewDay(days[day].day)\r\n      //   setNewPlanning(plannings[creneauPlanning].id)\r\n       \r\n   //  }, [])\r\n\r\n    // }, [transactionData['creneauId']]);\r\n    const HandleSubmit = async e => {\r\n      e.preventDefault();\r\n    let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/transactions/assurance/create`\r\n\r\n      const newTransaction = {\r\n        amount : amount ,\r\n        notes : notes ,\r\n        // type : type ,\r\n        client : clientData['clientId']\r\n        }\r\n        await api.post(endpoint, newTransaction)\r\n        // history.push(\"/client\")\r\n        refreshPage()\r\n        // handleShow()\r\n        // console.log('THE NEW CLIENT ', newTransaction);\r\n    }\r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black' >Creneau</Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      \r\n    <form onSubmit={HandleSubmit}>\r\n          <div className=\"form-row\">\r\n            {/* <div className=\"form-group col-md-6\">\r\n              <Autocomplete\r\n                // id={(option) =>  option['id']}\r\n                onChange={(event, value) => setClient(value.id)}\r\n                // onChange={handleSubmit}\r\n                options={clients.results}\r\n                //  value={activities[creneauActivite]}\r\n                getOptionSelected={(option) =>  option['id']}\r\n                getOptionLabel={(option) =>  option['last_name']}\r\n                renderInput={(params) => <TextField {...params}  label=\"Client\" variant=\"outlined\" fullWidth />}\r\n              />\r\n            </div> */}\r\n            {/* <div className=\"form-group col-md-6\">\r\n              <Autocomplete\r\n                // id={(option) =>  option['id']}\r\n                onChange={(event, value) => setType(value.id)}\r\n                // onChange={handleSubmit}\r\n                options={assurance}\r\n                //  value={activities[creneauActivite]}\r\n                getOptionSelected={(option) =>  option['id']}\r\n                getOptionLabel={(option) =>  (\r\n                    option['price'])}\r\n                renderInput={(params) => <TextField {...params}  label=\"Type d'assurance\" variant=\"outlined\" fullWidth />}\r\n              />\r\n            </div> */}\r\n            <div className=\"form-group col-md-6\">\r\n            <TextField\r\n              type=\"number\"\r\n            //   defaultValue={}\r\n              label=\"Montant\"\r\n              variant=\"outlined\"\r\n              onChange={e=> setAmount(e.currentTarget.value)}\r\n              // onChange={(event, value) => setNewStartHour(value)}\r\n              fullWidth\r\n            />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n            <TextField\r\n              type=\"text\"\r\n              onChange={e=> setNotes(e.currentTarget.value)}\r\n\r\n            //   defaultValue={endHour}\r\n              // value={creneauDetail.hour_finish}\r\n              // className={classes.textField}\r\n              variant=\"outlined\"\r\n              label=\"Note\"\r\n\r\n              fullWidth\r\n              // defaultValue={coachs[coach]}\r\n            //   onChange={e => setNewEndHour(e.currentTarget.value)}\r\n            />\r\n            </div>\r\n          </div>\r\n          <Button\r\n              onClick={handleShow}\r\n              variant=\"danger light\"\r\n              className='m-2'\r\n              >\r\n              Annulé\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\">Confirmer</Button>\r\n          </form>\r\n     </Modal.Body>\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default AssuranceCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PaiementsClientModal.jsx",["783","784","785","786","787","788","789","790","791","792","793","794"],"import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\n\r\nconst PaiementsClientModal = ({show, onShowShange, paiementsData}) => {\r\n  const api = useAxios();\r\n\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const [paiements, setPaimeents] = useState([])\r\n    const clientId = paiementsData['clientId']\r\n      const paiementsEnd = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement-by-client/?cl=${clientId}`\r\n\r\n    useEffect(() => {\r\n       const fetchData = async () => {\r\n          try {\r\n             const res = await api.get(paiementsEnd);\r\n             setPaimeents(res.data)\r\n          } catch (error) {\r\n             console.log(error);\r\n          }}\r\n       fetchData();\r\n    }, [paiementsData['clientId'], show] );\r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\" show={show} onHide={handleShow} tabIndex=\"-1\">\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black font-weight-bold'>Paiements du client <span className='test-danger'>{clientId}</span></Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <div className=\"col-xl-12 col-lg-6\">\r\n         <div className=\"card\">\r\n              \r\n            <div className=\"table-responsive\">\r\n               <table className=\"table\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th scope=\"col\"><h5>Mantant</h5></th>\r\n                        <th scope=\"col\"><h5>Abonnement</h5></th>\r\n                        <th scope=\"col\"><h5>Date</h5></th>\r\n                        <th scope=\"col\"><h5>Notes</h5></th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {paiements.map( paiement => (\r\n                     <tr key={paiement.id}>\r\n                        <td className=\"font-w600 text-left\">{paiement.amount}</td>\r\n                        <td>{paiement.abonnement_name}</td>\r\n                        <td>{paiement.date_creation}</td>\r\n                        <td>{paiement.notes}</td>\r\n                     </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default PaiementsClientModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PresencesClientModal.jsx",["795","796","797","798","799","800","801","802","803","804","805","806"],"import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst PresencesClientModal = ({show, onShowShange, presencesData}) => {\r\n  const api = useAxios();\r\n\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const formatDate = (date) => {\r\n      return new Date(date).toISOString().slice(0, 10)\r\n   }\r\n    const [startDate, setStartDate] = useState(formatDate(new Date('2000-01-01')));\r\n   const [endDate, setEndDate] = useState(formatDate(new Date()));\r\n    const [presences, setPresences] = useState([])\r\n    const [presencesCount, setPresencesCount] = useState('')\r\n      const clientId = presencesData['clientId']\r\n      const presencesEnd = `${process.env.REACT_APP_API_URL}/rest-api/presence/client/?cl=${clientId}&start_date=${formatDate(startDate)}&end_date=${formatDate(endDate)}`\r\n   //  useEffect(() => {\r\n   //    // if (paiementsData['clientId']) {\r\n   //       if (show == 'true') {\r\n   //          api.get(paiementsEnd).then( res => {\r\n   //             setPaimeents(res.data)\r\n   //             console.log('les paiements', paiements, res.data);\r\n   //          })\r\n   //       }\r\n   //    // }\r\n   //  }, [paiementsData['clientId']])\r\n    useEffect(() => {\r\n      //  const clientId = props.match.params.id;\r\n       const fetchData = async () => {\r\n          try {\r\n             const res = await api.get(presencesEnd);\r\n             setPresences(res.data.results)\r\n             setPresencesCount(res.data.count)\r\n              console.log('ghirrrr =transClient', res.data);\r\n          } catch (error) {\r\n             console.log(error);\r\n          }\r\n       }\r\n       fetchData();\r\n    }, [presencesData['clientId'], endDate] );\r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black font-weight-bold'>Presences du client <span className='test-danger'>{clientId}</span> </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n       <div className=\"row d-flex\">\r\n         <div className=\"form-group col-md-6\">\r\n            <label className='text-dark font-weight-bold'>Date de début</label>\r\n            <input type=\"date\" name=\"start_date\" className=\"form-control\" value={startDate}  onChange={e => setStartDate(e.target.value)}/>\r\n         </div>\r\n         <div className=\"form-group col-md-6\">\r\n            <label className='text-dark font-weight-bold'>Date de Fin</label>\r\n            <input type=\"date\" name=\"end_date\" className=\"form-control\" value={endDate}  onChange={e => setEndDate(e.target.value)}/>\r\n         </div>\r\n       </div>\r\n          <th className=\"text-danger\">Total : {presencesCount} </th>\r\n      <div className=\"col-\">\r\n         <div className=\"card\">\r\n            {/* <div className=\"card-header border-0 d-xl-flex d-lg-block d-md-flex d-sm-flex d-block\">\r\n                  <h4 className=\"fs-20 text-black\">\r\n                     Fiche Créneau\r\n                  </h4>\r\n            </div> */}\r\n            <div className=\"table-responsive\">\r\n               <table className=\"table\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th scope=\"col\"><h5>Entrée</h5></th>\r\n                        <th scope=\"col\"><h5>Sortie</h5></th>\r\n                        <th scope=\"col\"><h5>Activité</h5></th>\r\n                        <th scope=\"col\"><h5>Date</h5></th>\r\n                        <th scope=\"col\"><h5>Type</h5></th>\r\n\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {presences.map( presence => (\r\n                     <tr key={presence.id}>\r\n                        <td className=\"font-w600 text-left\">\r\n                        {presence.hour_entree}\r\n                        </td>\r\n                        <td>\r\n                           {presence.hour_sortie}\r\n                        </td>\r\n                        <td>\r\n                           {presence.client_activity}\r\n                        </td>\r\n                        <td>\r\n                           {presence.date}\r\n                        </td>\r\n                        <td>\r\n                           {presence.abc_name}\r\n                        </td>\r\n                     </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n            \r\n     \r\n    \r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default PresencesClientModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\RenewAbonnementModal.jsx",["807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Button, Modal, Table } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\n \r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst capitalizeFirstLetter = (word) => {\r\n  if (word)\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n  return '';\r\n};\r\n\r\nconst RenewAbonnementModal = ({show, onShowShange, clientData}) => {\r\n\r\n  const api = useAxios();\r\n\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const [clientId, setClientId] = useState('')\r\n  const [abonId, setAbontId] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [typeName, setTypeName] = useState('')\r\n  const [endDate,setEndDate] = useState('')\r\n  const [presences,setPresences] = useState('')\r\n  const [reste,setReste] = useState('')\r\n  const [creneau,setCreneau] = useState('')\r\n  const [showCreneau, setShowCreneau] = useState(false)\r\n  const [selectedCreneau, setSeleCreneau] = useState([])\r\n  \r\n  \r\n  const [abc, setAbc] = useState({})\r\n  const creneauClientEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-client?cl=${clientId}`\r\n  let creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-abonnement?ab=${type}`\r\n\r\n  \r\n  const [samedi, setSamedi] = useState([]);\r\n  const [dimanche, setDimanche] = useState([]);\r\n  const [lundi, setLundi] = useState([]);\r\n  const [mardi, setMardi] = useState([]);\r\n  const [mercredi, setMercredi] = useState([]);\r\n  const [jeudi, setJeudi] = useState([]);\r\n  const [vendredi, setVendredi] = useState([]);\r\n  const [renouvler, setRenouvler] = useState(false)\r\n  // 31 or 30 days?\r\n  // if(month === 'January' | month === 'March' | month === 'May' | month === 'July' | month === 'August' | month === 'October' | month === 'December') {\r\n  //   dayNum = 31;\r\n  // } else if(month === 'April' | month === 'June' | month === 'September' | month === 'November') {\r\n  //   dayNum = 30;\r\n  // } else {\r\n  // If month is February, calculate whether it is a leap year or not\r\n  // var year = yearSelect.value;\r\n  // var isLeap = new Date(year, 1, 29).getMonth() == 1;\r\n  // isLeap ? dayNum = 29 : dayNum = 28;\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (show == true) {\r\n      setClientId(clientData['clientId'])\r\n      // setType(clientData['abonClientType'])\r\n      // setEndDate(clientData['abonClientEnd'])\r\n      // setPresences(clientData['abonClientpresences'])\r\n      // setReste(clientData['abonClientReste'])\r\n      // setTypeName(clientData['abonClientTypeName'])\r\n      // console.log('vdfbvfknb', abonId);\r\n      // setSeleCreneau(clientData['abonnementClientCreneaux'])\r\n      }\r\n    }, [show, renouvler]);\r\n    let result1=[]\r\n    let result2=[]\r\n    let result3=[]\r\n    let result4=[]\r\n    let result5=[]\r\n    let result6=[]\r\n    let result7=[]\r\n    useEffect(() => {\r\n      // console.log('selected salle', typeof selectedSalle );\r\n      if (type !== '' ) {\r\n        api.get(creneauPerAbonnementEND).then(res =>{\r\n          res.data.forEach((req) => {\r\n          if (req.day == \"SA\") {\r\n            result1.push(req);\r\n          }else if(req.day== \"DI\"){\r\n                  result2.push(req);\r\n                }else if (req.day== \"LU\"){\r\n                  result3.push(req);\r\n                }else if(req.day== \"MA\"){\r\n                  result4.push(req);\r\n                }else if(req.day== \"ME\"){\r\n                  result5.push(req);\r\n                }else if(req.day== \"JE\"){\r\n                  result6.push(req);\r\n                }else if(req.day== \"VE\"){\r\n                  result7.push(req);\r\n                }\r\n        })\r\n              // setSeleCreneau([])\r\n              setSamedi(result1)\r\n              setDimanche(result2)\r\n              setLundi(result3)\r\n              setMardi(result4)\r\n              setMercredi(result5)\r\n              setJeudi(result6)\r\n              setVendredi(result7)\r\n            })\r\n      }\r\n    }, [type]);\r\n\r\nconst changingStyle = (crenId) => {\r\n    if (selectedCreneau.indexOf(crenId) !== -1) {\r\n   return true\r\n  }\r\n}\r\n\r\nconst handleSubmit = async () => {\r\n  const abcData = {\r\n    presence_quantity :presences,\r\n    end_date : endDate,\r\n    creneaux: selectedCreneau,\r\n    reste : reste\r\n  }\r\n  \r\n  // refreshPage()\r\n  handleShow()\r\n}\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black font-weight-bold'>Detail abonnement</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <div className=\"row\">\r\n              <div className=\"card-body bg-white \">\r\n                <div className=\"media profile-bx\">\r\n                    <div className=\"media-body align-items-center\">\r\n                      <h2 className=\"text-black font-w600\">\r\n                        {capitalizeFirstLetter(abc.last_name)} {capitalizeFirstLetter(abc.first_name)}\r\n                      </h2>\r\n                      <h4 className=\"mb-2 text-black\">ID client : <span className='text-danger'>{clientId}</span></h4>\r\n                      <h6 className=\"text-black\"> Presences Restantes <span className=\"text-primary\">{abc.presence_quantity}</span>\r\n                      </h6>\r\n                      <h6 className='text-black'>Abonnement: <a className=\"item text-primary\">{typeName} </a> </h6>\r\n                      {/* <h6 className='text-primary'>Date d'éxpiration:&nbsp;&nbsp; <span className=\"badge badge-danger light\">{endDate}</span> </h6> */}\r\n                    <form >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group col-md-4\">\r\n                          <label className=\"text-black\">Date d'expiration</label>\r\n                          <input type=\"date\" name=\"end_date\"  value={endDate} className=\"form-control\" onChange={e => setEndDate(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                          <label className=\"text-black\">séances restantes</label>\r\n                          <input type=\"number\" value={presences} className=\"form-control\" onChange={e => setPresences(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                          <label className=\"text-black\">Reste</label>\r\n                          <input type=\"number\" value={reste} className=\"form-control\" onChange={e => setReste(e.target.value)}/>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* les creneaux */}\r\n                <div className='col-12'>\r\n            <Table responsive bordered className=\"verticle-middle\">\r\n              <tbody>\r\n              { dimanche.length > 0 &&\r\n                <tr>\r\n                  <th style={{verticalAlign: \"middle\", width: \"150px\", border: ' 1px solid #000000'}}>\r\n                        <h4 className='pl-2 text-dark font-weight-bold'>Dimanche</h4>\r\n                  </th>\r\n                  <td>\r\n                    <div>\r\n                    {dimanche.map(day=>   ( \r\n                      <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                        const creneauId = selectedCreneau.indexOf(day.id)\r\n                        if (creneauId !== -1) {\r\n                          const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                          setSeleCreneau(neawCren) \r\n                        } else{\r\n                          setSeleCreneau([...selectedCreneau, day.id]) \r\n                        }}}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h6 style={{color: \"#ffffff\"}}  > {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h6> \r\n                          <p style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</p> \r\n                        </div>\r\n                      </td> \r\n                    ))\r\n                  }\r\n                      </div>\r\n                  </td>\r\n                </tr>\r\n                  }\r\n              { lundi.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Lundi</h4>\r\n                </th>\r\n                <td style={{ padding: '3px'}}>\r\n\r\n                <div>\r\n                { lundi.map(day=>   ( \r\n                    <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = selectedCreneau.indexOf(day.id)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                        setSeleCreneau(neawCren) \r\n                      } else{\r\n                        setSeleCreneau([...selectedCreneau, day.id]) \r\n                      }}}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n\r\n                    \r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n                  }\r\n\r\n              { mardi.length > 0 && \r\n\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Mardi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { mardi.map(day=>   ( \r\n                      \r\n                      <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                        const creneauId = selectedCreneau.indexOf(day.id)\r\n                        if (creneauId !== -1) {\r\n                          const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                          setSeleCreneau(neawCren) \r\n                        } else{\r\n                          setSeleCreneau([...selectedCreneau, day.id]) \r\n                        }}}>\r\n                          <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                            <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                            <span> - </span> \r\n                            {day.hour_finish}</h5> \r\n                            <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                          </div>\r\n                        </td> \r\n                       ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n                }\r\n\r\n              { mercredi.length > 0 && \r\n\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Mercredi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                {mercredi.map(day=>   ( \r\n                    \r\n                    <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = selectedCreneau.indexOf(day.id)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                        setSeleCreneau(neawCren) \r\n                      } else{\r\n                        setSeleCreneau([...selectedCreneau, day.id]) \r\n                      }}}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h5> \r\n                          <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                        </div>\r\n                      </td> \r\n                     ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              }\r\n              { jeudi.length > 0 && \r\n\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Jeudi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { jeudi.map(day=>   ( \r\n                     \r\n                     <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = selectedCreneau.indexOf(day.id)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                        setSeleCreneau(neawCren) \r\n                      } else{\r\n                        setSeleCreneau([...selectedCreneau, day.id]) \r\n                      }}}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n               }\r\n               { vendredi.length > 0 && \r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Vendredi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { vendredi.map(day=>   ( \r\n                    <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = selectedCreneau.indexOf(day.id)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                        setSeleCreneau(neawCren) \r\n                      } else{\r\n                        setSeleCreneau([...selectedCreneau, day.id]) \r\n                      }}}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              }\r\n              { samedi.length > 0 && \r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Samedi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { samedi.map(day=>   ( \r\n                   <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                    const creneauId = selectedCreneau.indexOf(day.id)\r\n                    if (creneauId !== -1) {\r\n                      const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                      setSeleCreneau(neawCren) \r\n                    } else{\r\n                      setSeleCreneau([...selectedCreneau, day.id]) \r\n                    }}}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h5> \r\n                          <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                        </div>\r\n                      </td> \r\n                     ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              }\r\n              </tbody>\r\n              </Table>\r\n              </div>\r\n                <div className=\"col-12\">\r\n                <Button onClick={handleShow}   variant=\"danger light\" className='m-2' > Fermer </Button>\r\n                <Button onClick={handleSubmit} variant=\"primary\" className='m-2' > Valider </Button>\r\n                  <div onClick={async e => { \r\n                    await api.post(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-client/renew/${abonId}/` ).then( () => {\r\n                      setRenouvler(true)\r\n                      notifySuccess(\" l'abonement a été renouvelé avec succés\")\r\n                      handleShow()\r\n                    }).catch(err => {\r\n                      notifyError(\" erreur lors du renouvelement \")\r\n                    })\r\n                    \r\n                  }}\r\n                      role=\"button\" className=\"btn btn-secondary popover-tes cursor-abonnement\" >\r\n                    Renouveler l'abonnement\r\n                  </div>\r\n                \r\n                </div>\r\n              </div>\r\n\r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default RenewAbonnementModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PaiementEditModal.jsx",["828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport useAxios from \"../useAxios\";\r\n// import { ToastContainer, toast } from 'react-toastify'\r\n// import 'react-toastify/dist/ReactToastify.css'\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nconst PaiementEditModal = ({show, onShowShange, paiementData}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const api = useAxios();\r\n  \r\n  const clientId = paiementData['clientId']\r\n    const abonnements = paiementData['abcs']\r\n\r\n    const amountInfo = paiementData['paiementAmountInfo']\r\n    const aBC = paiementData['paiementABCInfo']\r\n    const date = paiementData['paiementDateInfo']\r\n\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [erreur, seterreur] = useState(false)\r\n    const [abcId, setAbcId] = useState([])\r\n    \r\n    // const [abc, setAbc] = useState([])\r\n    const [note, setNote] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [paiementIdReceived, setPaiementIdReceived] = useState(\"\");\r\n    const [paiementAmountReceived, setPaiementAmountReceived] = useState(\"\");\r\n    const [paiementABCReceived, setPaiementABCReceived] = useState(\"\");\r\n    const [paiementDateReceived, setPaiementDateReceived] = useState(\"\");\r\n   const [paiementABCNameReceived, setPaiementABCNameReceived] = useState(\"\");\r\n   const [selectedAbc, setSelectedAbc] = useState(\"\");\r\n    \r\n    console.log('Paimeent selectedAbc',selectedAbc)\r\n    console.log('Paimeent paiementDatpaiementABCInfo]',paiementData['paiementABCInfo'])\r\n    const paiementCreateEND =`${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/${paiementIdReceived}/` \r\n    const paiementDeleteEND = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/delete/${paiementIdReceived}/`\r\n\r\n    useEffect(() => {\r\n      if (show == true) {\r\n            setPaiementIdReceived(paiementData['paiementIdInfo'])\r\n            setAmount(paiementData['paiementAmountInfo'])\r\n            setPaiementABCReceived(paiementData['paiementABCInfo'])\r\n            setPaiementDateReceived(paiementData['paiementDateInfo'])\r\n            setNote(paiementData['paiementNotesInfo'])\r\n            setPaiementABCNameReceived(paiementData['paiementABCName'])\r\n            setSelectedAbc(abonnements[abonnements.findIndex(x => x.id == paiementData['paiementABCInfo'])])\r\n          }\r\n\r\n    }, [show, paiementData['paiementIdInfo']])\r\n    \r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n        const paiementDetails = {\r\n          // abonnement_client :Number(abcId),\r\n          note : note,\r\n          date : paiementDateReceived\r\n        }\r\n        console.log(\" =================> new Creneau \", paiementDetails);\r\n        try {\r\n         await api.patch(paiementCreateEND, paiementDetails).then(res => {\r\n           if (res.status === 200) {\r\n            notifySuccess('Paiement Modifier avec succés')\r\n             handleShow()\r\n           }\r\n         })\r\n        } catch (error) {\r\n          notifyError(\"Erreur lors de la modification du paiement\")\r\n        }\r\n        // refreshPage()\r\n        // setCreneaux([])\r\n        // handleShow()\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title> paiement de : {clientId}</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n\r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <TextField type=\"text\" value={paiementABCNameReceived} fullWidth  disabled/>\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <TextField type=\"number\" value={amount} fullWidth  disabled/>\r\n          </div>\r\n          <div className=\"form-group col-12 col-md-6\">\r\n              <TextField\r\n                type=\"date\"\r\n                onChange={e=> setPaiementDateReceived(e.currentTarget.value)}\r\n                defaultValue={date}\r\n                variant=\"outlined\"\r\n                label=\"Date\"\r\n                fullWidth\r\n              />\r\n          </div>\r\n          <div className=\"form-group col-12 col-md-6\">\r\n              <TextField\r\n                type=\"text\"\r\n                onChange={e=> setNote(e.currentTarget.value)}\r\n                value={note}\r\n                variant=\"outlined\"\r\n                label=\"Notes\"\r\n                fullWidth\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-between\">\r\n          <div className='col-9'>\r\n\r\n            <Button onClick={handleShow} variant=\"danger light\" > Fermer </Button>\r\n            <Button variant=\"primary\" type=\"submit\">Valider</Button>\r\n          \r\n            \r\n          </div>\r\n        <div className='col-3'>\r\n                {/* <Button variant=\"primary\" type=\"submit\">Supprimer</Button> */}\r\n                <Button type=\"button\" className=\"btn btn-danger\" onClick={ async () => {\r\n                await api.delete(paiementDeleteEND)\r\n                handleShow()\r\n                }}>\r\n                    Supprimer\r\n                </Button>\r\n            </div>\r\n        </div>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default PaiementEditModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ABCDetailModal.jsx",["850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Tab, Nav, Table } from \"react-bootstrap\";\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst capitalizeFirstLetter = (word) => {\r\n  if (word)\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n  return '';\r\n};\r\nconst ABCDetailModal = ({show, onShowShange, abonnementData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const today = new Date().toISOString().slice(0, 10)\r\n\r\n  const [clientId, setClientId] = useState('')\r\n  const [abonId, setAbontId] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [typeName, setTypeName] = useState('')\r\n  const [endDate,setEndDate] = useState('')\r\n  const [startRenewData,setStartRenewData] = useState(today)\r\n  const [presences,setPresences] = useState('')\r\n  const [reste,setReste] = useState('')\r\n  const [creneau,setCreneau] = useState('')\r\n  const [showCreneau, setShowCreneau] = useState(false)\r\n  const [selectedCreneau, setSeleCreneau] = useState([])\r\n  \r\n  \r\n  \r\n  const [abc, setAbc] = useState({})\r\n  const abcDetailEND =`${process.env.REACT_APP_API_URL}/rest-api/abonnement-client/${abonId}` \r\n  const abcRenewEND =`${process.env.REACT_APP_API_URL}/rest-api/abonnement-client/renouveler` \r\n  const abcEditEND =`${process.env.REACT_APP_API_URL}/rest-api/abonnement-client/${abonId}/` \r\n  const creneauClientEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-client?cl=${clientId}`\r\n  let creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-abonnement?ab=${type}`\r\nconst abonnementDeleteEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement-client/delete/${abonnementData['abonClientID']}/`\r\n\r\n  \r\n  const [samedi, setSamedi] = useState([]);\r\n  const [dimanche, setDimanche] = useState([]);\r\n  const [lundi, setLundi] = useState([]);\r\n  const [mardi, setMardi] = useState([]);\r\n  const [mercredi, setMercredi] = useState([]);\r\n  const [jeudi, setJeudi] = useState([]);\r\n  const [vendredi, setVendredi] = useState([]);\r\n  const [renouvler, setRenouvler] = useState(false)\r\n  // 31 or 30 days?\r\n  // if(month === 'January' | month === 'March' | month === 'May' | month === 'July' | month === 'August' | month === 'October' | month === 'December') {\r\n  //   dayNum = 31;\r\n  // } else if(month === 'April' | month === 'June' | month === 'September' | month === 'November') {\r\n  //   dayNum = 30;\r\n  // } else {\r\n  // If month is February, calculate whether it is a leap year or not\r\n  // var year = yearSelect.value;\r\n  // var isLeap = new Date(year, 1, 29).getMonth() == 1;\r\n  // isLeap ? dayNum = 29 : dayNum = 28;\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (show == true) {\r\n      setAbontId(abonnementData['abonClientID'])\r\n      setClientId(abonnementData['clientId'])\r\n      setType(abonnementData['abonClientType'])\r\n      setEndDate(abonnementData['abonClientEnd'])\r\n      setPresences(abonnementData['abonClientpresences'])\r\n      setReste(abonnementData['abonClientReste'])\r\n      setTypeName(abonnementData['abonClientTypeName'])\r\n      // console.log('vdfbvfknb', abonId);\r\n      setSeleCreneau(abonnementData['abonnementClientCreneaux'])\r\n        api.get(abcDetailEND).then(res => {\r\n          setAbc(res.data)\r\n          console.log('-------------------',abc)\r\n        })\r\n      }\r\n    }, [show, renouvler]);\r\n    let result1=[]\r\n    let result2=[]\r\n    let result3=[]\r\n    let result4=[]\r\n    let result5=[]\r\n    let result6=[]\r\n    let result7=[]\r\n    useEffect(() => {\r\n      // console.log('selected salle', typeof selectedSalle );\r\n      if (type !== '' ) {\r\n        api.get(creneauPerAbonnementEND).then(res =>{\r\n          res.data.forEach((req) => {\r\n          if (req.day == \"SA\") {\r\n            result1.push(req);\r\n          }else if(req.day== \"DI\"){\r\n                  result2.push(req);\r\n                }else if (req.day== \"LU\"){\r\n                  result3.push(req);\r\n                }else if(req.day== \"MA\"){\r\n                  result4.push(req);\r\n                }else if(req.day== \"ME\"){\r\n                  result5.push(req);\r\n                }else if(req.day== \"JE\"){\r\n                  result6.push(req);\r\n                }else if(req.day== \"VE\"){\r\n                  result7.push(req);\r\n                }\r\n        })\r\n              // setSeleCreneau([])\r\n              setSamedi(result1)\r\n              setDimanche(result2)\r\n              setLundi(result3)\r\n              setMardi(result4)\r\n              setMercredi(result5)\r\n              setJeudi(result6)\r\n              setVendredi(result7)\r\n            })\r\n      }\r\n    }, [type]);\r\n\r\nconst changingStyle = (crenId) => {\r\n    if (selectedCreneau.indexOf(crenId) !== -1) {\r\n   return true\r\n  }\r\n}\r\nconst handleRenew = () => {\r\n  const renewData = {\r\n    start_renew_date: startRenewData,\r\n    abc : Number(abonId)\r\n  }\r\n  api.post(abcRenewEND, renewData).then( () => {\r\n    setRenouvler(true)\r\n    notifySuccess(\" l'abonement a été renouvelé avec succés\")\r\n    handleShow()\r\n  }).catch(err => {\r\n    notifyError(\" erreur lors du renouvelement \")\r\n  })\r\n}\r\n\r\nconst handleSubmit = async () => {\r\n  const abcData = {\r\n    presence_quantity :presences,\r\n    end_date : endDate,\r\n    creneaux: selectedCreneau,\r\n    reste : reste\r\n  }\r\n  await api.patch(abcEditEND, abcData).then( e => {\r\n    notifySuccess('Abonnement mis A jour avec succés')\r\n    handleShow()\r\n  }).catch( err => {\r\n    notifyError(\"Erreur lors de la modification de l'abonnement\")\r\n  })\r\n  // refreshPage()\r\n  handleShow()\r\n}\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black font-weight-bold'>Detail abonnement</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <Tab.Container defaultActiveKey=\"monthly\">\r\n      <div className=\"row justify-content-center\">\r\n                <div className=\"card-body bg-white \">\r\n                  <div className=\"media profile-bx\">\r\n                      <div className=\"media-body align-items-center\">\r\n                        <h2 className=\"text-black font-w600\">\r\n                          {capitalizeFirstLetter(abc.last_name)} {capitalizeFirstLetter(abc.first_name)}\r\n                        </h2>\r\n                        <h4 className=\"mb-2 text-black\">ID client : <span className='text-danger'>{clientId}</span></h4>\r\n                        <h6 className=\"text-black\"> Presences Restantes <span className=\"text-primary\">{abc.presence_quantity}</span>\r\n                        </h6>\r\n                        {/* <h6 className='text-primary'>Date d'éxpiration:&nbsp;&nbsp; <span className=\"badge badge-danger light\">{endDate}</span> </h6> */}\r\n                        <div className=\"card-header border-0 d-xl-flex d-lg-block d-md-flex d-sm-flex d-block\">\r\n                            <div className=\"mr-2\">\r\n                              <h4 className=\"fs-20 text-black\">Abonnement: <a className=\"item text-primary\">{typeName} </a> </h4>\r\n                            </div>\r\n                            <div className=\"card-action card-tabs mt-3 mt-sm-0\">\r\n                              <Nav className=\"nav nav-tabs\" role=\"tablist\">\r\n                                  <Nav.Item>\r\n                                    <Nav.Link className=\"nav-link\" data-toggle=\"tab\" eventKey=\"monthly\" role=\"tab\" aria-selected=\"true\" > Detail </Nav.Link>\r\n                                  </Nav.Item>\r\n                                  <Nav.Item>\r\n                                    <Nav.Link className=\"nav-link\" data-toggle=\"tab\" eventKey=\"Weekly\" role=\"tab\" aria-selected=\"false\" > Renouvelé </Nav.Link>\r\n                                  </Nav.Item>\r\n                              </Nav>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* les creneaux */}\r\n               <div className=\"col-12 card-body p-0 tab-content card-table\">\r\n                  <Tab.Content>\r\n                    <Tab.Pane eventKey=\"monthly\">\r\n                      <div className='col-12'>\r\n                        <form>\r\n                          <div className=\"row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                              <label className=\"text-black\">Date d'expiration</label>\r\n                              <input type=\"date\" name=\"end_date\"  value={endDate} className=\"form-control\" onChange={e => setEndDate(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                              <label className=\"text-black\">séances restantes</label>\r\n                              <input type=\"number\" value={presences} className=\"form-control\" onChange={e => setPresences(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                              <label className=\"text-black\">Reste</label>\r\n                              <input type=\"number\" value={reste} className=\"form-control\" onChange={e => setReste(e.target.value)}/>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                      <div className='col-12'>\r\n                        <Table responsive bordered className=\"verticle-middle\">\r\n                        <tbody>\r\n                        { dimanche.length > 0 &&\r\n                          <tr>\r\n                            <th style={{verticalAlign: \"middle\", width: \"150px\", border: ' 1px solid #000000'}}>\r\n                                  <h4 className='pl-2 text-dark font-weight-bold'>Dimanche</h4>\r\n                            </th>\r\n                            <td>\r\n                              <div>\r\n                              {dimanche.map(day=>   ( \r\n                                <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                                  const creneauId = selectedCreneau.indexOf(day.id)\r\n                                  if (creneauId !== -1) {\r\n                                    const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                                    setSeleCreneau(neawCren) \r\n                                  } else{\r\n                                    setSeleCreneau([...selectedCreneau, day.id]) \r\n                                  }}}>\r\n                                  <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                                    <h6 style={{color: \"#ffffff\"}}  > {day.hour_start}\r\n                                    <span> - </span> \r\n                                    {day.hour_finish}</h6> \r\n                                    <p style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</p> \r\n                                  </div>\r\n                                </td> \r\n                              ))\r\n                            }\r\n                                </div>\r\n                            </td>\r\n                          </tr>\r\n                            }\r\n                        { lundi.length > 0 &&\r\n\r\n                        <tr>\r\n                          <th style={{verticalAlign: \"middle\"}}>\r\n                                <h4 className='pl-2 text-dark font-weight-bold'>Lundi</h4>\r\n                          </th>\r\n                          <td style={{ padding: '3px'}}>\r\n\r\n                          <div>\r\n                          { lundi.map(day=>   ( \r\n                              <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                                const creneauId = selectedCreneau.indexOf(day.id)\r\n                                if (creneauId !== -1) {\r\n                                  const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                                  setSeleCreneau(neawCren) \r\n                                } else{\r\n                                  setSeleCreneau([...selectedCreneau, day.id]) \r\n                                }}}>\r\n                                  <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n\r\n                              \r\n                                    <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                                    <span> - </span> \r\n                                    {day.hour_finish}</h5> \r\n                                    <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                                  </div>\r\n                                </td> \r\n                                ))}\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                            }\r\n\r\n                        { mardi.length > 0 && \r\n\r\n                        <tr>\r\n                          <th style={{verticalAlign: \"middle\"}}>\r\n                                <h4 className='pl-2 text-dark font-weight-bold'>Mardi</h4>\r\n                          </th>\r\n                          <td>\r\n                          <div>\r\n                          { mardi.map(day=>   ( \r\n                                \r\n                                <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                                  const creneauId = selectedCreneau.indexOf(day.id)\r\n                                  if (creneauId !== -1) {\r\n                                    const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                                    setSeleCreneau(neawCren) \r\n                                  } else{\r\n                                    setSeleCreneau([...selectedCreneau, day.id]) \r\n                                  }}}>\r\n                                    <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                                      <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                                      <span> - </span> \r\n                                      {day.hour_finish}</h5> \r\n                                      <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                                    </div>\r\n                                  </td> \r\n                                ))}\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                          }\r\n\r\n                        { mercredi.length > 0 && \r\n\r\n                        <tr>\r\n                          <th style={{verticalAlign: \"middle\"}}>\r\n                                <h4 className='pl-2 text-dark font-weight-bold'>Mercredi</h4>\r\n                          </th>\r\n                          <td>\r\n                          <div>\r\n                          {mercredi.map(day=>   ( \r\n                              \r\n                              <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                                const creneauId = selectedCreneau.indexOf(day.id)\r\n                                if (creneauId !== -1) {\r\n                                  const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                                  setSeleCreneau(neawCren) \r\n                                } else{\r\n                                  setSeleCreneau([...selectedCreneau, day.id]) \r\n                                }}}>\r\n                                  <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                                    <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                                    <span> - </span> \r\n                                    {day.hour_finish}</h5> \r\n                                    <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                                  </div>\r\n                                </td> \r\n                              ))}\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                        }\r\n                        { jeudi.length > 0 && \r\n\r\n                        <tr>\r\n                          <th style={{verticalAlign: \"middle\"}}>\r\n                                <h4 className='pl-2 text-dark font-weight-bold'>Jeudi</h4>\r\n                          </th>\r\n                          <td>\r\n                          <div>\r\n                          { jeudi.map(day=>   ( \r\n                              \r\n                              <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                                const creneauId = selectedCreneau.indexOf(day.id)\r\n                                if (creneauId !== -1) {\r\n                                  const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                                  setSeleCreneau(neawCren) \r\n                                } else{\r\n                                  setSeleCreneau([...selectedCreneau, day.id]) \r\n                                }}}>\r\n                                  <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                                    <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                                    <span> - </span> \r\n                                    {day.hour_finish}</h5> \r\n                                    <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                                  </div>\r\n                                </td> \r\n                                ))}\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                        }\r\n                        { vendredi.length > 0 && \r\n                        <tr>\r\n                          <th style={{verticalAlign: \"middle\"}}>\r\n                                <h4 className='pl-2 text-dark font-weight-bold'>Vendredi</h4>\r\n                          </th>\r\n                          <td>\r\n                          <div>\r\n                          { vendredi.map(day=>   ( \r\n                              <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                                const creneauId = selectedCreneau.indexOf(day.id)\r\n                                if (creneauId !== -1) {\r\n                                  const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                                  setSeleCreneau(neawCren) \r\n                                } else{\r\n                                  setSeleCreneau([...selectedCreneau, day.id]) \r\n                                }}}>\r\n                                  <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                                    <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                                    <span> - </span> \r\n                                    {day.hour_finish}</h5> \r\n                                    <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                                  </div>\r\n                                </td> \r\n                                ))}\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                        }\r\n                        { samedi.length > 0 && \r\n                        <tr>\r\n                          <th style={{verticalAlign: \"middle\"}}>\r\n                                <h4 className='pl-2 text-dark font-weight-bold'>Samedi</h4>\r\n                          </th>\r\n                          <td>\r\n                          <div>\r\n                          { samedi.map(day=>   ( \r\n                            <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                              const creneauId = selectedCreneau.indexOf(day.id)\r\n                              if (creneauId !== -1) {\r\n                                const neawCren = selectedCreneau.filter(cren => cren !== day.id)\r\n                                setSeleCreneau(neawCren) \r\n                              } else{\r\n                                setSeleCreneau([...selectedCreneau, day.id]) \r\n                              }}}>\r\n                                  <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                                    <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                                    <span> - </span> \r\n                                    {day.hour_finish}</h5> \r\n                                    <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity_name}</h6> \r\n                                  </div>\r\n                                </td> \r\n                              ))}\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                        }\r\n                        </tbody>\r\n                        </Table>\r\n                      </div>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"Weekly\">\r\n                    <div className='col-12'>\r\n                        <form className=\"d-block\">\r\n                          <div className=\"row d-flex justify-content-arround\">\r\n                            <div className=\"form-group col-md-4\">\r\n                              <label className=\"text-black\">Renouvelé à partir du</label>\r\n                              <input type=\"date\"  value={startRenewData} className=\"form-control\" onChange={e => setStartRenewData(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                              <div className=\"btn btn-secondary popover-tes cursor-abonnement mt-4\" onClick={handleRenew} role=\"button\">Renouveler l'abonnement </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </Tab.Pane>\r\n                  </Tab.Content>\r\n                </div>\r\n                  <div className=\"col-12\">\r\n                  <Button onClick={handleShow} variant=\"danger light\" className='m-2' > Fermer </Button>\r\n                  <Button onClick={handleSubmit} variant=\"primary\" className='m-2' > Valider </Button>\r\n                  <Button \r\n                    onClick={ () => {\r\n                       api.delete(abonnementDeleteEND).then( res =>{\r\n                        notifySuccess(res.message)\r\n                        handleShow()\r\n                      }).catch(err =>{\r\n                        notifyError(\"erreur lors de la supression de l'abonnement\")\r\n                      })\r\n                      }}\r\n                    variant=\"danger\" \r\n                    className='m-2' > Supprimer </Button>\r\n                  </div>\r\n      </div>\r\n    </Tab.Container>\r\n\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default ABCDetailModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\users\\UserModal.jsx",["869","870","871","872","873","874","875","876","877","878"],"import React, { Fragment , useCallback, useEffect, useState} from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Dropdown, Button, Modal } from \"react-bootstrap\";\r\nimport ShortCuts from \"../ShortCuts\";\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n// import DetteCreateModal from './DetteCreateModal';\r\n/// images \r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { notifyError, notifySuccess } from \"../Alert\";\r\n\r\n\r\nconst UserModal = ({show, onShowShange, userData}) => {\r\n\r\n  // const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  // const api = useAxios();\r\n  // const [selectedUser, setSelectedUser] = useState();\r\n  // const [groups, setGroups] = useState();\r\n\r\n  //   const initialFormData = Object.freeze({\r\n  //     email: userData[\"user\"],\r\n  //     first_name: userData[\"user\"],\r\n  //     last_name: userData[\"user\"],\r\n  //     password: userData[\"user\"],\r\n  //     re_password: userData[\"user\"],\r\n  //     });\r\n\r\n  //   const [formData, setFormData] = useState(initialFormData);\r\n  //   const [userGroup, setUserGroup] = useState(userData['userGroup']);\r\n  //   const [group, setGroup] = useState('');\r\n\r\n  //   useEffect( () =>  {\r\n  //     api.get(groupsEnd).then( res => {\r\n  //        console.log('result ', res);\r\n  //        setUserGroup(res.data)\r\n  //     }).catch( err => {\r\n  //        console.log('IRRROR', err);\r\n  //     })\r\n  //  }, [userData['userGroup']]);\r\n  //  const groupIndex = () => {\r\n  //   const groupList = userGroup\r\n  //  }\r\n    // const { first_name, last_name, email, password, re_password} = formData;\r\n    \r\n    //   const handleChange = (e) => {\r\n    //       setFormData({\r\n    //           ...formData,\r\n    //           [e.target.name]: e.target.value.trim(),\r\n    //       });\r\n    //   };\r\n\r\n    //   const handleSubmit = (e) => {\r\n    //       e.preventDefault();\r\n    //       // console.log(\"FORM DATA =>\", formData);\r\n    //       api.post(`${process.env.REACT_APP_API_URL}/rest-api/auth/register`, {\r\n    //         email: email,\r\n    //         first_name: first_name,\r\n    //         last_name: last_name,\r\n    //         password: password,\r\n    //         re_password: re_password,\r\n    //         group: userGroup,\r\n    //       }).then((res) => {\r\n    //           // window.location = '/login';\r\n    //           console.log(res);\r\n    //           console.log(res.data);\r\n    //       });\r\n    //   };\r\n\r\n  const api = useAxios();\r\n\r\n  // const creneaux = useGetAPI(creneauxEnd)\r\n  const history = useHistory();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n\r\n  const [userGroup, setUserGroup] = useState(userData['userGroup']);\r\n  const [group, setGroup] = useState('');\r\n\r\n  //   useEffect( () =>  {\r\n  //     api.get(groupsEnd).then( res => {\r\n  //        console.log('result ', res);\r\n  //        setUserGroup(res.data)\r\n  //     }).catch( err => {\r\n  //        console.log('IRRROR', err);\r\n  //     })\r\n  //  }, [userData['userGroup']]);\r\n   \r\n  //  const groupIndex = () => {\r\n  //   const groupList = userGroup\r\n  //  }\r\n\r\n  const [last_name, setLastName] = useState(\"\");\r\n  const [first_name, setFirstName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [re_password, setRePassword] = useState(\"\");\r\n\r\n  //FK \r\n\r\n  // const HandleSubmit = async e => {\r\n  //   let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/auth/register`\r\n  //   e.preventDefault();\r\n  //   const newUser = {\r\n  //     last_name: last_name,\r\n  //     first_name: first_name,\r\n  //     email: email,\r\n  //     password: password,\r\n  //     re_password: re_password,\r\n  //     group: userGroup,\r\n  //   }\r\n  //   if (email !== '') {\r\n  //     newUser.email = email\r\n  //   }\r\n\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"FORM DATA =>\", formData);\r\n    api.post(`${process.env.REACT_APP_API_URL}/rest-api/auth/register`, {\r\n      email: email,\r\n      first_name: first_name,\r\n      last_name:  last_name,\r\n      password:  password,\r\n      re_password:  re_password,\r\n      group: userGroup,\r\n    }).then((res) => {\r\n        // window.location = '/login';\r\n        console.log(res);\r\n        console.log(res.data);\r\n        notifySuccess(\" Le Client a été ajouter avec succés\");\r\n        onShowShange(false)\r\n    }).catch(err => {\r\n      notifyError(\"Erreur lors de la creation de l'abonnement\")\r\n    });\r\n};\r\n\r\n\r\n    // api.post(endpoint, newUser).then(res => {\r\n    //   notifySuccess('User creer avec succés')\r\n    //   history.push(\"/users\")\r\n    // }).catch(err => {\r\n    //   notifyError(\"Erreur lors de la creation du User\")\r\n    // })\r\n\r\n  // }\r\n   return (\r\n    <Modal  className=\"fade bd-example-modal-md\" size=\"md\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer Admin</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n        <h4 className=\"text-center mb-4\">Creer un nouveau compte</h4>\r\n        <form onSubmit={(e) => HandleSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n              <strong>Email</strong>\r\n            </label>\r\n            <input type=\"email\" className=\"form-control\" placeholder=\"hello@example.com\" name=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n              <strong>Nom</strong>\r\n            </label>\r\n            <input type=\"nom\" className=\"form-control\" placeholder=\"votre nom...\" name=\"first_name\" onChange={(e) => setFirstName(e.target.value)} value={first_name} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n              <strong>Prénom</strong>\r\n            </label>\r\n            <input type=\"nom\" className=\"form-control\" placeholder=\"votre Prénom...\" name=\"last_name\" onChange={(e) => setLastName(e.target.value)} value={last_name} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Role(s)</label>\r\n            <Autocomplete\r\n              style={{backgroundColor:'#ffffff'}}\r\n              onChange={(event, value) => {\r\n                setUserGroup(value.id);\r\n              }}\r\n              defaultValue={userData[userGroup]}\r\n              options={userData['groups']}\r\n              getOptionLabel={(option) => (option['name'])}\r\n              renderInput={(params) => (<TextField {...params} className=\"form-control\" name=\"group\" label=\"Role\" variant=\"outlined\" fullWidth />)} />\r\n        </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n              <strong>Password</strong>\r\n            </label>\r\n            <input type=\"password\" className=\"form-control\" name=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mb-1\">\r\n              <strong>Password</strong>\r\n            </label>\r\n            <input type=\"password\" className=\"form-control\" name=\"re_password\" onChange={(e) => setRePassword(e.target.value)} value={re_password} />\r\n          </div>\r\n          <div className=\"text-center mt-4\">\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\" > Confirmer </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"new-account mt-3\">\r\n          <p>\r\n            Vous avez déja un compte ?{\" \"}\r\n            <Link className=\"text-primary\" to=\"/login\">Se connecter</Link>\r\n          </p>\r\n        </div>\r\n    </Modal.Body>\r\n    </Modal>\r\n   );\r\n};\r\n\r\nexport default UserModal;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\AutreCreateModal.jsx",["879","880","881","882","883","884","885","886","887","888","889","890"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\n\r\nconst AutreCreateModal = ({show, onShowShange, transactionData}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const api = useAxios();\r\n\r\n    let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/transactions/autre/create`\r\n\r\n   const [people, setPeople] = useState([])\r\n  //  const [client, setClient] = useState(\"\")\r\n   const [nom, setNom] = useState(\"\")\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n   const [note, setNote] = useState(\"\")\r\n\r\n  const handleSubmit = async e => {\r\n      e.preventDefault();\r\n      const newTransaction = {\r\n        amount: amount,\r\n        name :nom,\r\n        notes : note\r\n      }\r\n     await api.post(endpoint, newTransaction)\r\n      // refreshPage()\r\n      handleShow()\r\n    }\r\n  console.log('creneaux detail');\r\n\r\nreturn ( \r\n\r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title>Autre Transaction</Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      \r\n    <form onSubmit={handleSubmit}>\r\n                                 <div className=\"form-row\">\r\n                                    \r\n                                    <div className=\"form-group col-md-6\">\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                      //   defaultValue={}\r\n                                        label=\"Montant\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={e=> setAmount(e.currentTarget.value)}\r\n                                        // onChange={(event, value) => setNewStartHour(value)}\r\n                                        fullWidth\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                      <TextField\r\n                                        type=\"text\"\r\n                                        onChange={e=> setNom(e.currentTarget.value)}\r\n\r\n                                      //   defaultValue={endHour}\r\n                                        // value={creneauDetail.hour_finish}\r\n                                        // className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Libellé\"\r\n\r\n                                        fullWidth\r\n                                        // defaultValue={coachs[coach]}\r\n                                      //   onChange={e => setNewEndHour(e.currentTarget.value)}\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                      <TextField\r\n                                        type=\"text\"\r\n                                        onChange={e=> setNote(e.currentTarget.value)}\r\n\r\n                                      //   defaultValue={endHour}\r\n                                        // value={creneauDetail.hour_finish}\r\n                                        // className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Note\"\r\n\r\n                                        fullWidth\r\n                                        // defaultValue={coachs[coach]}\r\n                                      //   onChange={e => setNewEndHour(e.currentTarget.value)}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                 <Button\r\n                                      onClick={handleShow}\r\n                                      variant=\"danger light\"\r\n                                      className='m-2'\r\n                                      >\r\n                                      Annulé\r\n                                  </Button>\r\n                                  <Button variant=\"primary\" type=\"submit\">Confirmer</Button>\r\n                                  </form>\r\n     </Modal.Body>\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default AutreCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\RemunerationCoachModal.jsx",["891","892","893","894","895","896","897","898","899","900"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport useAxios from \"../useAxios\";\r\n \r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst RemunerationCoachModal = ({show, onShowShange, transactionData}) => {\r\n  const api = useAxios();\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n\r\n\r\n    let paiementCreateEnd = `${process.env.REACT_APP_API_URL}/rest-api/transactions/remunerationProf/create`\r\n    // let abonnementTypeEnd = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    let coachsEnd = `${process.env.REACT_APP_API_URL}/rest-api/coachs/`\r\n\r\n   const [coach, setCoach] = useState(\"\")\r\n   const [note, setNote] = useState(\"\")\r\n   const [amount, setAmount] = useState(\"\")\r\n  const [coachs, setCoachs] = useState([])\r\n\r\n   useEffect(() => {\r\n    api.get(coachsEnd).then((res) => {\r\n      setCoachs(res.data)\r\n    })\r\n  }, []);\r\n\r\n  //  const abonnements = useGetAPI(abonnementTypeEnd)\r\n   //  useEffect(() => {\r\n         // setPeople(clients)\r\n      //   console.log('THE NEW CLIENT ONEEE ', res.data);\r\n\r\n      //   setCreneauDetail(res.data)\r\n      //   console.log(res.data);\r\n      //   setNewActivity(activities[creneauActivite].id)\r\n      //   setNewCoach(coachs[creneauCoach].id)\r\n      //   setNewStartHour(startHour)\r\n      //   setNewEndHour(endHour)\r\n      //   setNewDay(days[day].day)\r\n      //   setNewPlanning(plannings[creneauPlanning].id)\r\n       \r\n   //  }, [])\r\n\r\n    // }, [transactionData['creneauId']]);\r\n    const handleSubmit =async e => {\r\n      e.preventDefault();\r\n      const newTransaction = {\r\n         coach: Number(coach),\r\n         amount:amount,\r\n         notes : note\r\n      }\r\n      await api.post(paiementCreateEnd, newTransaction).then( res => {\r\n        notifySuccess('Transaction creer avec succés')\r\n              handleShow()\r\n        }).catch(err => {\r\n          notifyError(\"Erreur lors de la creation de la transaction\")\r\n        })\r\n  }\r\n\r\nreturn ( \r\n\r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title>Remunération Coach</Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      \r\n    <form onSubmit={handleSubmit}>\r\n                                 <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                      <Autocomplete\r\n                                        // id={(option) =>  option['id']}\r\n                                        onChange={(event, value) => setCoach(value.id)}\r\n                                        // onChange={handleSubmit}\r\n                                        options={coachs}\r\n                                       //  value={activities[creneauActivite]}\r\n                                        getOptionSelected={(option) =>  option['id']}\r\n                                        getOptionLabel={(option) =>  option['last_name']}\r\n                                        renderInput={(params) => <TextField {...params}  label=\"Coach\" variant=\"outlined\" fullWidth />}\r\n                                      />\r\n                                    </div>\r\n                                  \r\n                                    <div className=\"form-group col-md-6\">\r\n                                    <TextField\r\n                                      type=\"number\"\r\n                                    //   defaultValue={}\r\n                                      label=\"Montant\"\r\n                                      variant=\"outlined\"\r\n                                      onChange={e=> setAmount(e.currentTarget.value)}\r\n                                      // onChange={(event, value) => setNewStartHour(value)}\r\n                                      fullWidth\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                    <TextField\r\n                                      type=\"text\"\r\n                                      onChange={e=> setNote(e.currentTarget.value)}\r\n\r\n                                    //   defaultValue={endHour}\r\n                                      // value={creneauDetail.hour_finish}\r\n                                      // className={classes.textField}\r\n                                      variant=\"outlined\"\r\n                                      label=\"Note\"\r\n\r\n                                      fullWidth\r\n                                      // defaultValue={coachs[coach]}\r\n                                    //   onChange={e => setNewEndHour(e.currentTarget.value)}\r\n                                    />\r\n                                    </div>\r\n                                  </div>\r\n                                 <Button\r\n                                      onClick={handleShow}\r\n                                      variant=\"danger light\"\r\n                                      className='m-2'\r\n                                      >\r\n                                      Annulé\r\n                                  </Button>\r\n                                  <Button variant=\"primary\" type=\"submit\">Confirmer</Button>\r\n                                  </form>\r\n     </Modal.Body>\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default RemunerationCoachModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\RemunerationPersonnelModal.jsx",["901","902","903","904","905","906","907","908","909","910"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAxios from \"../useAxios\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n \r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst RemunerationPersonnelModal = ({show, onShowShange, transactionData}) => {\r\n  const api = useAxios();\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n\r\n   \r\n  let personnelEnd = `${process.env.REACT_APP_API_URL}/rest-api/personnel/`\r\n  // let abonnementEnd = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n  \r\n  // const personnels = useGetAPI(personnelEnd)\r\n  const [personnels, setPersonnels] = useState([])\r\n\r\n  useEffect(() => {\r\n    api.get(personnelEnd).then((res) => {\r\n      setPersonnels(res.data)\r\n    })\r\n  }, []);\r\n\r\n  // const history = useHistory();\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [nom, setNom] = useState(\"\");\r\n\r\n\r\n  //FK \r\n\r\n  const HandleSubmit = async e => {\r\n    // console.log('les maladiiiies', maladies);\r\n    let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/transactions/remuneration/create`\r\n    e.preventDefault();\r\n    const newClient = {\r\n      amount : amount ,\r\n      notes : note ,\r\n      nom : nom\r\n      }\r\n      await api.post(endpoint, newClient).then( res => {\r\n        notifySuccess('Transaction creer avec succés')\r\n              handleShow()\r\n        }).catch(err => {\r\n          notifyError(\"Erreur lors de la creation de la transaction\")\r\n        })\r\n  }\r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title>Rémuneration Personnel </Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      \r\n    <form onSubmit={HandleSubmit}>\r\n      <div className=\"form-row\">\r\n        {/* <div className=\"form-group col-md-6\">\r\n          <Autocomplete\r\n            // id={(option) =>  option['id']}\r\n            onChange={(event, value) => setAbonnement(value.id)}\r\n            // onChange={handleSubmit}\r\n            options={abonnements}\r\n            //  value={activities[creneauActivite]}\r\n            getOptionSelected={(option) =>  option['id']}\r\n            getOptionLabel={(option) =>  option['name']}\r\n            renderInput={(params) => <TextField {...params}  label=\"Type de Transaction\" variant=\"outlined\" fullWidth />}\r\n          />\r\n        </div> */}\r\n        <div className=\"form-group col-md-6\">\r\n          <Autocomplete\r\n            // id={(option) =>  option['id']}\r\n            onChange={(event, value) => setNom(value.id)}\r\n            // onChange={handleSubmit}\r\n            options={personnels}\r\n            //  value={activities[creneauActivite]}\r\n            getOptionSelected={(option) =>  option['id']}\r\n            getOptionLabel={(option) =>  ( option['last_name'] )}\r\n            renderInput={(params) => <TextField {...params}  label=\"Personnel\" variant=\"outlined\" fullWidth />}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n        <TextField\r\n          type=\"number\"\r\n        //   defaultValue={}\r\n          label=\"Montant\"\r\n          variant=\"outlined\"\r\n          onChange={e=> setAmount(e.currentTarget.value)}\r\n          // onChange={(event, value) => setNewStartHour(value)}\r\n          fullWidth\r\n        />\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n        <TextField\r\n          type=\"text\"\r\n          onChange={e=> setNote(e.currentTarget.value)}\r\n\r\n        //   defaultValue={endHour}\r\n          // value={creneauDetail.hour_finish}\r\n          // className={classes.textField}\r\n          variant=\"outlined\"\r\n          label=\"Note\"\r\n\r\n          fullWidth\r\n          // defaultValue={coachs[coach]}\r\n        //   onChange={e => setNewEndHour(e.currentTarget.value)}\r\n        />\r\n        </div>\r\n      </div>\r\n      <Button\r\n          onClick={handleShow}\r\n          variant=\"danger light\"\r\n          className='m-2'\r\n          >\r\n          Annulé\r\n      </Button>\r\n      <Button variant=\"primary\" type=\"submit\">Confirmer</Button>\r\n      </form>\r\n     </Modal.Body>\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default RemunerationPersonnelModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\transactions\\PaiementCreateModal.jsx",["911","912","913","914","915","916","917","918","919","920","921"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport useAxios from \"../useAxios\";\r\n\r\nconst PaiementCreateModal = ({show, onShowShange}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const api = useAxios();\r\n\r\n    // const {register, handleSubmit, errors } = useForm();\r\n\r\n    let paiementCreateEnd = `${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/create`\r\n    // let abonnementTypeEnd = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    let clientsEnd = `${process.env.REACT_APP_API_URL}/rest-api/clients-name-drop/`\r\n\r\n   const [abc, setAbc] = useState([])\r\n   const [abcId, setAbcId] = useState([])\r\n   const [client, setClient] = useState(\"\")\r\n   const [clients, setClients] = useState(\"\")\r\n   const [dettes, showDettes] = useState(false)\r\n   const [erreur, seterreur] = useState(false)\r\n   const [amount, setAmount] = useState(\"\");\r\n   const [clientId, setClientId] = useState(\"\");\r\n   \r\n  //  const [abonnement, setAbonnement] = useState(\"\")\r\n   const [note, setNote] = useState(\"\")\r\n  //  const clients = useGetAPI(clientsEnd)\r\n\r\n    useEffect(() => {\r\n       const fetchData = async () => {\r\n          try {\r\n             const res = await api.get(clientsEnd);\r\n             setClients(res.data)\r\n            //  console.log('les clizents ???', res.data.results);\r\n          } catch (error) {\r\n             console.log(error);\r\n          }\r\n       }\r\n       fetchData();\r\n    }, [] );\r\n    useEffect(() => {\r\n      if (show == true) {\r\n        \r\n        const fetchData = async () => {\r\n           try {\r\n              const res = await api.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${clientId}`);\r\n              setAbc(res.data)\r\n              console.log('ceci est le resultat de labonnement client ', res.data);\r\n           } catch (error) {\r\n              console.log(error);\r\n           }\r\n        }\r\n        fetchData();\r\n      }\r\n    }, [clientId] );\r\n    const handleSubmit =async e => {\r\n      e.preventDefault();\r\n      const newTransaction = {\r\n        amount : amount ,\r\n        abonnement_client: Number(abcId),\r\n        // type : Number(abonnement),\r\n        note : note\r\n      }\r\n      await api.post(paiementCreateEnd, newTransaction).then( res => {\r\n        notifySuccess('Paiement creer avec succés')\r\n              handleShow()\r\n        }).catch(err => {\r\n          notifyError(\"Erreur lors de la creation de la Paiement\")\r\n        })\r\n      }\r\n\r\nreturn ( \r\n\r\n  <Modal className=\"fade bd-example-modal-lg\" size=\"lg\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title>Paiement</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span></Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              onChange={((event, value) =>  {\r\n                try {\r\n                  setClientId(value.id)\r\n                  seterreur(false)\r\n                  showDettes(true)\r\n                } catch (error) {\r\n                  setClientId('')\r\n                  seterreur(true)\r\n                }\r\n              })}\r\n              options={clients}\r\n              getOptionSelected={(option) =>  option['id']}\r\n              getOptionLabel={(option) =>  (  option['id'] +' - '+ option['last_name'])}\r\n              renderInput={(params) => \r\n                <TextField {...params}  label=\"Clients\" variant=\"outlined\" fullWidth required />}\r\n            />\r\n            {erreur && <p style={{color:'red'}}>veuillez choisir un client pour le paiement</p>}\r\n              \r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              onChange={((event, value) =>  {\r\n                try {\r\n                  setAbcId(value.id)\r\n                  seterreur(false)\r\n                  showDettes(true)\r\n                } catch (error) {\r\n                  setAbcId('')\r\n                  seterreur(true)\r\n                }\r\n              })}\r\n              options={abc}\r\n              getOptionSelected={(option) =>  option['id']}\r\n              getOptionLabel={(option) =>  option['type_abonnement_name']}\r\n              renderInput={(params) => \r\n                <TextField {...params}  label=\"Abonnements\" variant=\"outlined\" fullWidth required />}\r\n            />\r\n            {erreur && <p style={{color:'red'}}>veuillez choisir un abonnement du client</p>}\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Montant\"\r\n            variant=\"outlined\"\r\n            onChange={e=> setAmount(e.currentTarget.value)}\r\n            fullWidth\r\n          />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <TextField\r\n            type=\"text\"\r\n            onChange={e=> setNote(e.currentTarget.value)}\r\n            variant=\"outlined\"\r\n            label=\"Note\"\r\n            fullWidth\r\n          />\r\n          </div>\r\n        </div>\r\n        <Button onClick={handleShow} variant=\"danger light\" className='m-2' > Annulé </Button>\r\n        <Button variant=\"primary\" type=\"submit\">Confirmer</Button>\r\n        </form>\r\n    </Modal.Body>\r\n  </Modal>\r\n)\r\n}\r\nexport default PaiementCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\presence\\PresenceCreateModal.jsx",["922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport { Dropdown, Tab, Navn, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nconst PresenceCreateModal = ({show, onShowShange, presenceData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n\r\n    const [samedi, setSamedi] = useState([]);\r\n    const [dimanche, setDimanche] = useState([]);\r\n    const [lundi, setLundi] = useState([]);\r\n    const [mardi, setMardi] = useState([]);\r\n    const [mercredi, setMercredi] = useState([]);\r\n    const [jeudi, setJeudi] = useState([]);\r\n    const [vendredi, setVendredi] = useState([]);\r\n    \r\n    // const presenceId = presenceData['presenceId']\r\n    const [client, setClient] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [hourIn, setHourIn] = useState('')\r\n    const [hourOut,setHourOut] = useState('')\r\n    const [creneau,setCreneau] = useState('')\r\n    const [note,setNote] = useState('')\r\n    const [showCreneau, setShowCreneau] = useState(false)\r\n    const [selectedAbonnement, setSelectedAbonnement] = useState('')\r\n    \r\n    // const [selectedCreneau, setSelectedCreneau] = useState(\"\")\r\n    // const [creneauActi, setCreneauActi] = useState(\"\")\r\n    // const [creneauCoach, setCreneauCoach] = useState(\"\")\r\n    // const [creneauPlanning, setCreneauPlanning] = useState(\"\")\r\n    // const [creneauDay, setCreneauDay] = useState(\"\")\r\n    // const [startHour, setStartHour] = useState(\"\")\r\n    // const [endHour, setEndHour] = useState(\"\")\r\n    \r\n    \r\n    const formatDate = (date) => {\r\n      return new Date(date).toISOString().slice(0, 10)\r\n   }\r\n    \r\n    \r\n    const [abonnementsClient, setAbonnementsClient] = useState([]);\r\n    // const [selectAbonnement, setSelectAbonnement] = useState(\"\")\r\n    const [selectedCreneau, setSeleCreneau] = useState(\"\")\r\n    \r\n  \r\n  const [clients, setClients] = useState([])\r\n  const [creneaux, setCreneaux] = useState([]);\r\n  const [plannings, setPlannings] = useState([]);\r\n  const [salles, setSalles] = useState([])\r\n  const [salle, setSalle] = useState('')\r\n  const [selectedSalle, setSelectedSalle] = useState(0)\r\n  const [selectedPlanning, setSelectedPlanning] = useState('')\r\n  const [presenceDate, setPresenceDate] = useState(formatDate(new Date('2000-01-01')))\r\n\r\n\r\n  let clientsEND = `${process.env.REACT_APP_API_URL}/rest-api/clients-presence/`\r\n  let presenceCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/presence/presence-create`\r\n  let creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-salle-planning?sa=${selectedSalle}&pl=${selectedPlanning}`\r\n  let sallesEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/`\r\n  const creneauClientEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-abc?ab=${selectedAbonnement}`\r\n  let planningsEnd = `${process.env.REACT_APP_API_URL}/rest-api/planning/`\r\n\r\n    // let creneauxBySalle = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-salle?salle=${salle}`\r\n    // const abonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    // useEffect(() => {\r\n    //   //  const clientId = props.match.params.id;\r\n    //    const fetchData = async () => {\r\n    //       try {\r\n    //          const res = await api.get(creneauClientEND);\r\n    //          setCreneauxClient(res.data)\r\n   \r\n    //           console.log('ghirrrr =creneauxClient', creneauxClient);\r\n    //       } catch (error) {\r\n    //          console.log(error, 'erreur presneces');\r\n    //       }\r\n    //    }\r\n    //    fetchData();\r\n    // }, [props.match.params.id] );\r\n    \r\n    useEffect( ()  => {\r\n      if (client !== '') {\r\n         api.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${client}`).then(response => {\r\n          setAbonnementsClient(response.data) ;\r\n          console.log(response.data);\r\n        }).catch(errors => {\r\n           console.log('erreurs lines 67', errors);\r\n         })\r\n      }\r\n   }, [client]); \r\n    useEffect( ()  => {\r\n      const fetchData =  () => {\r\n       if (show == true) {\r\n         api.get(planningsEnd).then(responses => {\r\n          setPlannings(responses.data) ;\r\n        }).catch(errors => {\r\n           console.log('erreurs lines 67', errors);\r\n         })\r\n       }\r\n     }\r\n     fetchData()\r\n   }, [show]); \r\n   useEffect( ()  => {\r\n    const fetchData = async () => {\r\n     if (show == true) {\r\n      await api.get(clientsEND).then(responses => {\r\n        setClients(responses.data) ;\r\n      }).catch(errors => {\r\n         console.log('erreurs lines 67', errors);\r\n       })\r\n     }\r\n   }\r\n   fetchData()\r\n }, [show]); \r\n  //   useEffect( ()  => {\r\n  //     const fetchData = async () => {\r\n\r\n  //      if (show == true) {\r\n  //       await api.get(abonnementEND).then(responses => {\r\n  //         setAbonnements(responses.data) ;\r\n  //       }).catch(errors => {\r\n  //          console.log('erreurs lines 83', errors);\r\n  //        })\r\n  //      }\r\n  //    }\r\n  //    fetchData()\r\n  //  }, [show]);\r\n\r\n\r\n    useEffect( ()  => {\r\n      const fetchData =  () => {\r\n       if (show == true) {\r\n         api.get(sallesEnd).then(responses => {\r\n          setSalles(responses.data) ;\r\n        }).catch(errors => {\r\n           console.log('erreurs lines 98', errors);\r\n         })\r\n       }\r\n     }\r\n     fetchData()\r\n   }, [show]);\r\n\r\n\r\n\r\n   let result1=[]\r\n   let result2=[]\r\n   let result3=[]\r\n   let result4=[]\r\n   let result5=[]\r\n   let result6=[]\r\n   let result7=[]\r\n    useEffect(() => {\r\n      // console.log('selected salle', typeof selectedSalle );\r\n      if (selectedAbonnement !== '' ) {\r\n        api.get(creneauClientEND).then(res =>{\r\n          console.log('creneaux end', res.data);\r\n          res.data.forEach((req) => {\r\n          if (req.day == \"SA\") {\r\n            console.log('req.day', res.data);\r\n            result1.push(req);\r\n          }else if(req.day== \"DI\"){\r\n            result2.push(req);\r\n          }else if (req.day== \"LU\"){\r\n            result3.push(req);\r\n          }else if(req.day== \"MA\"){\r\n            result4.push(req);\r\n          }else if(req.day== \"ME\"){\r\n            result5.push(req);\r\n          }else if(req.day== \"JE\"){\r\n            result6.push(req);\r\n          }else if(req.day== \"VE\"){\r\n            result7.push(req);\r\n          }\r\n        })\r\n          // setCreneaux([])\r\n          setSamedi(result1)\r\n          setDimanche(result2)\r\n          setLundi(result3)\r\n          setMardi(result4)\r\n          setMercredi(result5)\r\n          setJeudi(result6)\r\n          setVendredi(result7)\r\n        })\r\n      }\r\n    }, [client, selectedAbonnement]);\r\n\r\n    // const changingStyle = (id) => {\r\n    //   // const creneau = e.currentTarget.id\r\n    //   // console.log('the creneay ??? ', creneau);\r\n    //   if (creneaux.indexOf(id) !== -1) {\r\n    //    return true\r\n    //   //  tdClass = 'hett-test'\r\n    //   }\r\n    // }\r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n      const newCreneau = {\r\n        abc: selectedAbonnement,\r\n        // date : date,:\r\n        hour_entree :  hourIn,\r\n        creneau : creneau,\r\n        note : note,\r\n        // abonnement_client : selectedAbonnement,\r\n        date : formatDate(new Date(presenceDate))\r\n      }\r\n      if (hourOut !== \"\"){\r\n        newCreneau.hour_sortie = hourOut\r\n      }\r\n      console.log(\" =================> new Creneau \", newCreneau);\r\n      await api.post(presenceCreateEND, newCreneau).then( res => {\r\n        notifySuccess('Presence Manuelle enregistré')\r\n        handleShow()\r\n      }).catch( err => {\r\n        notifyError(\"erreur de creation de présence, veuillez vérifier les informations manquantes\")\r\n      })\r\n    }\r\n    // console.log('creneaux detail', activities);\r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-capitalize text-black'>Creation de présence manuellement</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"form-row\">\r\n        <div className=\"form-group col- col-md-6\">\r\n                <Autocomplete  onChange={(event, value) => {\r\n                        try {\r\n                          setClient(value.id)\r\n                        } catch (error) {\r\n                          setClient('')\r\n                        }}} options={clients} getOptionSelected={(option) =>  option['id']} getOptionLabel={(option) => `${option['id']} -   ${option['first_name']}  ${option['last_name']}  `} renderInput={(params) => \r\n                  <TextField {...params}  label=\"Abonné\" name=\"client\" variant=\"outlined\" fullWidth />} \r\n                />\r\n              </div>\r\n              <div className=\"form-group col- col-md-6\">\r\n                <Autocomplete  onChange={(event, value) => {\r\n                        try {\r\n                          setSelectedAbonnement(value.id)\r\n                          setShowCreneau(true)\r\n                        } catch (error) {\r\n                          setSelectedAbonnement('')\r\n                          setShowCreneau(false)\r\n                        }}} options={abonnementsClient} getOptionSelected={(option) =>  option['id']} getOptionLabel={(option) =>  option['type_abonnement_name']} renderInput={(params) => \r\n                  <TextField {...params}  label=\"Abonnement\" name=\"abonnement\" variant=\"outlined\" fullWidth />} \r\n                />\r\n              </div>\r\n              {/* <div className=\"form-group col- col-md-6\">\r\n                <Autocomplete  onChange={(event, value) => {\r\n                        try {\r\n                          setSelectedPlanning(value.id)\r\n                        } catch (error) {\r\n                          setSelectedPlanning('')\r\n                          setShowCreneau(false)\r\n                        }}} options={plannings} getOptionSelected={(option) =>  option['id']} getOptionLabel={(option) =>  option['name']} renderInput={(params) => \r\n                  <TextField {...params}  label=\"Planning\" name=\"planning\" variant=\"outlined\" fullWidth />} \r\n                />\r\n              </div>\r\n              <div className=\"form-group col- col-md-6\">\r\n                <Autocomplete  onChange={(event, value) => {\r\n                        try {\r\n                          setSelectedSalle(value.id)\r\n                          setShowCreneau(true)\r\n                        } catch (error) {\r\n                          setSelectedSalle(0)\r\n                          setShowCreneau(false)\r\n                        }}} options={salles} getOptionSelected={(option) =>  option['id']} getOptionLabel={(option) =>  option['name']} renderInput={(params) => \r\n                  <TextField {...params}  label=\"Salle\" name=\"salle\" variant=\"outlined\" fullWidth />} \r\n                />\r\n              </div> */}\r\n\r\n          </div>\r\n          <div className=\"form-row\">\r\n              <div className=\"form-group col- col-md-6\">\r\n                <TextField type=\"time\" label=\"Heure d'entrée\" variant=\"outlined\" value={hourIn} onChange={e=> setHourIn(e.currentTarget.value)}  fullWidth />\r\n              </div>\r\n              <div className=\"form-group col- col-md-6\">\r\n                  <TextField type=\"time\" value={hourOut} variant=\"outlined\" label=\"Heure de Sortie\" fullWidth onChange={e => setHourOut(e.currentTarget.value)} />\r\n              </div>\r\n              <div className=\"form-group col-6\">\r\n                  <TextField type=\"text\" value={note} label=\"Note\" variant=\"outlined\" onChange={e=> setNote(e.currentTarget.value)} fullWidth />\r\n              </div>\r\n              <div className=\"form-group col-6\">\r\n                  <input type=\"date\" className=\"form-control\" value={presenceDate} label=\"Note\" variant=\"outlined\" onChange={e=> setPresenceDate(e.currentTarget.value)} fullWidth />\r\n              </div>\r\n          </div>\r\n\r\n          {/* helllloooo */}\r\n\r\n    <div className=\"h-80 mt-3\">\r\n         {/* <PageTitle activeMenu=\"Planning\" motherMenu=\"App\" /> */}\r\n         <div>\r\n        { showCreneau &&\r\n        <Col lg={12}>\r\n          <Card>\r\n            \r\n            {/* <Card.Body> */}\r\n            <Table responsive bordered className=\"verticle-middle\">\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\", width: \"150px\", border: ' 1px solid #000000'}}>\r\n                      <h4>Dimanche</h4>\r\n                </th>\r\n                <td>\r\n                  <div>\r\n                { dimanche.map(day=>   ( \r\n                     <td key={day.id}  style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}   onClick={e => { if (selectedCreneau === day.id) {\r\n                      setSeleCreneau()\r\n                     }else {\r\n                      setSeleCreneau(day.id)\r\n                      setCreneau(day.id)\r\n                     }\r\n                      // const creneauId = creneaux.indexOf(day.id)\r\n                      // if (creneauId !== -1) {\r\n                      //   const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                      //   setCreneaux(neawCren) \r\n                      // } else{\r\n                      //   setCreneaux([...creneaux, day.id]) \r\n                      // }\r\n                    }\r\n                    }\r\n                      >\r\n                        <div className={selectedCreneau===day.id ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h6 style={{color: \"#ffffff\"}}  > {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h6> \r\n                          <p style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.activity}</p> \r\n                        </div>\r\n                      </td> \r\n                    ))}\r\n                    </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4>Lundi</h4>\r\n                </th>\r\n                <td style={{ padding: '3px'}}>\r\n\r\n                <div>\r\n                { lundi.map(day=>   ( \r\n                     <td style={{border: \"none\", width: day.width}} key={day.id}  id={day.id}  onClick={e => { if (selectedCreneau === day.id) {\r\n                      setSeleCreneau()\r\n                     }else {\r\n                      setSeleCreneau(day.id)  \r\n                      setCreneau(day.id)\r\n                     }\r\n                      // const creneauId = creneaux.indexOf(day.id)\r\n                      // if (creneauId !== -1) {\r\n                      //   const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                      //   setCreneaux(neawCren) \r\n                      // } else{\r\n                      //   setCreneaux([...creneaux, day.id]) \r\n                      // }\r\n                    }\r\n                    }\r\n                      >\r\n                         <div className={selectedCreneau===day.id ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'}style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.id}</h6> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4>Mardi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { mardi.map(day=>   ( \r\n                      \r\n                      <td key={day.id}  style={{border: \"none\", width: day.width}}  id={day.id}   onClick={e => { if (selectedCreneau === day.id) {\r\n                        setSeleCreneau()\r\n                       }else {\r\n                      setCreneau(day.id)\r\n                      setSeleCreneau(day.id)\r\n                       }\r\n                        // const creneauId = creneaux.indexOf(day.id)\r\n                        // if (creneauId !== -1) {\r\n                        //   const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                        //   setCreneaux(neawCren) \r\n                        // } else{\r\n                        //   setCreneaux([...creneaux, day.id]) \r\n                        // }\r\n                      }\r\n                      }\r\n                        >\r\n                          <div className={selectedCreneau===day.id ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                            <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                            <span> - </span> \r\n                            {day.hour_finish}</h5> \r\n                            <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.id}</h6> \r\n                          </div>\r\n                        </td> \r\n                       ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4>Mercredi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { mercredi.map(day=>   ( \r\n                    \r\n                    <td key={day.id}  style={{border: \"none\", width: day.width}}  id={day.id}  onClick={e => { if (selectedCreneau === day.id) {\r\n                      setSeleCreneau()\r\n                     }else {\r\n                      setCreneau(day.id)\r\n                      setSeleCreneau(day.id)\r\n                     }\r\n                      // const creneauId = creneaux.indexOf(day.id)\r\n                      // if (creneauId !== -1) {\r\n                      //   const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                      //   setCreneaux(neawCren) \r\n                      // } else{\r\n                      //   setCreneaux([...creneaux, day.id]) \r\n                      // }\r\n                    }\r\n                    }\r\n                      >\r\n                        <div className={selectedCreneau===day.id ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h5> \r\n                          <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.id}</h6> \r\n                        </div>\r\n                      </td> \r\n                     ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4>Jeudi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { jeudi.map(day=>   ( \r\n                     \r\n                     <td  key={day.id}  style={{border: \"none\", width: day.width}}  id={day.id} onClick={e => { if (selectedCreneau === day.id) {\r\n                      setSeleCreneau()\r\n                     }else {\r\n                      setCreneau(day.id)\r\n                      setSeleCreneau(day.id)\r\n                     }\r\n                      // const creneauId = creneaux.indexOf(day.id)\r\n                      // if (creneauId !== -1) {\r\n                      //   const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                      //   setCreneaux(neawCren) \r\n                      // } else{\r\n                      //   setCreneaux([...creneaux, day.id]) \r\n                      // }\r\n                    }\r\n                    }\r\n                      >\r\n                        <div className={selectedCreneau===day.id ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.id}</h6> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4>Vendredi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { vendredi.map(day=>   ( \r\n                     <td key={day.id} style={{border: \"none\", width: day.width}}  id={day.id}  onClick={e => { if (selectedCreneau === day.id) {\r\n                      setSeleCreneau()\r\n                     }else {\r\n                      setCreneau(day.id)\r\n                      setSeleCreneau(day.id)\r\n                     }\r\n                      // const creneauId = creneaux.indexOf(day.id)\r\n                      // if (creneauId !== -1) {\r\n                      //   const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                      //   setCreneaux(neawCren) \r\n                      // } else{\r\n                      //   setCreneaux([...creneaux, day.id]) \r\n                      // }\r\n                    }\r\n                    }\r\n                      >\r\n                        <div className={selectedCreneau===day.id ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.id}</h6> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4>Samedi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { samedi.map(day=>   ( \r\n                    \r\n                    <td key={day.id} style={{border: \"none\", width: day.width}}  id={day.id}  onClick={e => { if (selectedCreneau === day.id) {\r\n                      setSeleCreneau()\r\n                     }else {\r\n                      setCreneau(day.id)\r\n                      setSeleCreneau(day.id)\r\n                     }\r\n                      // const creneauId = creneaux.indexOf(day.id)\r\n                      // if (creneauId !== -1) {\r\n                      //   const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                      //   setCreneaux(neawCren) \r\n                      // } else{\r\n                      //   setCreneaux([...creneaux, day.id]) \r\n                      // }\r\n                    }\r\n                    }\r\n                      >\r\n                        <div className={selectedCreneau===day.id ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h5> \r\n                          <h6 style={{color: \"#ffffff\"}}>-{day.coach_name}- {day.id}</h6> \r\n                        </div>\r\n                      </td> \r\n                     ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n              </Table>\r\n              <div>\r\n              \r\n              \r\n              </div>\r\n                \r\n                      \r\n          </Card>\r\n        </Col>\r\n          }\r\n         \r\n         </div>\r\n      </div>\r\n{/* fin table */}\r\n            <Button onClick={handleShow} variant=\"danger light\" className='m-2' > Fermer </Button>\r\n            <Button variant=\"primary\" type=\"submit\">Sauvgarder</Button>\r\n        </form>\r\n      </div>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default PresenceCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\presence\\PresenceEditModal.jsx",["954","955","956","957","958","959","960","961","962","963","964"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n \r\n// function refreshPage() {\r\n//   window.location.reload(false);\r\n// }\r\nconst PresenceEditModal = ({show, onShowShange, presenceData}) => {\r\n   const api = useAxios();\r\n\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const client  =presenceData['client']\r\n    const clientID  =presenceData['clientId']\r\n    const hourIn  =presenceData['hourIn']\r\n    const hourOut  =presenceData['hourOut']\r\n   //  const creneau  =presenceData['creneau']\r\n    const notes  =presenceData['note']\r\n    const date  =presenceData['date']\r\n    const activity  =presenceData['activity']\r\n    const presenceId = presenceData['presenceId']\r\n    const [hourIn2, setHourIn2] = useState('')\r\n    const [hourOut2,setHourOut2] = useState('')\r\n    const [note,setNote] = useState('')\r\n    const [presenceDate,setPresenceDate] = useState('')\r\n\r\n\r\n    \r\n\r\n    let presenceUpdateEND = `${process.env.REACT_APP_API_URL}/rest-api/presence/manual-edit/${presenceId}/`\r\n\r\n    useEffect(() => {\r\n \r\n      if (show == true) {\r\n         setHourIn2(hourIn)\r\n         setHourOut2(hourOut)\r\n         setNote(notes)\r\n         setPresenceDate(presenceData['date'])\r\n           console.log('THE NEW CLIENT ONEEE ');\r\n      }\r\n        console.log('rani hab naafer creneau DATAAA============>', note,\r\n        hourOut);\r\n    }, [presenceData['presenceId']])\r\n\r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n      const newCreneau = {\r\n         hour_entree :hourIn2,\r\n         hour_sortie :hourOut2,\r\n         note :note,\r\n         date :presenceDate,\r\n      }\r\n      // console.log(\" =================> new Creneau \", newCreneau);\r\n      await api.patch(presenceUpdateEND, newCreneau).then( () => {\r\n\r\n         notifySuccess('Présence modifié avec succées ')\r\n         handleShow()\r\n      }\r\n      ).catch(\r\n         notifyError('erreur lors de la modification')\r\n      )\r\n    }\r\n\r\nreturn ( \r\n\r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-capitalize text-black'>Presence de <span className='text-danger ml-3 mr-4'> {client}</span> ID: <span className=' ml-1 text-danger'>{clientID}</span></Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span> </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <div>\r\n         <div className=\"row justify-content-around d-flex m-4\">\r\n            <div >\r\n               <h4 className='text-black'>Date : <span className='text-primary'> {date}</span></h4>\r\n               <h4 className='text-black'>Activité : <span className='text-primary'> {activity}</span></h4>\r\n            </div>\r\n            <div>\r\n               <Link className=\"btn-sm btn-success ml-auto\" target='_blank' to={`/client/${clientID}`}>\r\n                  Fiche Client\r\n               </Link>\r\n            </div>\r\n         </div>\r\n\r\n         <form onSubmit={handleSubmit}>\r\n            <div className=\"form-row\">\r\n               <div className=\"form-group col-md-6\">\r\n                  <TextField type=\"time\" label=\"Heure d'entrée\" variant=\"outlined\" value={hourIn2} onChange={e=> setHourIn2(e.currentTarget.value)} fullWidth/>\r\n               </div>\r\n               <div className=\"form-group col-md-6\">\r\n                  <TextField type=\"time\" value={hourOut2} variant=\"outlined\" label=\"Heure de Sortie\" fullWidth onChange={e => setHourOut2(e.currentTarget.value)}/>\r\n               </div>\r\n               <div className=\"form-group col-md-6\">\r\n                  <TextField type=\"text\" value={note} label=\"Note\" variant=\"outlined\" onChange={e=> setNote(e.currentTarget.value)} fullWidth/>\r\n               </div>\r\n               <div className=\"form-group col-md-6\">\r\n                  <TextField type=\"date\" value={presenceDate} label=\"Date\" variant=\"outlined\" onChange={e=> setPresenceDate(e.currentTarget.value)} fullWidth/>\r\n               </div>\r\n            </div>\r\n            <div className=\"row justify-content-md-around\">\r\n               <div>\r\n                  <Button onClick={handleShow} variant=\"danger \" > Fermer </Button>\r\n                  <Button variant=\"primary\" type=\"submit\">Sauvgarder</Button>\r\n               </div>\r\n               <div>\r\n                  <Button variant=\"danger light\"  onClick={ async () => {\r\n                    await api.delete(`${process.env.REACT_APP_API_URL}/rest-api/presence/delete/${presenceId}/`, )\r\n                    handleShow()}}>Supprimé</Button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n     </Modal.Body>\r\n   </Modal>\r\n)}\r\nexport default PresenceEditModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\ABCCreateModal.jsx",["965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import api from 'axios';\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nimport useAxios from \"../useAxios\";\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst ABCCreateModal = ({show, onShowShange, clientData}) => {\r\n  const api = useAxios();\r\n  const [showCreneau, setShowCreneau] = useState(false)\r\n    const handleShow = useCallback( () => {\r\n      onShowShange(false)\r\n      setShowCreneau(false)\r\n    }, [onShowShange])\r\n    \r\n    \r\n    const clientId = clientData['clientId']\r\n    const today = new Date().toISOString().slice(0, 10)\r\n    const [startDate, setStartDate] = useState(today);\r\n    const [samedi, setSamedi] = useState([]);\r\n\r\n    const [dimanche, setDimanche] = useState([]);\r\n    const [lundi, setLundi] = useState([]);\r\n    const [mardi, setMardi] = useState([]);\r\n    const [mercredi, setMercredi] = useState([]);\r\n    const [jeudi, setJeudi] = useState([]);\r\n    const [vendredi, setVendredi] = useState([]);\r\n    \r\n    const [abonnements, setAbonnements] = useState([]);\r\n    \r\n    const [tousLesCreneaux, setTousLesCreneaux] = useState([]);\r\n    \r\n    const [creneaux, setCreneaux] = useState([]);\r\n    const [selectedDays, setSelectedDays] = useState([]);\r\n    // const [day, setDay] = useState([]);\r\n    // const [startDay, setStartDay] = useState(today);\r\n    const [dureeAbonnement, setDureeAbonnement] = useState('');\r\n    const [paiementCochage, setPaiementCochage] = useState(false);\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    \r\n    const [selectAbonnement, setSelectAbonnement] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [planningId, setPlanningId] = useState(\"\");\r\n    const [plannings, setPlannings] = useState([]);\r\n    \r\n    // let creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-abonnement?ab=${selectAbonnement}`\r\n    let creenauxSallePlanningEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/by-ab-plan?ab=${selectAbonnement}&pl=${planningId}` \r\n    \r\n    const abonnementClientCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement-client/create`\r\n    const abonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    let planningEND = `${process.env.REACT_APP_API_URL}/rest-api/planning/`\r\n\r\n    useEffect(() => {\r\n      api.get(planningEND).then((res) => {\r\n        setPlannings(res.data)\r\n      })\r\n    }, []);\r\n    let result1=[]\r\n    let result2=[]\r\n    let result3=[]\r\n    let result4=[]\r\n    let result5=[]\r\n    let result6=[]\r\n    let result7=[]\r\n    // console.log('the daaaaaays', selectedDays);\r\n    useEffect(() => {\r\n      if (show == true) {\r\n        api.get(abonnementEND).then(res =>{\r\n          setAbonnements(res.data)\r\n        })\r\n      }\r\n    }, [show]);\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n      if (showCreneau == true) {\r\n        api.get(creenauxSallePlanningEND).then(res =>{\r\n          setTousLesCreneaux(res.data)\r\n          res.data.forEach((req) => {\r\n          if (req.day == \"SA\") {\r\n            result1.push(req);\r\n          }else if(req.day== \"DI\"){\r\n                  result2.push(req);\r\n                }else if (req.day== \"LU\"){\r\n                  result3.push(req);\r\n                }else if(req.day== \"MA\"){\r\n                  result4.push(req);\r\n                }else if(req.day== \"ME\"){\r\n                  result5.push(req);\r\n                }else if(req.day== \"JE\"){\r\n                  result6.push(req);\r\n                }else if(req.day== \"VE\"){\r\n                  result7.push(req);\r\n                }\r\n    })\r\n              setCreneaux([])\r\n              setSamedi(result1)\r\n              setDimanche(result2)\r\n              setLundi(result3)\r\n              setMardi(result4)\r\n              setMercredi(result5)\r\n              setJeudi(result6)\r\n              setVendredi(result7)\r\n            })\r\n      }\r\n    }, [selectAbonnement, planningId]);\r\n\r\n    // const notifySuccess = () => {\r\n    //     toast.success('Abonnement Créer Avec Succés', {\r\n    //       position: 'top-right',\r\n    //       autoClose: 5000,\r\n    //       hideProgressBar: false,\r\n    //       closeOnClick: true,\r\n    //       pauseOnHover: true,\r\n    //       draggable: true,\r\n    //     })\r\n    //   }\r\n    // const notifyError = () => {\r\n    //     toast.error('Echec lors de la création', {\r\n    //       position: 'top-right',\r\n    //       autoClose: 5000,\r\n    //       hideProgressBar: false,\r\n    //       closeOnClick: true,\r\n    //       pauseOnHover: true,\r\n    //       draggable: true,\r\n    //     })\r\n    //   }\r\n    //   useEffect(() => {\r\n    //     if (error == true) {\r\n    //       notifyError()\r\n    //     }\r\n    //   }, [error]);\r\n    //   useEffect(() => {\r\n    //     if (success == true) {\r\n    //       notifySuccess()\r\n    //     }\r\n    //   }, [success]);\r\n    const selectAllCreneaux = (creneauxObject) => {\r\n      let creneaux = []\r\n      for (let i = 0; i < creneauxObject.length; i++) {\r\n        const element = creneauxObject[i];\r\n          creneaux.push(element.id)\r\n      }\r\n      return creneaux\r\n    }\r\n\r\n    const changingStyle = (id) => {\r\n      if (creneaux.indexOf(id) !== -1) {\r\n       return true\r\n      }\r\n    }\r\n    function getDayIndex(day){ // this function returns the index of the currente day in the list of days\r\n      switch (day) {\r\n        case 'SA':\r\n            return 6\r\n        case 'DI':\r\n            return 0\r\n        case 'LU':\r\n            return 1\r\n        case 'MA':\r\n            return 2\r\n        case 'ME':\r\n            return 3\r\n        case 'JE':\r\n            return 4\r\n        case 'VE':\r\n            return 5\r\n      }\r\n      }\r\n\r\n    const getLastSelectedDay = (selectedStartDate, selectedDays) => {\r\n      let startDate = new Date(selectedStartDate) \r\n      let theDay = ''\r\n      console.log('dayInd selectedDays ::::', selectedDays);\r\n      for (let i = 0; i < selectedDays.length; i++) {\r\n        // const day = selectedDays[i];\r\n        const dayInd = getDayIndex(selectedDays[i])\r\n        // console.log(' ZERO dayInd', dayInd);\r\n        // console.log('selcted DAYS', selectedDays);\r\n        const dateResult = startDate.setDate((selectedStartDate.getDate()) + (7 + dayInd - selectedStartDate.getDay()) % 7)\r\n        let dateI = new Date(dateResult)\r\n        console.log('  dateRef ===============================>',  dateI);\r\n        if (startDate <=  dateI) {\r\n           theDay = selectedDays[i]\r\n           console.log('resulta intant theDay ', theDay);\r\n      }\r\n          console.log('resulta intant T',  theDay);\r\n      }\r\n      return theDay;\r\n    }\r\n// const getANormalEndDate = (startDate, selectedDays, abonLength ) => {\r\n//     var resultDate = new Date(startDate.getTime());\r\n//     console.log(\"ONE RESDATE\", abonLength);\r\n//     const numDays = Math.floor(abonLength / 7) * 7 - 7\r\n//     console.log(\"TWO numDays\", numDays);\r\n    \r\n//     const AselectedDays = getSelectedDays(creneaux, tousLesCreneaux)\r\n//     console.log(\"THREE AselectedDays\", AselectedDays);\r\n    \r\n//     const returnedDay = getLastSelectedDay(new Date(startDate), AselectedDays)\r\n//     console.log(\"FOUR returnedDay\", returnedDay);\r\n//     const daysNumber = (numDays + getDayIndex(returnedDay)) - (startDate.getDay() % numDays)\r\n//     console.log('daysNumber', daysNumber);\r\n//     const finalDate = resultDate.setDate(resultDate.getDate() + daysNumber);\r\n//     console.log(\"FIVEEEE returnedDay\", new Date(finalDate));\r\n//     return finalDate;\r\n// }\r\nconst getCochageEndDate = (startDate, abonLength) => {\r\n  // const someDate = new Date();\r\n  const endDate =  startDate.setDate(startDate.getDate() + abonLength); \r\n  return endDate\r\n}\r\nconst getSelectedDays = (creneauxIds, tousLesCreneaux) => {\r\n  let days = []\r\n  for (let i = 0; i < creneauxIds.length; i++) {\r\n    const item = creneauxIds[i];\r\n    for (let j = 0; j < tousLesCreneaux.length; j++) {\r\n      const element = tousLesCreneaux[j];\r\n      if (item == element.id ) {\r\n        days.push(element.day)\r\n      }\r\n    }\r\n  }\r\n  days = [...new Set(days)]\r\n  return days\r\n}\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n      const newABC = {\r\n        client :clientId,\r\n        type_abonnement :Number(selectAbonnement),\r\n        start_date: startDate,\r\n        creneaux :creneaux,\r\n      }\r\n      const axWait = await api.post(abonnementClientCreateEND, newABC).then( e => {\r\n        notifySuccess(\"Abonnement creer avec succés\")\r\n        handleShow()\r\n      }).catch(err => {\r\n        notifyError(\"Erreur lors de la creation de l'abonnement'\")\r\n        console.log('the axwait', err);\r\n      })\r\n      return axWait\r\n    }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer un nouvel abonnement pour : {clientId}</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span></Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n        <div className=\"form-group col-md-4\">\r\n              <label className='text-dark font-weight-bold'>PLannings</label>\r\n              <select   name=\"activities\" defaultValue={'option'} className=\"form-control\" onChange={e => setPlanningId(e.target.value)  }>\r\n                <option name='option'>Selectionner un planning</option>\r\n                {plannings.map( salle => (\r\n                  <option key={salle.id} value={salle.id} name={salle.name}>{salle.name}</option>\r\n                ))}\r\n              </select>\r\n             </div>\r\n              <div className=\"form-group col-md-4\">\r\n              <label className='text-dark font-weight-bold'>Abonnement Type</label>\r\n                <Autocomplete\r\n                      onChange={(event, value) => \r\n                        {try {\r\n                          setSelectAbonnement(value.id)\r\n                          setDureeAbonnement(value.number_of_days)\r\n                          setPaiementCochage(value.systeme_cochage)\r\n                          setShowCreneau(true)\r\n                        } catch (error) {\r\n                          setSelectAbonnement('')\r\n                          setDureeAbonnement('')\r\n                          setShowCreneau(false)\r\n                        }}\r\n                        }\r\n                      // onChange={handleSubmit}\r\n                      options={abonnements}\r\n                      getOptionSelected={(option) =>  option['id']}\r\n                      getOptionLabel={(option) =>  option['name']}\r\n                      renderInput={(params) => <TextField {...params}  label=\"...\" name=\"activity\" variant=\"outlined\" fullWidth />}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group col-md-4\">\r\n                <label className='text-dark font-weight-bold'>Date de début</label>\r\n                <input type=\"date\" name=\"start_date\"  value={startDate} className=\"form-control\" onChange={e => setStartDate(e.target.value)}/>\r\n              </div>\r\n      </div>\r\n      <div className=\"row\">\r\n          <labelc className='text-dark font-weight-bold' >Selectionner tout</labelc>\r\n          <input className=\"h-80 ml-3\" value={selectAll} type=\"checkbox\" onClick={e => {\r\n            if (selectAll) {\r\n              setSelectAll(false)\r\n              setCreneaux([])\r\n            }else{\r\n              setSelectAll(true)\r\n              setCreneaux(selectAllCreneaux(tousLesCreneaux))\r\n            }\r\n            }}/>\r\n      </div>\r\n    <div className=\"h-80 mt-3\">\r\n         {/* <PageTitle activeMenu=\"Planning\" motherMenu=\"App\" /> */}\r\n         <div>\r\n        { showCreneau &&\r\n        <Col lg={12}>\r\n          <Card style={{backgroundColor: '#ffffff'}}>\r\n            {/* <Card.Body> */}\r\n            <Table responsive bordered className=\"verticle-middle\">\r\n              <tbody>\r\n              { dimanche.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\", width: \"150px\", border: ' 1px solid #000000'}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Dimanche</h4>\r\n                </th>\r\n                <td>\r\n                  <div>\r\n                { dimanche.map(day=>   ( \r\n                     <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = creneaux.indexOf(day.id)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                        setCreneaux(neawCren) \r\n                      } else{\r\n                        setCreneaux([...creneaux, day.id]) \r\n                      }\r\n                      }}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h6 style={{color: \"#ffffff\"}}  > {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h6> \r\n                          <p className='mb-0' style={{color: \"#ffffff\"}}>{day.coach_name}</p> \r\n                          <p  className='mb-0'style={{color: \"#ffffff\"}}>{day.activity_name}</p> \r\n                        </div>\r\n                      </td> \r\n                    ))}\r\n                    </div>\r\n                </td>\r\n              </tr>\r\n}\r\n{ lundi.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2  text-dark font-weight-bold'>Lundi</h4>\r\n                </th>\r\n                <td style={{ padding: '3px'}}>\r\n                <div>\r\n                { lundi.map(day=>   ( \r\n                     <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = creneaux.indexOf(day.id)\r\n                      const creneauDay = selectedDays.indexOf(day.day)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                        setCreneaux(neawCren) \r\n                      } else{\r\n                        setCreneaux([...creneaux, day.id]) \r\n                      }\r\n                      if (creneauDay !== -1) {\r\n                        const neawdays = selectedDays.filter(cren => cren !== day.day)\r\n                        setSelectedDays(neawdays) \r\n                      } else{\r\n                        setSelectedDays([...selectedDays, day.day]) \r\n                      }\r\n                      }}>\r\n                         <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'}style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <p className='mb-0' style={{color: \"#ffffff\"}}>{day.coach_name}</p> \r\n                          <p className='mb-0' style={{color: \"#ffffff\"}}>{day.activity_name}</p> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n}\r\n{ mardi.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Mardi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { mardi.map(day=>   ( \r\n                      <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                        const creneauId = creneaux.indexOf(day.id)\r\n                        const creneauDay = selectedDays.indexOf(day.day)\r\n                        if (creneauId !== -1) {\r\n                          const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                          setCreneaux(neawCren) \r\n                        } else{\r\n                          setCreneaux([...creneaux, day.id]) \r\n                        }\r\n                        if (creneauDay !== -1) {\r\n                          const neawdays = selectedDays.filter(cren => cren !== day.day)\r\n                          setSelectedDays(neawdays) \r\n                        } else{\r\n                          setSelectedDays([...selectedDays, day.day]) \r\n                        }\r\n                        }}>\r\n                          <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                            <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                            <span> - </span> \r\n                            {day.hour_finish}</h5> \r\n                            <p className='mb-0' style={{color: \"#ffffff\"}}>{day.coach_name}</p> \r\n                            <p className='mb-0' style={{color: \"#ffffff\"}}>{day.activity_name}</p> \r\n\r\n                          </div>\r\n                        </td> \r\n                       ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n}\r\n{ mercredi.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Mercredi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { mercredi.map(day=>   ( \r\n                   <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                    const creneauId = creneaux.indexOf(day.id)\r\n                    const creneauDay = selectedDays.indexOf(day.day)\r\n                    if (creneauId !== -1) {\r\n                      const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                      setCreneaux(neawCren) \r\n                    } else{\r\n                      setCreneaux([...creneaux, day.id]) \r\n                    }\r\n                    if (creneauDay !== -1) {\r\n                      const neawdays = selectedDays.filter(cren => cren !== day.day)\r\n                      setSelectedDays(neawdays) \r\n                    } else{\r\n                      setSelectedDays([...selectedDays, day.day]) \r\n                    }\r\n\r\n                    }}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h5> \r\n                          <p className='mb-0' style={{color: \"#ffffff\"}}>{day.coach_name}</p> \r\n                          <p className='mb-0' style={{color: \"#ffffff\"}}>{day.activity_name}</p> \r\n                           \r\n                        </div>\r\n                      </td> \r\n                     ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n}\r\n{ jeudi.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Jeudi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { jeudi.map(day=>   ( \r\n                     <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = creneaux.indexOf(day.id)\r\n                      const creneauDay = selectedDays.indexOf(day.day)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                        setCreneaux(neawCren) \r\n                      } else{\r\n                        setCreneaux([...creneaux, day.id]) \r\n                      }\r\n                      if (creneauDay !== -1) {\r\n                        const neawdays = selectedDays.filter(cren => cren !== day.day)\r\n                        setSelectedDays(neawdays) \r\n                      } else{\r\n                        setSelectedDays([...selectedDays, day.day]) \r\n                      }\r\n\r\n                      }}>\r\n                         <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <p className='mb-0'  style={{color: \"#ffffff\"}}>{day.coach_name}</p> \r\n                          <p  className='mb-0' style={{color: \"#ffffff\"}}>{day.activity_name}</p> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n}\r\n{ vendredi.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Vendredi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { vendredi.map(day=>   ( \r\n                    <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = creneaux.indexOf(day.id)\r\n                      const creneauDay = selectedDays.indexOf(day.day)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                        setCreneaux(neawCren) \r\n                      } else{\r\n                        setCreneaux([...creneaux, day.id]) \r\n                      }\r\n                      if (creneauDay !== -1) {\r\n                        const neawdays = selectedDays.filter(cren => cren !== day.day)\r\n                        setSelectedDays(neawdays) \r\n                      } else{\r\n                        setSelectedDays([...selectedDays, day.day]) \r\n                      }\r\n\r\n                      }}>\r\n                         <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                           <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                           <span> - </span> \r\n                           {day.hour_finish}</h5> \r\n                           <p className='mb-0' style={{color: \"#ffffff\"}}>{day.coach_name}</p> \r\n                          <p className='mb-0' style={{color: \"#ffffff\"}}>{day.activity_name}</p> \r\n                         </div>\r\n                       </td> \r\n                      ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n}\r\n{ samedi.length > 0 &&\r\n              <tr>\r\n                <th style={{verticalAlign: \"middle\"}}>\r\n                      <h4 className='pl-2 text-dark font-weight-bold'>Samedi</h4>\r\n                </th>\r\n                <td>\r\n                <div>\r\n                { samedi.map(day=>   ( \r\n                    <td style={{border: \"none\", width: day.width, maxWidth: '300px', padding : '6px'}}  key={day.id}  onClick={e => { \r\n                      const creneauId = creneaux.indexOf(day.id)\r\n                      const creneauDay = selectedDays.indexOf(day.day)\r\n                      if (creneauId !== -1) {\r\n                        const neawCren = creneaux.filter(cren => cren !== day.id)\r\n                        setCreneaux(neawCren) \r\n                      } else{\r\n                        setCreneaux([...creneaux, day.id]) \r\n                      }\r\n                      if (creneauDay !== -1) {\r\n                        const neawdays = selectedDays.filter(cren => cren !== day.day)\r\n                        setSelectedDays(neawdays) \r\n                      } else{\r\n                        setSelectedDays([...selectedDays, day.day]) \r\n                      }\r\n\r\n                      }}>\r\n                        <div className={changingStyle(day.id) ? 'selected-creneau fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded': 'fc-event-calendar mt-0 ml-0 mb-2 btn btn-block rounded'} style={{backgroundColor: day.creneau_color}}>\r\n                          <h5 style={{color: \"#ffffff\"}}> {day.hour_start}\r\n                          <span> - </span> \r\n                          {day.hour_finish}</h5> \r\n                          <p className='mb-0' style={{color: \"#ffffff\"}}>{day.coach_name}</p> \r\n                          <p className='mb-0' style={{color: \"#ffffff\"}}>{day.activity_name}</p> \r\n                        </div>\r\n                      </td> \r\n                     ))}\r\n                </div>\r\n                </td>\r\n              </tr>\r\n}\r\n              </tbody>\r\n\r\n              </Table>\r\n              <div>\r\n              </div>\r\n          </Card>\r\n        </Col>\r\n          }\r\n         </div>\r\n      </div>\r\n      <Button onClick={handleShow} variant=\"danger light\" className='m-2' > Fermer </Button>\r\n        <Button variant=\"primary\" type=\"submit\">Valider</Button>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default ABCCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\clients\\PaiementModal.jsx",["992","993","994","995","996","997","998"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\n\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport useAxios from \"../useAxios\";\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst formatDate = (date) => {\r\n  return new Date(date).toISOString().slice(0, 10)\r\n}\r\nconst PaiementModal = ({show, onShowShange, clientData}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const api = useAxios();\r\n  const clientId = clientData['clientId']\r\n    const abonnements = clientData['abcs']\r\n    const paiementCreateEND =`${process.env.REACT_APP_API_URL}/rest-api/transactions/paiement/create` \r\n    const [amount, setAmount] = useState(\"\")\r\n    const [erreur, seterreur] = useState(false)\r\n    const [abcId, setAbcId] = useState([])\r\n    const [dateCreation, setDateCreation] = useState(formatDate(new Date()))\r\n    const [note, setNote] = useState(\"\")\r\n    // const [error, setError] = useState(false)\r\n    // const [success, setSuccess] = useState(false)\r\n    \r\n    // useEffect(() => {\r\n    //   if (show == true) {\r\n        \r\n    //     const fetchData = async () => {\r\n    //        try {\r\n    //           const res = await api.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement-by-client/?cl=${clientId}`);\r\n    //           setAbc(res.data)\r\n    //           console.log('ceci est le resultat de labonnement client ', res.data);\r\n    //        } catch (error) {\r\n    //           console.log(error);\r\n    //        }\r\n    //     }\r\n    //     fetchData();\r\n    //   }\r\n    // }, [clientId] );\r\n  //   const notifySuccess = () => {\r\n  //     toast.success('Paiement  effectuer Avec Succée', {\r\n  //       position: 'top-right',\r\n  //       autoClose: 5000,\r\n  //       closeOnClick: true,\r\n  //       pauseOnHover: true,\r\n  //       draggable: true,\r\n  //     })\r\n  //   }\r\n  // const notifyError = () => {\r\n  //     toast.error('Echec de paiement', {\r\n  //       position: 'top-right',\r\n  //       autoClose: 5000,\r\n  //       hideProgressBar: false,\r\n  //       closeOnClick: true,\r\n  //       pauseOnHover: true,\r\n  //       draggable: true,\r\n  //     })\r\n  //   }\r\n  //   useEffect(() => {\r\n  //     if (error == true) {\r\n  //       notifyError()\r\n  //     }\r\n  //   }, [error]);\r\n  //   useEffect(() => {\r\n  //     if (success == true) {\r\n  //       notifySuccess()\r\n  //     }\r\n  //   }, [success]);\r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n        const paiementDetails = {\r\n          abonnement_client :Number(abcId),\r\n          amount : amount,\r\n          notes : note,\r\n          date_creation : dateCreation\r\n        }\r\n        console.log(\" =================> new Creneau \", paiementDetails);\r\n        try {\r\n          await api.post(paiementCreateEND, paiementDetails)\r\n          notifySuccess('Paiement effectuer avec succés')\r\n          handleShow()\r\n        } catch (error) {\r\n           notifyError(\"Echec de paiement\")\r\n            console.log('je suis la ', error);\r\n        }\r\n\r\n      }\r\nreturn ( \r\n\r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black font-weight-bold'>Creer un nouveau paiement pour : {clientId}</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              // id={(option) =>  option['id']}\r\n              onChange={((event, value) =>  {\r\n                try {\r\n                  setAbcId(value.id)\r\n                  seterreur(false)\r\n                } catch (error) {\r\n                  setAbcId('')\r\n                  seterreur(true)\r\n                }\r\n              })}\r\n              // onChange={handleSubmit}\r\n              options={abonnements}\r\n              //  value={activities[creneauActivite]}\r\n              getOptionSelected={(option) =>  option['id']}\r\n              getOptionLabel={(option) =>  option['type_abonnement_name']}\r\n              renderInput={(params) => \r\n                <TextField {...params}  label=\"Abonnements\" variant=\"outlined\" fullWidth required />}\r\n            />\r\n            {erreur && <p style={{color:'red'}}>veuillez choisir un abonnement du client</p>}\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-6\">\r\n            <TextField\r\n                type=\"number\"\r\n              //   defaultValue={}\r\n                label=\"Montant\"\r\n                variant=\"outlined\"\r\n                onChange={e=> setAmount(e.currentTarget.value)}\r\n                // onChange={(event, value) => setNewStartHour(value)}\r\n                fullWidth\r\n              />\r\n          </div>\r\n          <div className=\"form-group col- col-md-6\">\r\n              <TextField type=\"date\" value={dateCreation} onChange={e=> setDateCreation(e.currentTarget.value)} variant=\"outlined\" label=\"Date\"fullWidth  />\r\n              </div>\r\n            <div className=\"form-group col- col-md-6\">\r\n              <TextField type=\"text\" onChange={e=> setNote(e.currentTarget.value)} variant=\"outlined\" label=\"Note\"fullWidth  />\r\n              </div>\r\n        </div>\r\n        <Button onClick={handleShow} variant=\"danger light\" className='m-2' > Fermer </Button>\r\n        <Button variant=\"primary\" type=\"submit\">Valider</Button>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default PaiementModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\DoorModal.jsx",["999","1000","1001","1002"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst DoorModal = ({show, onShowShange, doorData}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const api = useAxios();\r\n  // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    const postDoorEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/door/`\r\n    const putDoorEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/door/${doorData['doorId']}/`\r\n    const [doorId, setDoorId] = useState('')\r\n    const [doorIp, setDoorIp] = useState('')\r\n    const [doorUsername, setDoorUsername] = useState('')\r\n    const [doorPassword, setDoorPassword] = useState('')\r\n\r\n    useEffect(() => {\r\n      if (show == true) {\r\n        setDoorId(doorData['doorId'])\r\n        setDoorIp(doorData['doorIp'])\r\n        setDoorUsername(doorData['doorUsername'])\r\n        setDoorPassword(doorData['doorPassword'])\r\n        console.log('id de la porte ',doorId , 'new one ',doorData['doorId']  );\r\n      }\r\n    }, [doorData['doorId'], show]);\r\n    const HandleSubmit = e => {\r\n        e.preventDefault();\r\n        const doorData = {\r\n            ip_adress :doorIp,\r\n            username  :doorUsername,\r\n            password  :doorPassword,\r\n        }\r\n        if( doorId ){\r\n            \r\n            doorData.id = doorId\r\n            api.put(putDoorEnd, doorData).then( res => {\r\n                notifySuccess('Porte modifier avec succés')\r\n                    handleShow()\r\n                }).catch(err => {\r\n                    notifyError(\"Erreur lors de la modification de la porte\")\r\n                })\r\n                console.log(' door data', doorData);\r\n        }else {\r\n            api.post(postDoorEnd, doorData).then( res => {\r\n                notifySuccess('Porte Créer avec succés')\r\n                    handleShow()\r\n                }).catch(err => {\r\n                    notifyError(\"Erreur lors de la modification de la porte\")\r\n                })\r\n                console.log('post door data', doorData);\r\n\r\n        }\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Modifier / Creer Porte {doorData['maladieName']}</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={HandleSubmit}>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Adresse IP  </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={doorIp} className=\"form-control\" placeholder=\"...\" onChange={e => setDoorIp(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Username  </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={doorUsername} className=\"form-control\" placeholder=\"...\" onChange={e => setDoorUsername(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Password</label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={doorPassword} className=\"form-control\" placeholder=\"...\" onChange={e => setDoorPassword(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row d-flex justify-content-between\">\r\n            <div className=\"m-3\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Valider\r\n                </button>\r\n            </div>\r\n            <div className=\"m-3\">\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={ async () => {\r\n                await api.delete(putDoorEnd)\r\n                notifySuccess(`La porte ${doorData['doorIp']} a été supprimer avec succés`)\r\n                handleShow()\r\n                }}>Supprimer</button>\r\n            </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\n\r\nexport default DoorModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\MaladieEditModal.jsx",["1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\n\r\nconst MaladieEditModal = ({show, onShowShange, maladieData}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const api = useAxios();\r\n  // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    const maladieUpdateEnd = `${process.env.REACT_APP_API_URL}/rest-api/maladie/${maladieData['maladieId']}`\r\n    const [name, setName] = useState('')\r\n    const [is_default, setDefault] = useState(false)\r\n\r\n    useEffect(() => {\r\n      if (show == true) {\r\n          setName(maladieData['maladieName'])\r\n      }\r\n    }, [maladieData['maladieId']]);\r\n    const HandleSubmit = e => {\r\n        e.preventDefault();\r\n        api.put(maladieUpdateEnd,  {name : name}).then( res => {\r\n            notifySuccess('Maladie modifier avec succés')\r\n                handleShow()\r\n            }).catch(err => {\r\n                notifyError(\"Erreur lors de la modification de la maladie\")\r\n            })\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Modifier la maladie {maladieData['maladieName']}</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={HandleSubmit}>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom  </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row d-flex justify-content-between\">\r\n            <div className=\"m-3\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Valider\r\n                </button>\r\n            </div>\r\n            <div className=\"m-3\">\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={ async () => {\r\n                await api.delete(`${process.env.REACT_APP_API_URL}/rest-api/maladie/${maladieData['maladieId']}`)\r\n                notifySuccess(`La salle ${maladieData['maladieName']} a été supprimer avec succés`)\r\n                handleShow()\r\n                }}>Supprimer</button>\r\n            </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\n\r\nexport default MaladieEditModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\MaladieCreateModal.jsx",["1017"],"import React, { useState, useCallback } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nconst MaladieCreateModal = ({show, onShowShange}) => {\r\n    const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const api = useAxios();\r\n  const maladieCreateEnd = `${process.env.REACT_APP_API_URL}/rest-api/maladie/create/`\r\n\r\nconst [name, setName] = useState('')\r\n    const HandleSubmit = async e => {\r\n        e.preventDefault();\r\n        await api.post(maladieCreateEnd, {name : name}).then( res => {\r\n            notifySuccess('Maladie creer avec succés')\r\n                  handleShow()\r\n            }).catch(err => {\r\n              notifyError(\"Erreur lors de la creation de la Maladie\")\r\n            })\r\n        }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer une nouvelle maladie </Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={HandleSubmit}>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row\">\r\n              <div className=\"col-sm-10\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default MaladieCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\AbonnementListModal.jsx",["1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046"],"import React, { useState, useCallback, useEffect, memo } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst AbonnementListModal = ({show, onShowShange, abonnementData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    // const abonnementEditEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [numberOfDays, setNumberOfDays] = useState('')\r\n    const [seancesQuantity, setSeancesQuantity] = useState('')\r\n    const [activities, setActivities] = useState([])\r\n    const [systemeCochage, setSystemeCochage] = useState(false)\r\n    const [abonnements, setAbonnements] = useState([])\r\n    const [abId, setAbId] = useState('')\r\n    const [acti, setActi] = useState([])\r\n\r\n\r\n    const [ showModal, setShowModal]  = useState(false)\r\n\r\n    const abonnementsEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n// const provArray = []\r\nuseEffect(() => {\r\n  if (show == true) {\r\n    api.get(abonnementsEND).then(res => {\r\n      setAbonnements(res.data)\r\n      // setName(res.data.name)\r\n      // setPrice(res.data.price)\r\n      // setNumberOfDays(res.data.number_of_days)\r\n      console.log('fedfef', res.data);\r\n    })\r\n  }\r\n}, [show]);\r\n\r\n// const openCloseModal = useCallback( (abID) => {} ,[onShowShange])\r\n//  had el useEffect trigli probleme ta3 retard hata ikounou 3andha les valeurs bach t3ayet la fonctions\r\n  useEffect(() => { \r\n    abonnementData(abId, acti)\r\n    handleShow()\r\n  }, [acti]);\r\n  // return indexesList\r\n    // const getSelectedActivities = () => {\r\n    \r\n    //     console.log(\r\n    //         'les activitesss', activity\r\n    //     );\r\n    //   for (let i = 0; i < activity.length; i++) {\r\n    //       // setRealMaladies([...realMaladies, selectedMaladies[i]['id']])\r\n    //       selectedActivities.push(activity[i]['id'])\r\n    //   }\r\n    //   console.log(\r\n    //     // 'les provArray', provArray\r\n    // );\r\n    // //   setSelectedActivities(provArray)\r\n    // }\r\n// const handleDelete = e => {\r\n//     api.delete(abonnementDeleteEND).then(\r\n//         refreshPage(),\r\n//         handleShow()\r\n//     )\r\n// }\r\n    \r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>{name}</Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <table className=\"table text-center bg-warning-hover config-tableaux\">\r\n              <thead>\r\n                  <tr>\r\n                      <th className=\"text-left\">Abonnement</th>\r\n                      <th>Nombre de Séance </th>\r\n                      <th >Nombre jours / semaine</th>\r\n                      <th className=\"text-right\">Nombre d'activités'</th>\r\n                      <th >Inscrits</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n              {abonnements.map( abonnement => (\r\n                  <tr className='cursor-abonnement' key={abonnement.id} onClick={() =>{\r\n                    setAbId(abonnement.id)\r\n                    setActi(abonnement.salles)\r\n                    // abonnementData(abId, acti)\r\n                    // handleShow()\r\n                  }\r\n                  } >\r\n                      <td className=\"text-left\">{abonnement.name}</td>\r\n                      <td>{abonnement.seances_quantity}</td>\r\n                      <td >{abonnement.number_of_days}</td>\r\n                      <td className=\"text-right\">{abonnement.salles.length}</td>\r\n                      <td className=\"text-right\">{abonnement.clients_number}</td>\r\n                  </tr>\r\n              ))}\r\n              </tbody>\r\n          </table>\r\n     </Modal.Body>\r\n\r\n    </Modal>\r\n)\r\n\r\n};\r\nexport default AbonnementListModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\PlanningEditModal.jsx",["1047","1048","1049","1050","1051","1052","1053","1054"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport useAxios from \"../useAxios\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst PlanningEditModal = ({show, onShowShange, planningData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    \r\n    const [is_default, setDefault] = useState(false)\r\n    const [planId, setPlanId] = useState('')\r\n    const [planName, setPlanName] = useState('')\r\n    const planningEditEnd = `${process.env.REACT_APP_API_URL}/rest-api/planning/${planId}/`\r\n    const HandleSubmit = async e => {\r\n        e.preventDefault();\r\n        const planningForm = {\r\n            name : planName,\r\n            is_default : is_default\r\n        }\r\n        console.log('the form', planningForm);\r\n        await api.put(planningEditEnd, planningForm).then( res => {\r\n            notifySuccess('Planning modifier avec succés')\r\n                handleShow()\r\n            }).catch(err => {\r\n                notifyError(\"Erreur lors de la modification du Planning\")\r\n            })\r\n      }\r\n      useEffect(() => {\r\n        if (show == true) {\r\n            setPlanId(planningData['planId'])\r\n            setPlanName(planningData['planName'])\r\n            setDefault(planningData['isDefaultPlanning'])\r\n        }\r\n      }, [show]);\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer un nouveau Planning </Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={HandleSubmit}>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={planName} className=\"form-control\" placeholder=\"...\" onChange={e => setPlanName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n          <FormControlLabel\r\n                control={\r\n                    <Checkbox \r\n                        checked={is_default}\r\n                        onChange={e=> {\r\n                        setDefault(!is_default)\r\n                            console.log('target value', e.target.value);\r\n                        }}\r\n\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Planning par défaut\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group row d-flex justify-content-between\">\r\n              <div className=\"m-3\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n              </div>\r\n              <div className=\"m-3\">\r\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={ async () => {\r\n                    await api.delete(`${process.env.REACT_APP_API_URL}/rest-api/planning/delete/${planId}/` )\r\n                    notifySuccess(`Le planning ${planName} a été supprimer avec succés`)\r\n                    handleShow()}}>Supprimer</button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\nexport default PlanningEditModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\Header.js",["1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport profile from \"../../../images/profile/pic1.jpg\";\r\nimport avatar from \"../../../images/avatar/1.jpg\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n// import { LogoutUser } from \"../../utils/auth\";\r\nimport { set } from \"js-cookie\";\r\n// import { axiosInstance } from \"../../utils/auth\";\r\n  import AuthContext from \"../../context/AuthContext\";\r\nimport { useContext } from \"react\";\r\nimport axios from \"axios\";\r\n// import {notifySuccess, notifyError} from '../Alert'\r\nimport {notifySuccess, notifyError} from '../../components/Alert'\r\nimport ShortCuts from \"../../components/ShortCuts\";\r\n\r\n\r\n\r\nconst Header = ({ textTab, onNote, toggle, onProfile, onNotification, onClick }) => {\r\n\r\n  var path = window.location.pathname.split(\"/\");\r\n  var name = path[path.length - 1].split(\"-\");\r\n\r\n  var filterName = name.length >= 3 ? name.filter((n, i) => i > 1) : name;\r\n  var finalName = filterName.includes(\"app\")\r\n    ? filterName.filter((f) => f !== \"app\")\r\n    : filterName.includes(\"ui\")\r\n    ? filterName.filter((f) => f !== \"app\")\r\n    : filterName;\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const { user, logoutUser } = useContext(AuthContext);\r\n\r\n  const [token, setToken] = useState(\"\");\r\n  const [username, SetUsername] = useState(\"\");\r\n  \r\n  const Logout = async e => {\r\n    let endpoint = `${process.env.REACT_APP_API_URL}/rest-api/auth/logout/blacklist`\r\n    // const authToken = localStorage.getItem('authTokens')\r\n    const authToken =  JSON.parse(localStorage.getItem(\"authTokens\"))\r\n    console.log('authToken', jwt_decode(localStorage.getItem(\"authTokens\")));\r\n    // console.log('refresh 2 ', authToken.refresh);\r\n    console.log('refresh',  JSON.parse(localStorage.getItem(\"authTokens\")).refresh);\r\n    axios.post(endpoint, {refresh :authToken.refresh}).then( () => {\r\n      console.log(authToken.refresh);\r\n      localStorage.removeItem('authTokens');\r\n      // axiosInstance.defaults.headers['Authorization'] = null;\r\n      history.push('/login');\r\n    }).catch(err => {\r\n      notifyError(err.error)\r\n      console.log('err =>', err);\r\n    })\r\n  }\r\n\r\n// const response = axiosInstance.post('rest-api/auth/logout/blacklist', {\r\n//   refresh_token: localStorage.getItem('refresh_token'),\r\n// });\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-content\">\r\n        <nav className=\"navbar navbar-expand\">\r\n          <div className=\"collapse navbar-collapse justify-content-between\">\r\n            <div className=\"header-left\">\r\n              <div\r\n                className=\"dashboard_bar\"\r\n                style={{ textTransform: \"capitalize\" }}\r\n              >\r\n               {textTab}\r\n              </div>\r\n            </div>\r\n            \r\n            <ul className=\"navbar-nav header-right\">\r\n\r\n            <div className=\"nav-item dropdown header-profile ml-sm-4 ml-2\">\r\n              {\r\n                    user ? ( \r\n\r\n                    <span className=\"dropdown-item ai-icon\"style={{ cursor: 'pointer'}}  onClick={(e) => Logout(e)}>\r\n                   Se Déconnecté </span>\r\n                  ) : (\r\n                    <Link className=\"dropdown-item ai-icon\" to={`/login`} >\r\n                    <svg\r\n                      id=\"icon-logout\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"text-danger\"\r\n                      width={18}\r\n                      height={18}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\r\n                      <polyline points=\"16 17 21 12 16 7\" />\r\n                      <line x1={21} y1={12} x2={9} y2={12} />\r\n                    </svg> Se Connecter </Link>\r\n                  )}\r\n            </div>\r\n\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\NavHader.js",[],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\ActivityCreateModal.jsx",["1071","1072","1073","1074","1075","1076","1077","1078","1079"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport ColorPicker_ from \"material-ui-color-picker\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst ActivityCreateModal = ({show, onShowShange, activityData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    // const activitiesEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/`\r\n    const activityCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/create`\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n\r\nconst [name, setName] = useState('')\r\nconst [salle, setSalle] = useState('')\r\nconst [color, setColor] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const activityFormData = {\r\n            name  : name,\r\n            salle : Number(salle),\r\n            color: color\r\n        }\r\n        api.post(activityCreateEND, activityFormData).then(res => {\r\n          notifySuccess('Activité creer avec succés')\r\n          handleShow()\r\n        }).catch( err => {\r\n          notifyError(\"Erreur lors de la creation de l'Activité\")\r\n        })\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer une nouvelle Activité  </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          \r\n          {/* <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Couleur </label>\r\n              <div className=\"col-sm-9\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-6 mb-3\">\r\n                  <div className=\"example\">\r\n                    <input\r\n                      type=\"color\"\r\n                      className=\"as_colorpicker form-control\"\r\n                      value={color}\r\n                      onChange={(e, value) => setColor(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                \r\n              </div>\r\n              </div>\r\n          </div> */}\r\n\r\n       \r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Salle </label>\r\n              <div className=\"col-sm-9\">\r\n                  <Autocomplete\r\n                      onChange={((event, value) =>  \r\n                        {\r\n                        setSalle(value.id)\r\n                    }\r\n                        )} \r\n                    //   value={salles}\r\n                      options={activityData['salllesActivities']}\r\n                      getOptionSelected={(option) =>  option['id']}\r\n\r\n                      id=\"size-small-standard-multi\"\r\n                      getOptionLabel={(option) =>  ( option['name'])}\r\n                      renderInput={(params) =>\r\n                  (<TextField {...params} name=\"salle\" label=\"salle\" variant=\"outlined\" fullWidth />)}\r\n                />\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Couleur</label>\r\n                <div  className=\"col-sm-9\">\r\n                    <input type=\"color\" className=\"as_colorpicker form-control\" value={color} onChange={(e, value) => setColor(e.target.value)} />\r\n                </div>\r\n            </div>\r\n          <div className=\"form-group row\">\r\n              <div className=\"col-sm-10\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default ActivityCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\PlanningCreateModal.jsx",["1080","1081","1082","1083","1084","1085","1086","1087"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n// import useForm from 'react-hook-form';\r\n// import createPalette from \"@material-ui/core/styles/createPalette\";\r\n\r\nconst PlanningCreateModal = ({show, onShowShange}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    const planningCreateEnd = `${process.env.REACT_APP_API_URL}/rest-api/planning/create`\r\n\r\nconst [name, setName] = useState('')\r\nconst [is_default, setDefault] = useState(false)\r\n    const HandleSubmit = async e => {\r\n        e.preventDefault();\r\n        const ebonnementFormData = {\r\n            name : name,\r\n            is_default : is_default\r\n            // salle_sport : 1\r\n        }\r\n        await api.post(planningCreateEnd, ebonnementFormData).then( res => {\r\n                notifySuccess('Planning creer avec succés')\r\n                handleShow()\r\n            }).catch(err => {\r\n                notifyError(\"Erreur lors de la modification du planning\")\r\n            })\r\n        // refreshPage()\r\n        handleShow()\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer un nouveau Planning </Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={HandleSubmit}>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <FormControlLabel\r\n                control={\r\n                    <Checkbox \r\n                        checked={is_default}\r\n                        onChange={e=> {\r\n                        setDefault(!is_default)\r\n                            console.log('target value', e.target.value);\r\n                        }}\r\n\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Planning par défaut\"\r\n            />\r\n          </div>\r\n          \r\n\r\n          <div className=\"form-group row\">\r\n              <div className=\"col-sm-10\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default PlanningCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\ActivityEditModal.jsx",["1088","1089","1090","1091","1092","1093","1094","1095"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\n\r\nconst ActivityEditModal = ({show, onShowShange, activityData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n  const activityEditEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/${activityData['activityId']}/`\r\n \r\n  const sallesActivite = activityData['salles']\r\n  const selectedSalle  = activityData['salleId']\r\n  // const activityColor  = activityData['color']\r\n\r\n  const [name, setName] = useState('')\r\n  const [salle, setSalle] = useState('')\r\n  const [allSalles, setAllSalles] = useState([])\r\n  const [color, setColor] = useState(\"\");\r\n  const [newSalle, setNewSalle] = useState(selectedSalle)\r\n  \r\n  console.log('selectedSalle',selectedSalle);\r\n  console.log('sallesActivite',sallesActivite);\r\n\r\nuseEffect(() => {\r\n  if (activityData['activityId']) {\r\n    setName(activityData['activityName'])\r\n    setColor(activityData['color'])\r\n    setAllSalles(activityData['salles'])\r\n    setSalle(sallesActivite[activityData['salleId']])\r\n    setNewSalle(sallesActivite[selectedSalle].id)\r\n    console.log('la couleuuuuur', activityData['color']);\r\n    console.log('la setNewSalle', newSalle);\r\n  }\r\n}, [ activityData['activityId']]);\r\n\r\n\r\nconst handleSubmit = async e => {\r\n  e.preventDefault();\r\n  const activityFormData = {\r\n      name  : name,\r\n      salle : Number(newSalle),\r\n      color: color\r\n  }\r\n  await api.patch(activityEditEND, activityFormData)\r\n  handleShow()\r\n}\r\n\r\nconsole.log('sallesActivit', sallesActivite);\r\nconsole.log('newSalle', newSalle);\r\n\r\nreturn ( \r\n  <div>\r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>modifier l'activité  </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Salle </label>\r\n              <div className=\"col-sm-9\">\r\n                  <Autocomplete\r\n                      onChange={((event, value) =>  {\r\n                        setNewSalle(value.id)\r\n\r\n                      }\r\n                        )}\r\n                        \r\n                      // defaultValue={salle}\r\n                      options={allSalles}\r\n                      defaultValue={sallesActivite[selectedSalle]}\r\n                      getOptionSelected={(option) =>  option['id']}\r\n                      id=\"size-small-standard-multi\"\r\n                      getOptionLabel={(option) =>  ( option['name'])}\r\n                      renderInput={(params) =>\r\n                  (<TextField {...params} name=\"salle\" label=\"salle\" variant=\"outlined\" fullWidth />)}\r\n                />\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Couleur</label>\r\n                <div  className=\"col-sm-9\">\r\n                    <input type=\"color\" className=\"as_colorpicker form-control\" value={color} onChange={(e, value) => setColor(e.target.value)} />\r\n                </div>\r\n            </div>\r\n          <div className=\"form-group row d-flex justify-content-between\">\r\n              <div className=\"m-3\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n              </div>\r\n              <div className=\"m-3\">\r\n                  <button type=\"submit\" className=\"btn btn-danger\" onClick={ async () => {\r\n                    await api.delete(`${process.env.REACT_APP_API_URL}/rest-api/salle-activite/activite/delete/${activityData['activityId']}/` )\r\n                    handleShow()}}>\r\n                      Supprimer\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n  </div>\r\n\r\n)}\r\nexport default ActivityEditModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\SalleActiviteCreateModal.jsx",["1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\n\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\n\r\nconst SalleActiviteCreateModal = ({show, onShowShange, salleData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    const salleActiviteCreateEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/create`\r\n\r\nconst [name, setName] = useState('')\r\nconst [price, setPrice] = useState('')\r\nconst [numberOfDays, setNumberOfDays] = useState('')\r\nconst [seancesQuantity, setSeancesQuantity] = useState('')\r\nconst [activity, setActivity] = useState([])\r\nconst [door, setDoor] = useState([])\r\nconst [selectedActivities, setSelectedActivities] = useState([])\r\nconst [is_default, setDefault] = useState(false)\r\n\r\n    const HandleSubmit = async e => {\r\n        e.preventDefault();\r\n        const ebonnementFormData = {\r\n            name : name,\r\n            door : door,\r\n            is_default : is_default,\r\n        }\r\n        await api.post(salleActiviteCreateEnd, ebonnementFormData).then( res => {\r\n            notifySuccess('Salle creer avec succés')\r\n                  handleShow()\r\n            }).catch(err => {\r\n              notifyError(\"Erreur lors de la creation de la salle\")\r\n            })\r\n      }\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer un nouvel abonnement </Modal.Title>\r\n      <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={handleShow}\r\n          >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={HandleSubmit}>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n                <div className=\"col-sm-9\">\r\n                    <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Salle </label>\r\n              <div className=\"col-sm-9\">\r\n                  <Autocomplete\r\n                      onChange={((event, value) =>  {\r\n                        setDoor(value.id)\r\n                    }\r\n                        )} \r\n                    //   value={salles}\r\n                      options={salleData['doors']}\r\n                      getOptionSelected={(option) =>  option['id']}\r\n\r\n                      id=\"size-small-standard-multi\"\r\n                      getOptionLabel={(option) =>  ( option['ip_adress'])}\r\n                      renderInput={(params) =>\r\n                  (<TextField {...params} name=\"door\" label=\"Porte\" variant=\"outlined\" fullWidth />)}\r\n                />\r\n              </div>\r\n          </div>\r\n          \r\n          <div className=\"form-group row\">\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox \r\n                            checked={is_default}\r\n                            onChange={e=> {\r\n                            setDefault(!is_default)\r\n                                console.log('target value', e.target.value);\r\n                            }}\r\n\r\n                            name=\"checkedB\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Salle par défaut\"\r\n                />\r\n            </div>\r\n          <div className=\"form-group row\">\r\n              <div className=\"col-sm-10\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n              </div>\r\n          </div>\r\n   \r\n      </form>\r\n     </Modal.Body>\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default SalleActiviteCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\SalleActiviteEditModal.jsx",["1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\nconst SalleActiviteEditModal = ({show, onShowShange, salleData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    const salleActiviteUpdateEnd = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/${salleData['salleId']}/`\r\n    const doors = salleData['doors']\r\n    const selectedDoor  = salleData['doorId']\r\n    const [name, setName] = useState('')\r\n\r\n    const [is_default, setDefault] = useState(false)\r\n    const [door, setDoor] = useState([])\r\n\r\n\r\n    console.log('doors doors', doors);\r\n    console.log('selected DOOR', salleData['doorId']);\r\n\r\n    useEffect(() => {\r\n    if (show == true) {\r\n        setName(salleData['salleName'])\r\n        setDefault(salleData['isDefaultSalle'])\r\n    }\r\n    }, [salleData['salleId']]);\r\n    const HandleSubmit = e => {\r\n        e.preventDefault();\r\n        const salleFormData = {\r\n            name : name,\r\n            door : Number(door),\r\n            is_default : is_default\r\n        }\r\n        console.log(\" =================> salleFormData \", salleFormData);\r\n        api.put(salleActiviteUpdateEnd, salleFormData).then( res => {\r\n            notifySuccess('Salle modifier avec succés')\r\n                handleShow()\r\n            }).catch(err => {\r\n                notifyError(\"Erreur lors de la modification de la salle\")\r\n            })\r\n      } \r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer un nouvel abonnement </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} >\r\n          <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={HandleSubmit}>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Nom  </label>\r\n                <div className=\"col-sm-9\">\r\n                    <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Salle </label>\r\n              <div className=\"col-sm-9\">\r\n                  <Autocomplete\r\n                      onChange={((event, value) =>  {\r\n                        setDoor(value.id)\r\n                    }\r\n                        )} \r\n                    //   value={salles}\r\n                      options={salleData['doors']}\r\n                      defaultValue={doors[selectedDoor]}\r\n                      getOptionSelected={(option) =>  option['id']}\r\n\r\n                      id=\"size-small-standard-multi\"\r\n                      getOptionLabel={(option) =>  ( option['ip_adress'])}\r\n                      renderInput={(params) =>\r\n                  (<TextField {...params} name=\"door\" label=\"Porte\" variant=\"outlined\" fullWidth />)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox \r\n                            checked={is_default}\r\n                            onChange={e=> {\r\n                            setDefault(!is_default)\r\n                                console.log('target value', e.target.value);\r\n                            }}\r\n                            name=\"checkedB\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Salle par défaut\"\r\n                />\r\n            </div>\r\n          \r\n          <div className=\"form-group row d-flex justify-content-between\">\r\n            <div className=\"m-3\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Valider\r\n                </button>\r\n            </div>\r\n            <div className=\"m-3\">\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={ async () => {\r\n                await api.delete(`${process.env.REACT_APP_API_URL}/rest-api/salle-activite/delete/${salleData['salleId']}/`)\r\n                notifySuccess(`La salle ${salleData['salleName']} a été supprimer avec succés`)\r\n                handleShow()\r\n                }}>\r\n                    Supprimer\r\n                </button>\r\n            </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)}\r\n\r\nexport default SalleActiviteEditModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\AbonnementCreateModal.jsx",["1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\n\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\n\r\nconst AbonnementCreateModal = ({show, onShowShange}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const activitiesEND = `${process.env.REACT_APP_API_URL}/rest-api/salle-activite/`\r\n    const abonnementCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/create`\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    // const [numberOfDays, setNumberOfDays] = useState('')\r\n    const [seancesQuantity, setSeancesQuantity] = useState('')\r\n    const [activity, setActivity] = useState([])\r\n    const [selectedActivities, setSelectedActivities] = useState([])\r\n    const [duree, setDuree] = useState('')\r\n    const [displayLength, setDisplayLength] = useState(true)\r\n    const [length, setLength] = useState(\"Nombre d'heures\")\r\n    const [typeOfValue, setTypeOfValue] = useState(\"VH\")\r\n    // const [numOfWeek, setNumOfWeek] = useState(false)\r\n    \r\n    const [alertSuccess, setAlertSuccess] = useState(false)\r\n    const [helpText, setHelpText] = useState(\"Abonnement limité par un nombre d'heures\")\r\n    const [alertError, setAlertError] = useState(false)\r\n    const [activities, setActivities] = useState([])\r\n  \r\n    //FK \r\n    useEffect(() => {\r\n      api.get(activitiesEND).then((res) => {\r\n        setActivities(res.data)\r\n      })\r\n    }, []);\r\n  const  DureeAb = [\r\n    {mois :'1 Jour', jours : 1},\r\n    {mois :'15 Jour', jours : 15},\r\n    {mois :'45 Jour', jours : 45},\r\n    {mois :'1 mois', jours : 30},\r\n    {mois :'2 mois', jours : 60},\r\n    {mois :'3 mois', jours : 90},\r\n    {mois :'4 mois', jours : 120},\r\n    {mois :'6 mois', jours : 180},\r\n    {mois :'12 mois', jours : 360},\r\n  ]\r\n    const getSelectedActivities = () => {\r\n        console.log(\r\n            'les activitesss', activity\r\n        );\r\n      for (let i = 0; i < activity.length; i++) {\r\n          selectedActivities.push(activity[i]['id'])\r\n      }\r\n    }\r\n    const handleTypeOfValueChange = (event) => {\r\n        setTypeOfValue(event.target.value)\r\n        console.log(typeOfValue);\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        for (let i = 0; i < activity.length; i++) {\r\n            selectedActivities.push(activity[i]['id'])\r\n        }\r\n        const abonnementFormData = {\r\n            name              : name,\r\n            price             : price,\r\n            seances_quantity  : Number(seancesQuantity),\r\n            salles          : selectedActivities,\r\n            length    : duree,\r\n            type_of : typeOfValue\r\n\r\n        }\r\n        await api.post(abonnementCreateEND, abonnementFormData)\r\n        .then( res => {\r\n            notifySuccess('Abonnement creer avec succés')\r\n            handleShow()\r\n        }).catch(err => {\r\n            notifyError(\"Erreur lors de la creation de l'abonnement\")\r\n        })\r\n      }\r\n\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>Creer un nouvel abonnement </Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span>\r\n      </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group row\">\r\n            <label className=\"col-sm-3 col-form-label\">Type d'abonnement </label>\r\n              <div className=\"col-sm-9\">\r\n              <small className=\"m-0 text-success\" htmlFor=\"\">{helpText}</small>\r\n\r\n              <RadioGroup row aria-label=\"position\" name=\"position\" value={typeOfValue} onChange={handleTypeOfValueChange}>\r\n                <FormControlLabel\r\n                    value=\"VH\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Volume Horaire\"\r\n                    labelPlacement=\"start\"\r\n                    selected={true}\r\n                    onClick={e => {\r\n                        setLength(\"Nombre d'heures\")\r\n                        // setTypeOfValue(e => )\r\n                        setDisplayLength(true)\r\n                        setHelpText(\"Abonnement limité par un nombre d'heures\")\r\n                    }}\r\n                />\r\n                <FormControlLabel\r\n                    value=\"SF\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Seances Fix\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={e => {\r\n                        setLength(\"Nombre de séances\")\r\n                        setDisplayLength(true)\r\n                        setHelpText(\"Abonnement limité par un nombre de seance et des horaires fix\")\r\n                    }}\r\n                />\r\n                <FormControlLabel\r\n                    value=\"SL\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Seances Libre\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={e => {\r\n                        setLength(\"Nombre de séances\")\r\n                        setDisplayLength(true)\r\n                        setHelpText(\"Abonnement limité par un nombre de seance avec des horaires fléxible\")\r\n                    }}\r\n                />\r\n              </RadioGroup>\r\n                  {/* <FormControlLabel\r\n                    value=\"AL\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Accés Libre\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={e => {\r\n                        setDisplayLength(false)\r\n                        setHelpText(\"Abonnement limité uniquement par sa date\")\r\n                    }}\r\n                /> */}\r\n              </div>\r\n\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Prix </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"number\"value={price} className=\"form-control\" placeholder=\"...\" onChange={e => setPrice(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n            \r\n            <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\">Durée </label>\r\n                <div className=\"form-group col-sm-9\">\r\n                    <Autocomplete\r\n                        onChange={(event, value) => \r\n                        {\r\n                            try {\r\n                            setDuree(value.jours)\r\n                        } catch (error) {\r\n                            setDuree('')\r\n                        }}\r\n                        }\r\n                        options={DureeAb}\r\n                        getOptionLabel={(option) =>  option['mois']}\r\n                        renderInput={(params) => <TextField {...params} label=\"Mois\" variant=\"outlined\" />}\r\n                        />\r\n                </div>\r\n            </div>\r\n            {\r\n                displayLength &&\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\">{length} </label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input type=\"number\"value={seancesQuantity} className=\"form-control\" placeholder=\"...\" onChange={e => setSeancesQuantity(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Salles </label>\r\n              <div className=\"col-sm-9\">\r\n                  <Autocomplete\r\n                      multiple\r\n                      onChange={((event, value) =>  setActivity(value))} \r\n                      options={activities}\r\n                      id=\"size-small-standard-multi\"\r\n                      getOptionLabel={(option) =>  ( option['name'])}\r\n                      renderInput={(params) =>\r\n                  (<TextField {...params} name=\"salles\" label=\"Salles\" variant=\"outlined\" fullWidth />)}\r\n                  />\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row\">\r\n              <div className=\"col-sm-10\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default AbonnementCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\configuration\\AbonnementEditModal.jsx",["1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Table } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\n\r\nconst AbonnementEditModal = ({show, onShowShange, abonnementData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    // const abonnementEditEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n    // const creneauPerAbonnementEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/`\r\n\r\nconst [name, setName] = useState('')\r\nconst [price, setPrice] = useState('')\r\nconst [numberOfDays, setNumberOfDays] = useState('')\r\nconst [seancesQuantity, setSeancesQuantity] = useState('')\r\nconst [activity, setActivity] = useState([])\r\nconst [systemeCochage, setSystemeCochage] = useState(false)\r\n\r\nconst [numOfWeek, setNumOfWeek] = useState(\"\")\r\nconst [AlertSuccess, setAlertSuccess] = useState(false);\r\nconst [AlertError, setAlertError] = useState(false);\r\nconst [abonnementId, setAbonnementId] = useState();\r\nconst [abonnementDetail, setAbonnementDetail] = useState();\r\nconst [selectedActivities, setSelectedActivities] = useState([])\r\nconst [abnIndex, setAbnIndex] = useState([])\r\nconst [showModal, setShowModal]  = useState(false)\r\nconst [duree, setDuree] = useState('')\r\nconst [helpText, setHelpText] = useState(\"Abonnement limité par un nombre d'heures\")\r\nconst [length, setLength] = useState(\"Nombre d'heures\")\r\nconst [displayLength, setDisplayLength] = useState(true)\r\nconst [typeOfValue, setTypeOfValue] = useState(\"\")\r\nconst abonnementEditEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/${abonnementData['abonnementId']}/`\r\nconst abonnementDeleteEND = `${process.env.REACT_APP_API_URL}/rest-api/abonnement/delete/${abonnementData['abonnementId']}/`\r\n// setSelectedActivities(abonnementData['selectedActivities'])\r\n// const provArray = []\r\n\r\nconst DureeAb = [\r\n  {mois :'1 Jour', jours : 1},\r\n  {mois :'15 Jour', jours : 15},\r\n  {mois :'45 Jour', jours : 45},\r\n  {mois :'1 mois', jours : 30},\r\n  {mois :'2 mois', jours : 60},\r\n  {mois :'3 mois', jours : 90},\r\n  {mois :'4 mois', jours : 120},\r\n  {mois :'6 mois', jours : 180},\r\n  {mois :'12 mois', jours : 360},\r\n]\r\n\r\nuseEffect(() => {\r\n    if (selectedActivities !== [] ) {\r\n     setShowModal(true)   \r\n    }\r\n  if (show == true) {\r\n    api.get(abonnementEditEND).then(res => {\r\n      setName(res.data.name)\r\n      setPrice(res.data.price)\r\n      setNumberOfDays(res.data.number_of_days)\r\n      setSeancesQuantity(res.data.seances_quantity)\r\n      setSystemeCochage(res.data.systeme_cochage)\r\n      setAbnIndex(abonnementData['dureeInd'])\r\n      setActivity(abonnementData['selectedActivities'])\r\n      setTypeOfValue(res.data.type_of)\r\n      if (res.data.type_of === \"VH\") {\r\n        setLength(\"Nombre d'heures\")\r\n      } else {\r\n        setLength(\"Nombre de séances\")\r\n      }\r\n    })\r\n  }\r\n}, [abonnementData['abonnementId']]);\r\n    const handleDelete = e => {\r\n        api.delete(abonnementDeleteEND).then(\r\n            // refreshPage(),\r\n            notifySuccess('Abonnement supprimé'),\r\n            handleShow()\r\n        )\r\n    }\r\n    const handleTypeOfValueChange = (event) => {\r\n      setTypeOfValue(event.target.value)\r\n    }\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n        for (let i = 0; i < activity.length; i++) {\r\n            selectedActivities.push(activity[i]['id'])\r\n        }\r\n        const abonnementFormData = {\r\n          name              : name,\r\n          price             : price,\r\n          seances_quantity  : Number(seancesQuantity),\r\n          salles          : selectedActivities,\r\n          systeme_cochage : systemeCochage,\r\n          length    : Number(duree),\r\n          type_of : typeOfValue\r\n      }\r\n      const response = await api.put(abonnementEditEND, abonnementFormData).then(res => {\r\n            setSelectedActivities([])\r\n            notifySuccess('Modifictation de labonnement effectué')\r\n            handleShow()\r\n          } ).catch( err => {\r\n            notifyError('erreur de modification')\r\n         })\r\n    }\r\n\r\n\r\nreturn ( \r\n    <Modal  className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className='text-black'>{name}</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span> </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group row\">\r\n            <label className=\"col-sm-3 col-form-label\">Type d'abonnement </label>\r\n              <div className=\"col-sm-9\">\r\n              <small className=\"m-0 text-success\" htmlFor=\"\">{helpText}</small>\r\n\r\n              <RadioGroup row aria-label=\"position\" name=\"position\" value={typeOfValue} onChange={handleTypeOfValueChange}>\r\n                <FormControlLabel\r\n                    value=\"VH\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Volume Horaire\"\r\n                    labelPlacement=\"start\"\r\n                    selected={true}\r\n                    onClick={e => {\r\n                        setLength(\"Nombre d'heures\")\r\n                        // setTypeOfValue(e => )\r\n                        setDisplayLength(true)\r\n                        setHelpText(\"Abonnement limité par un nombre d'heures\")\r\n                    }}\r\n                />\r\n                <FormControlLabel\r\n                    value=\"SF\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Seances Fix\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={e => {\r\n                        setLength(\"Nombre  de séances\")\r\n                        setDisplayLength(true)\r\n                        setHelpText(\"Abonnement limité par un nombre de seance et des horaires fix\")\r\n                    }}\r\n                />\r\n                <FormControlLabel\r\n                    value=\"SL\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Seances Libre\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={e => {\r\n                        setLength(\"Nombre  de séances\")\r\n                        setDisplayLength(true)\r\n                        setHelpText(\"Abonnement limité par un nombre de seance avec des horaires fléxible\")\r\n                    }}\r\n                />\r\n              </RadioGroup>\r\n                  {/* <FormControlLabel\r\n                    value=\"AL\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Accés Libre\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={e => {\r\n                        setDisplayLength(false)\r\n                        setHelpText(\"Abonnement limité uniquement par sa date\")\r\n                    }}\r\n                /> */}\r\n              </div>\r\n\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Nom </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"text\" value={name} className=\"form-control\" placeholder=\"...\" onChange={e => setName(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Prix </label>\r\n              <div className=\"col-sm-9\">\r\n                  <input type=\"number\"value={price} className=\"form-control\" placeholder=\"...\" onChange={e => setPrice(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n       \r\n            <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\">Durée </label>\r\n                <div className=\"form-group col-sm-9\">\r\n                    <Autocomplete\r\n                        onChange={(event, value) => {\r\n                          try {\r\n                            setDuree(value.jours)\r\n                        } catch (error) {\r\n                            setDuree('')\r\n                        }}\r\n                        }\r\n                        defaultValue={DureeAb[abonnementData['dureeInd']]}\r\n                        options={DureeAb}\r\n                        getOptionLabel={(option) =>  option['mois']}\r\n                        renderInput={(params) => <TextField {...params} label=\"Mois\" variant=\"outlined\" />}\r\n                        />\r\n                </div>\r\n            </div>\r\n            {\r\n                displayLength &&\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\">{length} </label>\r\n                    <div className=\"col-sm-9\">\r\n                        <input type=\"number\"value={seancesQuantity} className=\"form-control\" placeholder=\"...\" onChange={e => setSeancesQuantity(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n          <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Salles </label>\r\n              <div className=\"col-sm-9\">\r\n                  <Autocomplete\r\n                      multiple\r\n                      onChange={((event, value) =>  \r\n                        {\r\n                        setActivity(value)\r\n                        console.log('the valueee', value);\r\n                    }\r\n                        )} \r\n                      value={activity}\r\n                      options={abonnementData['salles']}\r\n                      id=\"size-small-standard-multi\"\r\n                      getOptionLabel={(option) =>  ( option['name'])}\r\n                      renderInput={(params) =>\r\n                  (<TextField {...params} name=\"salles\" label=\"Salles\" variant=\"outlined\" fullWidth />)}\r\n                />\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group row d-flex justify-content-between\">\r\n                <div className=\"m-3\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Valider\r\n                  </button>\r\n                </div>\r\n                <div className=\"m-3\">\r\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={ async () => {\r\n                    await api.get(`${process.env.REACT_APP_API_URL}/rest-api/abonnement/deativate/${abonnementData['abonnementId']}/`)\r\n                    handleShow()\r\n                    }}>Supprimer</button>\r\n                </div>\r\n          </div>\r\n      </form>\r\n     </Modal.Body>\r\n\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default AbonnementEditModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\SideBar.js",["1168","1169","1170","1171","1172","1173","1174","1175","1176"],"C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\planning\\CreneauCreateModal.jsx",["1177","1178","1179","1180","1181","1182","1183"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Row, Card, Col, Button, Modal, Container } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import { Dropdown, Tab, Nav } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\nconst PaiementCreateModal = ({show, onShowShange, creneauData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n    const creneauCreateEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/create/`\r\n\r\n    const [newActivity, setNewActivity] = useState(\"\")\r\n    const [newCoach, setNewCoach] = useState(\"\")\r\n    const [newStartHour, setNewStartHour] = useState(\"\")\r\n    const [newEndHour, setNewEndHour] = useState(\"\")\r\n    const [newDay, setNewDay] = useState(\"\")\r\n    const [newPlanning, setNewPlanning] = useState(\"\")\r\n\r\n    const [newActivityError, setNewActivityError ] = useState(false)\r\n    // const [newCoachError, setNewCoachError ] = useState(false)\r\n    const [newDayError, setNewDayError ] = useState(false)\r\n    const [newPlanningError, setNewPlanningError ] = useState(false)\r\n    const [removeColor, setRemoveColor ] = useState(true)\r\n    const [color, setColor] = useState(\"\")\r\n    const [name,setName] = useState(\"\")\r\n\r\n\r\n    const days = creneauData['days']\r\n    const activities = creneauData['activities']  \r\n    const coachs =  creneauData['coachs']\r\n\r\n    const plannings = creneauData['plannings']  \r\n\r\n    const handleValidation = () => {\r\n      let errors = {};\r\n      let formIsValid = true;\r\n\r\n      //Name\r\n      if(!newActivity){\r\n          formIsValid = false;\r\n          setNewActivityError(true)\r\n        }\r\n\r\n\r\n     \r\n      if(!newDay){\r\n          formIsValid = false;\r\n          setNewDayError(true)\r\n        }\r\n      if(!newPlanning){\r\n          formIsValid = false;\r\n          setNewPlanningError(true)\r\n        }\r\n    //  setErrors({errors: errors});\r\n     console.log('IS THE FORM VALID ======?', formIsValid);\r\n     return formIsValid;\r\n }\r\n\r\nconst handleSubmit = e => {\r\n  e.preventDefault();\r\n  if (handleValidation()) {\r\n    const newCreneau = {\r\n      hour_start :newStartHour,\r\n      hour_finish :newEndHour,\r\n      day :newDay,\r\n      coach :newCoach,\r\n      planning :newPlanning,\r\n      activity :newActivity,\r\n    }\r\n    if(removeColor) {\r\n      newCreneau.color = \" \"\r\n    }else {\r\n        newCreneau.color = color\r\n    }\r\n    console.log(\" =================> new Creneau \", newCreneau);\r\n    api.post(creneauCreateEND, newCreneau).then( res => {\r\n      notifySuccess('Créneau creer avec succés')\r\n          handleShow()\r\n      }).catch(err => {\r\n          notifyError(\"Erreur lors de la création du créneau\")\r\n      })\r\n  }}\r\n    \r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"lg\" onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className=\"text-black\">Créneau</Modal.Title>\r\n      <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span> </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"form-row\">\r\n        <div className=\"form-group col-md-6\">\r\n                              <TextField\r\n                                 type=\"text\"\r\n                                 defaultValue={name}\r\n                                 label=\"Nom du créneau\"\r\n                                 variant=\"outlined\"\r\n                                 onChange={e=> setName(e.currentTarget.value)}\r\n                                 // onChange={(event, value) => setNewStartHour(value)}\r\n                                 fullWidth\r\n                              />\r\n                           </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              // id={(option) =>  option['id']}\r\n              onChange={(event, value) => \r\n                {try {\r\n                  setNewActivity(value.id)\r\n                  setNewActivityError(false)\r\n                } catch (error) {\r\n                  setNewActivity('')\r\n                  setNewActivityError(true)\r\n                }}\r\n               \r\n                }\r\n              // onChange={handleSubmit}\r\n              options={activities}\r\n              getOptionSelected={(option) =>  option['id']}\r\n              getOptionLabel={(option) =>  option['name']}\r\n              renderInput={(params) => <TextField {...params}  label=\"Activité\" name=\"activity\" variant=\"outlined\" fullWidth />}\r\n            />\r\n           {newActivityError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir une activité </span> }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <Autocomplete\r\n            onChange={(event, value) =>\r\n              {\r\n                try {\r\n                setNewCoach(value.id)\r\n                // setNewCoachError(false)\r\n              } catch (error) {\r\n                setNewCoach('')\r\n                // setNewCoachError(true)\r\n              }}\r\n              }\r\n            options={coachs}\r\n            getOptionLabel={(option) =>  option['last_name']}\r\n            renderInput={(params) => <TextField {...params} label=\"Coach\" variant=\"outlined\" />}\r\n            />\r\n            {/* {newCoachError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un coach </span> } */}\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <Autocomplete\r\n              onChange={(event, value) => \r\n                {\r\n                  try {\r\n                    setNewPlanning(value.id)\r\n                    setNewPlanningError(false)\r\n                } catch (error) {\r\n                    setNewPlanning('')\r\n                    setNewPlanningError(true)\r\n                }}\r\n              }\r\n              options={plannings}\r\n              getOptionLabel={(option) =>  option['name']}\r\n              renderInput={(params) => <TextField {...params} label=\"Planning\" variant=\"outlined\" />}\r\n              />\r\n              {newPlanningError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un planning</span> }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <Autocomplete\r\n            onChange={(event, value) => {\r\n              try {\r\n                setNewDay(value.day)\r\n                setNewDayError(false)\r\n              } catch (error) {\r\n                setNewDay('')\r\n                setNewDayError(true)\r\n              }}\r\n              }\r\n            options={days}\r\n            getOptionLabel={(option) =>  option['label']}\r\n            renderInput={(params) => <TextField {...params} label=\"Jour\" variant=\"outlined\" />}\r\n            />\r\n            {newDayError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un jour </span> }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <TextField\r\n            type=\"time\"\r\n            required\r\n          //   defaultValue={startHour}\r\n            label=\"Heure de Début\"\r\n            variant=\"outlined\"\r\n            onChange={e=> \r\n              {\r\n                try {\r\n                setNewStartHour(e.currentTarget.value)\r\n              } catch (error) {\r\n                setNewStartHour('')\r\n              }}\r\n             \r\n              }\r\n            // onChange={(event, value) => setNewStartHour(value)}\r\n            fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n          <TextField\r\n            type=\"time\"\r\n          //   defaultValue={endHour}\r\n            // value={creneauDetail.hour_finish}\r\n            // className={classes.textField}\r\n            variant=\"outlined\"\r\n            label=\"Heure de Fin\"\r\n              required\r\n            fullWidth\r\n            // defaultValue={coachs[coach]}\r\n            onChange={e => \r\n              {\r\n                try {\r\n                setNewEndHour(e.currentTarget.value)\r\n              } catch (error) {\r\n                setNewEndHour('')\r\n              }}\r\n              }\r\n          />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n                              <TextField\r\n                                 type=\"color\"\r\n                                //  defaultValue={creneauColor}\r\n                                 padding=\"none\"\r\n                                 label=\"couleur du créneau\"\r\n                                 variant=\"outlined\"\r\n                                 onChange={e=> {\r\n                                    setColor(e.currentTarget.value)\r\n                                 }}\r\n                                 // onChange={(event, value) => setNewStartHour(value)}\r\n                                 fullWidth\r\n                              />\r\n                              <FormControlLabel\r\n                                 control={\r\n                                    <Checkbox\r\n                                       checked={removeColor}\r\n                                       onChange={e=> {\r\n                                          setRemoveColor(!removeColor)\r\n                                          console.log('target value', e.target.value);\r\n                                       }}\r\n\r\n                                       name=\"checkedB\"\r\n                                       color=\"primary\"\r\n                                    />\r\n                                 }\r\n                                 label=\"Désactivé la couleur du créneau\"\r\n                              />\r\n                                                   \r\n                           </div>\r\n        </div>\r\n        <Button onClick={handleShow}variant=\"danger light\"className='m-2'>\r\n            Fermer\r\n        </Button>\r\n        <Button variant=\"primary\" type=\"submit\">Sauvgarder</Button>\r\n        </form>\r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default PaiementCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\planning\\CreneauEditModal.jsx",["1184","1185","1186","1187","1188","1189","1190","1191","1192"],"import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport { Row, Card, Col, Button, Modal, Tab, Nav } from \"react-bootstrap\";\r\n \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAxios from \"../useAxios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {notifySuccess, notifyError} from '../Alert'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nconst CreneauCreateModal = ({show, onShowShange, creneauData}) => {\r\n  const api = useAxios();\r\n  const handleShow = useCallback( () => {onShowShange(false)}, [onShowShange])\r\n\r\n    let creneauUpdateEND = `${process.env.REACT_APP_API_URL}/rest-api/creneau/${creneauData['creneauId']}/`\r\n    const creneauDetailEnd = `${process.env.REACT_APP_API_URL}/rest-api/abc-by-creneau?cr=${creneauData['creneauId']}`\r\n    const activities = creneauData['activities']  \r\n    const coachs =  creneauData['coachs']\r\n    const creneauCoach = creneauData['coach'] \r\n    const creneauActivite = creneauData['activite'] \r\n    const plannings = creneauData['plannings']  \r\n    const creneauPlanning = creneauData['planning']\r\n    const days = creneauData['days']\r\n    const day = creneauData['day']\r\n    const clients = creneauData['clients']\r\n    const [abc, setAbc] = useState([])\r\n    const startHour = creneauData['startHour']\r\n    const endHour = creneauData['endHour']\r\n    const coachName = creneauData['coachName']\r\n    const creneauName = creneauData['creneauName']\r\n    const creneauColor = creneauData['creneauColor']\r\n    const activityName = creneauData['activityName']\r\n    const jour = creneauData['jour']\r\n    const creneau = creneauData['creneau']\r\n    // const [newActivity, setNewActivity] = useState(activities[creneauActivite].id)\r\n    // const [newCoach, setNewCoach] = useState(coachs[creneauCoach].id)\r\n    // const [newStartHour, setNewStartHour] = useState(startHour)\r\n    // const [newEndHour, setNewEndHour] = useState(endHour)\r\n    // const [newDay, setNewDay] = useState(days[day].day)\r\n    // const [newPlanning, setNewPlanning] = useState(plannings[creneauPlanning].id)\r\n\r\n    const [newActivity, setNewActivity] = useState(creneauActivite)\r\n    const [newCoach, setNewCoach] = useState(\"\")\r\n    const [name,setName] = useState(\"\")\r\n    const [newStartHour, setNewStartHour] = useState(\"\")\r\n    const [newEndHour, setNewEndHour] = useState(\"\")\r\n    const [newDay, setNewDay] = useState(\"\")\r\n    const [newPlanning, setNewPlanning] = useState(\"\")\r\n    const [color, setColor] = useState(\"\")\r\n    \r\n    const [newActivityError, setNewActivityError ] = useState(false)\r\n    const [newCoachError, setNewCoachError ] = useState(false)\r\n    const [newDayError, setNewDayError ] = useState(false)\r\n    const [newPlanningError, setNewPlanningError ] = useState(false)\r\n    const [removeColor, setRemoveColor ] = useState(false)\r\n\r\n    \r\n    useEffect(() => {\r\n      // api.get(creneauDetailEND).then((res) => {\r\n      //   setCreneauDetail(res.data)\r\n      //   console.log(res.data);\r\n      if (creneauData['creneauId']) {\r\n        setNewActivity(activities[creneauActivite].id)\r\n        try {\r\n           setNewCoach(coachs[creneauCoach].id)\r\n         } catch (error) {\r\n           setNewCoach(coachs[creneauCoach])\r\n        }\r\n        setNewStartHour(startHour)\r\n        setNewStartHour(startHour)\r\n        setNewEndHour(endHour)\r\n        setNewDay(days[day].day)\r\n        setNewPlanning(plannings[creneauPlanning].id)\r\n        setName(creneauName)\r\n        setColor(creneauColor)\r\n        if (creneauColor) {\r\n           setRemoveColor(removeColor)\r\n        } else {\r\n           setRemoveColor(!removeColor)\r\n        }\r\n        console.log('la couleur du creneau getted creneauName=>',creneauName);\r\n        console.log('la couleur du creneau getted setName=>',name);\r\n      }\r\n    }, [creneauData['creneauId']])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      api.get(creneauDetailEnd).then(res => {\r\n         setAbc(res.data)\r\n         console.log('les abc dee ce creneau sotn ', res.data);\r\n      })\r\n    }, [creneauData['creneauId']]);\r\n\r\n    // }, [creneauData['creneauId']]);\r\n\r\n    const handleValidation = () => {\r\n      let formIsValid = true;\r\n      //Name\r\n      if(!newActivity){\r\n          formIsValid = false;\r\n          setNewActivityError(true)\r\n        }\r\n\r\n      if(!newDay){\r\n          formIsValid = false;\r\n          setNewDayError(true)\r\n        }\r\n      if(!newPlanning){\r\n          formIsValid = false;\r\n          setNewPlanningError(true)\r\n        }\r\n\r\n    //  setErrors({errors: errors});\r\n   //   console.log('IS THE FORM VALID ======?', formIsValid);\r\n     return formIsValid;\r\n }\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if (handleValidation()) {\r\n         const newCreneau = {\r\n            hour_start :newStartHour,\r\n            hour_finish :newEndHour,\r\n            day :newDay,\r\n            coach :newCoach,\r\n            planning :newPlanning,\r\n            name :name,\r\n            activity :newActivity,\r\n         }\r\n         // color :color,\r\n      if( removeColor) {\r\n         newCreneau.color = \" \"\r\n      }else {\r\n         newCreneau.color = color\r\n      }\r\n       console.log(\" =================> new Creneau \", newCreneau);\r\n      api.put(creneauUpdateEND, newCreneau).then( res => {\r\n         \r\n      notifySuccess('Créneau modifier avec succés')\r\n          handleShow()\r\n      }).catch(err => {\r\n          notifyError(\"Erreur lors de la modification du Créneau\")\r\n      })\r\n   }\r\n}\r\nreturn ( \r\n    <Modal className=\"fade bd-example-modal-lg\" size=\"xl\"onHide={handleShow} show={show}>\r\n    <Modal.Header>\r\n      <Modal.Title className=\"text-black\">\r\n         <div className=\"row d-flex justify-content-end\">\r\n            <div className='row d-flex col-md-11'>\r\n               <div className='col-3'>\r\n                  <span className=\"text-primary\">Coach: </span> {coachName}  \r\n               </div>\r\n               <div className='col-2'>\r\n                  <span className=\"text-primary\">Jour: </span> {jour} \r\n               </div>\r\n               <div className='col-2'>\r\n                  <span className=\"text-primary\">HD: </span> {startHour} \r\n               </div>\r\n               <div className='col-2'>\r\n                  <span className=\"text-primary\">HF: </span> {endHour} \r\n               </div>\r\n               <div className='col-3'>\r\n               <span className=\"text-primary\">Activité: </span> {activityName} \r\n               </div>\r\n            </div>\r\n         </div>\r\n      </Modal.Title>\r\n      <Modal.Title>\r\n      <div className='col-1'> \r\n               <Button variant=\"\" className=\"close\" onClick={handleShow} > <span>&times;</span> </Button>\r\n            </div>\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <div>\r\n      <div className=\"col-xl-12 col-lg-6\">\r\n         <div className=\"card\" style={{backgroundColor: '#ffffff'}}>\r\n            <Tab.Container defaultActiveKey=\"monthly\">\r\n               <div className=\"card-header border-0 d-xl-flex d-lg-block d-md-flex d-sm-flex d-block\">\r\n                  <div className=\"mr-2\">\r\n                     <h4 className=\"fs-20 text-black\">Fiche Créneau</h4>\r\n                  </div>\r\n                  <div className=\"card-action card-tabs mt-3 mt-sm-0\">\r\n                     <Nav className=\"nav nav-tabs\" role=\"tablist\">\r\n                        <Nav.Item>\r\n                           <Nav.Link className=\"nav-link\" data-toggle=\"tab\" eventKey=\"monthly\" role=\"tab\" aria-selected=\"true\" > Detail </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                           <Nav.Link className=\"nav-link\" data-toggle=\"tab\" eventKey=\"Weekly\" role=\"tab\" aria-selected=\"false\" > Abonnées </Nav.Link>\r\n                        </Nav.Item>\r\n                     </Nav>\r\n                  </div>\r\n               </div>\r\n               <div className=\"card-body p-0 tab-content card-table\">\r\n                  <Tab.Content>\r\n                        {/* CRENEAUX DETAIL TAB */}\r\n                     <Tab.Pane eventKey=\"monthly\">\r\n                        {/* <div className=\"table-responsive m-2\"> */}\r\n                           {/* <table className=\"table\">\r\n                           <tbody> */}\r\n                     <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-row\">\r\n                           <div className=\"form-group col-md-6\">\r\n                              <TextField\r\n                                 type=\"text\"\r\n                                 defaultValue={name}\r\n                                 label=\"Nom du créneau\"\r\n                                 variant=\"outlined\"\r\n                                 onChange={e=> setName(e.currentTarget.value)}\r\n                                 // onChange={(event, value) => setNewStartHour(value)}\r\n                                 fullWidth\r\n                              />\r\n                           </div>\r\n                           <div className=\"form-group col-md-6\">\r\n                              <Autocomplete\r\n                                 // id={(option) =>  option['id']}\r\n                                 \r\n                                 //  {try {\r\n                                    //    setNewActivity(value.id)\r\n                                    //    setNewActivityError(false)\r\n                                    //  } catch (error) {\r\n                                       //    setNewActivity('')\r\n                                       //    setNewActivityError(true)\r\n                                       //  }}\r\n                                       // onChange={handleSubmit}\r\n                                 options={activities}\r\n                                 defaultValue={activities[creneauActivite]}\r\n                                 onChange={(event, value) =>  \r\n                                    {try {\r\n                                    setNewActivity(value.id)\r\n                                    setNewActivityError(false)\r\n                                    } catch (error) {\r\n                                       setNewActivity('')\r\n                                       setNewActivityError(true)\r\n                                       }}\r\n                                    }\r\n                                 getOptionSelected={(option) =>  option['id']}\r\n                                 getOptionLabel={(option) =>  option['name']}\r\n                                 renderInput={(params) => <TextField {...params}  label=\"Activité\" variant=\"outlined\" fullWidth />}\r\n                              />\r\n                                 {newActivityError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir une activité </span> }\r\n                           </div>\r\n                           <div className=\"form-group col-md-6\">\r\n                           <Autocomplete\r\n                              onChange={(event, value) =>{\r\n                              try {\r\n                                 setNewCoach(value.id)\r\n                                 setNewCoachError(false)\r\n                                 } catch (error) {\r\n                                 setNewCoach('')\r\n                                 setNewCoachError(true)\r\n                                 }}\r\n                              }\r\n                              options={coachs}\r\n                              defaultValue={coachs[creneauCoach]}\r\n                              getOptionLabel={(option) =>  option['first_name']}\r\n                              renderInput={(params) => <TextField {...params} label=\"Coach\" variant=\"outlined\" />}\r\n                           />\r\n                              {newCoachError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un coach </span> }\r\n                           </div>\r\n                           <div className=\"form-group col-md-6\">\r\n                              <Autocomplete\r\n                                 onChange={(event, value) =>   {\r\n                                 try {\r\n                                 setNewPlanning(value.id)\r\n                                 setNewPlanningError(false)\r\n                                 } catch (error) {\r\n                                 setNewPlanning('')\r\n                                 setNewPlanningError(true)\r\n                                 }}\r\n                                 }\r\n                                 options={plannings}\r\n                                 defaultValue={plannings[creneauPlanning]}\r\n                                 getOptionLabel={(option) =>  option['name']}\r\n                                 renderInput={(params) => <TextField {...params} label=\"Planning\" variant=\"outlined\" />}\r\n                              />\r\n                              {newPlanningError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un planning</span>}\r\n                           </div>\r\n                           <div className=\"form-group col-md-6\">\r\n                           <Autocomplete\r\n                              onChange={(event, value) => {\r\n                              try {\r\n                                 setNewDay(value.day)\r\n                              setNewDayError(false)\r\n                              } catch (error) {\r\n                              setNewDay('')\r\n                              setNewDayError(true)\r\n                              }}\r\n                           \r\n                              }\r\n                              options={days}\r\n                              defaultValue={days[day]}\r\n                              getOptionLabel={(option) =>  option['label']}\r\n                              renderInput={(params) => <TextField {...params} label=\"Jour\" variant=\"outlined\" />}\r\n                           />\r\n                                       {newDayError &&  <span  style={{color:'#EF5350', fontSize : '14px'}}> Veuillez choisir un jour </span> }\r\n                           </div>\r\n                           <div className=\"form-group col-md-6\">\r\n                           <TextField\r\n                              type=\"time\"\r\n                              defaultValue={startHour}\r\n                              label=\"Heure de Début\"\r\n                              variant=\"outlined\"\r\n                              onChange={e=> setNewStartHour(e.currentTarget.value)}\r\n                              // onChange={(event, value) => setNewStartHour(value)}\r\n                              fullWidth\r\n                           />\r\n                           </div>\r\n                           \r\n                           <div className=\"form-group col-md-6\">\r\n                           <TextField\r\n                              type=\"time\"\r\n                              defaultValue={endHour}\r\n                              // value={creneauDetail.hour_finish}\r\n                              // className={classes.textField}\r\n                              variant=\"outlined\"\r\n                              label=\"Heure de Fin\"\r\n\r\n                              fullWidth\r\n                              // defaultValue={coachs[coach]}\r\n                              onChange={e => setNewEndHour(e.currentTarget.value)}\r\n                           />\r\n                           </div>\r\n                           <div className=\"form-group col-md-6\">\r\n                              <TextField\r\n                                 type=\"color\"\r\n                                 defaultValue={creneauColor}\r\n                                 padding=\"none\"\r\n                                 label=\"couleur du créneau\"\r\n                                 variant=\"outlined\"\r\n                                 onChange={e=> {\r\n                                    setColor(e.currentTarget.value)\r\n                                 }}\r\n                                 // onChange={(event, value) => setNewStartHour(value)}\r\n                                 fullWidth\r\n                              />\r\n                              <FormControlLabel\r\n                                 control={\r\n                                    <Checkbox\r\n                                       checked={removeColor}\r\n                                       onChange={e=> {\r\n                                          setRemoveColor(!removeColor)\r\n                                          console.log('target value', e.target.value);\r\n                                       }}\r\n\r\n                                       name=\"checkedB\"\r\n                                       color=\"primary\"\r\n                                    />\r\n                                 }\r\n                                 label=\"Désactivé la couleur du créneau\"\r\n                              />\r\n                                                   \r\n                           </div>\r\n                        </div>\r\n                           <div className=\"form-group row d-flex justify-content-between\">\r\n                              <div className=\"m-3\">\r\n                                 <Button variant=\"primary\" type=\"submit\">Sauvgarder</Button>\r\n                              </div>\r\n                              <div className=\"m-3\">\r\n                                 <Button variant=\"primary\" type=\"button\" className=\"btn btn-danger ml-auto\" onClick={ async () => {\r\n                                    await api.delete(`${process.env.REACT_APP_API_URL}/rest-api/creneau/delete/${creneauData['creneauId']}/`)\r\n                                    handleShow()\r\n                                 }}>Supprimer</Button>\r\n                              </div>\r\n                           </div>\r\n                     </form>\r\n                           {/* </tbody>\r\n\r\n                           </table> */}\r\n\r\n                        {/* </div> */}\r\n                     </Tab.Pane>\r\n                              {/* END CRENEAUX DETAIL TAB */}\r\n                              {/* CRENEAUX CLIENTS TAB */}\r\n                     <Tab.Pane eventKey=\"Weekly\">\r\n                        <div className=\"table-responsive\">\r\n                           <table className=\"table\">\r\n                           <thead>\r\n                              <tr>\r\n                                 <th className=\"customer_shop\"> ID </th>\r\n                                 <th>Nom - Prénom </th>\r\n                                 <th> Téléphone </th>\r\n                                 <th> Abonnement </th>\r\n                                 <th> éxpiration </th>\r\n                                 <th> Dettes </th>\r\n                                 <th className='text-right'>FA </th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                              {abc.map( ab => (\r\n                              <tr key={ab.id}>\r\n                                 <td>\r\n                                    <div className=\"media\">\r\n                                       <div className=\"media-body \">\r\n                                          <h5 className=\"font-w600 text-black\">\r\n                                             {ab.client_data.id}\r\n                                          </h5>\r\n                                       </div>\r\n                                    </div>\r\n                                 </td>\r\n                                 <td className=\"font-w600 \">\r\n                                 <Link className=\"btn-link text-primary float-left\" target=\"_blank\" to={`/client/${ab.client_data.id}`} >\r\n                                    {ab.client_data.last_name} {ab.client_data.first_name} \r\n                                 </Link>\r\n                                 </td>\r\n                                 <td className=\"font-w600 text-left\">\r\n                                    {ab.client_data.phone ? ab.client_data.phone : '-'}\r\n                                 </td>\r\n                                 <td className=\"font-w600 text-left\">\r\n                                    {ab.abonnement}\r\n                                 </td>\r\n                                 <td className=\"font-w600 text-left\">\r\n                                    {ab.end_date}\r\n                                 </td>\r\n                                 <td className=\"font-w600 text-danger\">\r\n                                    {ab.reste}\r\n                                 </td>\r\n                                 <td className={` ${ab.client_data.fin_assurance ? 'text-right' : 'text-right text-danger'}`}>\r\n                                    {ab.client_data.fin_assurance ? ab.client_data.fin_assurance : 'Non Payés'}\r\n                                 </td>\r\n                              </tr>\r\n                              \r\n                              ))}\r\n                              \r\n                           </tbody>\r\n                           </table>\r\n                        </div>\r\n                     </Tab.Pane>\r\n                              {/* END CRENEAUX CLIENTS TAB */}\r\n                     \r\n                  </Tab.Content>\r\n               </div>\r\n            </Tab.Container>\r\n         </div>\r\n      </div>\r\n   </div>\r\n     </Modal.Body>\r\n    </Modal>\r\n)\r\n\r\n}\r\nexport default CreneauCreateModal;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\components\\useAaxios.js",["1193","1194","1195"],"import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport useAxios from \"./useAxios\";\r\n\r\n\r\n\r\n const useAaxios = (url, method, payload) => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [transactionStatus, setTransactionStatus] = useState(null);\r\n    const [clientStatus, setClientStatus] = useState(null);\r\n     const [clientsStatus, setClientsStatus] = useState(null);\r\n    const [coachStatus, setCoachStatus] = useState(null);\r\n    const [personnelStatus, setPersonnelStatus] = useState(null);\r\n    const [presenceStatus, setPresenceStatus] = useState(null);\r\n    const [tresorieStatus, setTresorieStatus] = useState(null);\r\n    const [userStatus, setUserStatus] = useState(null);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    const api = useAxios();\r\n\r\n    // const controllerRef = useRef(new AbortController());\r\n    // const cancel = () => {\r\n    //     controllerRef.current.abort();\r\n    // };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const response = await api.request({\r\n                    data: payload,\r\n                    method,\r\n                    url,\r\n                })\r\n                setData(response.data);\r\n                setClientStatus(response.status);\r\n                setClientsStatus(response.status);\r\n                setClientsStatus(response.json);\r\n                setTransactionStatus(response.status);\r\n                setCoachStatus(response.status);\r\n                setPersonnelStatus(response.status);\r\n                setPresenceStatus(response.status);\r\n                setTresorieStatus(response.status);\r\n                setUserStatus(response.status);\r\n                console.log('client status', clientStatus);\r\n\r\n            } catch (error) {\r\n                setError(error.message);\r\n                console.log(error)\r\n                setClientStatus(error.response.status);\r\n                setClientsStatus(error.response.status);\r\n                setTransactionStatus(error.response.status);\r\n                setCoachStatus(error.response.status);\r\n                setPersonnelStatus(error.response.status);\r\n                setPresenceStatus(error.response.status);\r\n                setTresorieStatus(error.response.status);\r\n                setUserStatus(error.response.status);\r\n\r\n            } finally {\r\n                setLoaded(true);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n     return { data, error, loaded, clientStatus, clientsStatus, transactionStatus, coachStatus, personnelStatus, presenceStatus, tresorieStatus, userStatus };\r\n\r\n    \r\n    //  useEffect(() => {\r\n    //      api.get(url).then(res => {\r\n    //          setData(res.data);\r\n    //          setStatus(res.status);\r\n    //      }).catch(error => {\r\n    //          if (error.response) {\r\n    //             console.log(error.response.data);\r\n    //             console.log(error.response.status);\r\n    //             console.log(error.response.headers);\r\n    //             setError(error.message);\r\n    //             setStatus(error.response.status);\r\n    //         }\r\n    //      }).finally(() =>\r\n    //          setLoaded(true)\r\n    //      )\r\n    //  }, []);\r\n     \r\n\r\n    // return { data,error, loaded , status};\r\n\r\n};\r\n\r\nexport default useAaxios;","C:\\Users\\amd\\Desktop\\Octogym\\frontend\\src\\jsx\\layouts\\nav\\SbNavLinks.js",["1196"],"import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport './nv.css'\r\n\r\nfunction SbNavLinks({ LinkName, Icon, Name }) {\r\n  \r\n    return (\r\n        <>\r\n            <li>\r\n                <NavLink to={LinkName} activeClassName='activecn' activeStyle={{ background: \"#6418C3\", color: \"white\", borderRadius: '4px', textDecoration: \"none\" }}>\r\n                    <i className={`${Icon} activei`}></i> \r\n                    <span className=\"nav-text\">{Name}</span>\r\n                </NavLink>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SbNavLinks",{"ruleId":"1197","replacedBy":"1198"},{"ruleId":"1199","replacedBy":"1200"},{"ruleId":"1201","severity":1,"message":"1202","line":4,"column":50,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":58},{"ruleId":"1201","severity":1,"message":"1205","line":23,"column":8,"nodeType":"1203","messageId":"1204","endLine":23,"endColumn":15},{"ruleId":"1206","severity":1,"message":"1207","line":10,"column":11,"nodeType":"1208","messageId":"1209","endLine":10,"endColumn":69,"fix":"1210"},{"ruleId":"1201","severity":1,"message":"1211","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1212","line":3,"column":8,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1213","line":8,"column":9,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1214","line":10,"column":9,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1215","line":12,"column":26,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1216","line":22,"column":10,"nodeType":"1203","messageId":"1204","endLine":22,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1217","line":42,"column":26,"nodeType":"1203","messageId":"1204","endLine":42,"endColumn":43},{"ruleId":"1201","severity":1,"message":"1218","line":55,"column":10,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1219","line":56,"column":10,"nodeType":"1203","messageId":"1204","endLine":56,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1220","line":58,"column":8,"nodeType":"1203","messageId":"1204","endLine":58,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1221","line":58,"column":15,"nodeType":"1203","messageId":"1204","endLine":58,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1222","line":59,"column":8,"nodeType":"1203","messageId":"1204","endLine":59,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1223","line":59,"column":17,"nodeType":"1203","messageId":"1204","endLine":59,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1224","line":60,"column":17,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1226","line":68,"column":4,"nodeType":"1227","endLine":68,"endColumn":6,"suggestions":"1228"},{"ruleId":"1225","severity":1,"message":"1229","line":112,"column":6,"nodeType":"1227","endLine":112,"endColumn":8,"suggestions":"1230"},{"ruleId":"1231","severity":1,"message":"1232","line":115,"column":17,"nodeType":"1233","messageId":"1234","endLine":115,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1235","line":118,"column":4,"nodeType":"1227","endLine":118,"endColumn":15,"suggestions":"1236"},{"ruleId":"1231","severity":1,"message":"1232","line":120,"column":15,"nodeType":"1233","messageId":"1234","endLine":120,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1237","line":214,"column":13,"nodeType":"1203","messageId":"1204","endLine":214,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1238","line":17,"column":10,"nodeType":"1203","messageId":"1204","endLine":17,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1239","line":24,"column":6,"nodeType":"1227","endLine":24,"endColumn":8,"suggestions":"1240"},{"ruleId":"1225","severity":1,"message":"1241","line":60,"column":6,"nodeType":"1227","endLine":60,"endColumn":8,"suggestions":"1242"},{"ruleId":"1201","severity":1,"message":"1243","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":2,"column":20,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":2,"column":25,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":30,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1247","line":3,"column":16,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1248","line":26,"column":19,"nodeType":"1203","messageId":"1204","endLine":26,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1249","line":29,"column":11,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1250","line":29,"column":22,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1251","line":38,"column":11,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1252","line":38,"column":23,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1253","line":39,"column":11,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1254","line":39,"column":28,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1255","line":40,"column":11,"nodeType":"1203","messageId":"1204","endLine":40,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1256","line":40,"column":27,"nodeType":"1203","messageId":"1204","endLine":40,"endColumn":44},{"ruleId":"1201","severity":1,"message":"1257","line":41,"column":11,"nodeType":"1203","messageId":"1204","endLine":41,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1258","line":41,"column":25,"nodeType":"1203","messageId":"1204","endLine":41,"endColumn":40},{"ruleId":"1201","severity":1,"message":"1259","line":42,"column":11,"nodeType":"1203","messageId":"1204","endLine":42,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1260","line":42,"column":26,"nodeType":"1203","messageId":"1204","endLine":42,"endColumn":42},{"ruleId":"1201","severity":1,"message":"1261","line":43,"column":11,"nodeType":"1203","messageId":"1204","endLine":43,"endColumn":30},{"ruleId":"1201","severity":1,"message":"1262","line":43,"column":32,"nodeType":"1203","messageId":"1204","endLine":43,"endColumn":54},{"ruleId":"1225","severity":1,"message":"1263","line":75,"column":7,"nodeType":"1227","endLine":75,"endColumn":9,"suggestions":"1264"},{"ruleId":"1225","severity":1,"message":"1265","line":81,"column":7,"nodeType":"1227","endLine":81,"endColumn":9,"suggestions":"1266"},{"ruleId":"1201","severity":1,"message":"1267","line":86,"column":10,"nodeType":"1203","messageId":"1204","endLine":86,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1268","line":88,"column":10,"nodeType":"1203","messageId":"1204","endLine":88,"endColumn":30},{"ruleId":"1225","severity":1,"message":"1269","line":49,"column":6,"nodeType":"1227","endLine":49,"endColumn":8,"suggestions":"1270"},{"ruleId":"1201","severity":1,"message":"1271","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1215","line":8,"column":26,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1216","line":11,"column":10,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1273","line":11,"column":8,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1274","line":56,"column":8,"nodeType":"1227","endLine":56,"endColumn":10,"suggestions":"1275"},{"ruleId":"1231","severity":1,"message":"1232","line":69,"column":24,"nodeType":"1233","messageId":"1234","endLine":69,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1276","line":220,"column":8,"nodeType":"1227","endLine":220,"endColumn":10,"suggestions":"1277"},{"ruleId":"1201","severity":1,"message":"1278","line":237,"column":12,"nodeType":"1203","messageId":"1204","endLine":237,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1279","line":240,"column":11,"nodeType":"1203","messageId":"1204","endLine":240,"endColumn":13},{"ruleId":"1231","severity":1,"message":"1232","line":268,"column":29,"nodeType":"1233","messageId":"1234","endLine":268,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1273","line":9,"column":8,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1280","line":67,"column":7,"nodeType":"1227","endLine":67,"endColumn":17,"suggestions":"1281"},{"ruleId":"1231","severity":1,"message":"1232","line":79,"column":20,"nodeType":"1233","messageId":"1234","endLine":79,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1244","line":5,"column":10,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1282","line":5,"column":15,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1215","line":9,"column":26,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1283","line":10,"column":9,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1213","line":10,"column":24,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1284","line":36,"column":6,"nodeType":"1227","endLine":36,"endColumn":8,"suggestions":"1285"},{"ruleId":"1225","severity":1,"message":"1286","line":51,"column":6,"nodeType":"1227","endLine":51,"endColumn":29,"suggestions":"1287"},{"ruleId":"1288","severity":1,"message":"1289","line":103,"column":82,"nodeType":"1208","endLine":103,"endColumn":112},{"ruleId":"1288","severity":1,"message":"1289","line":111,"column":83,"nodeType":"1208","endLine":111,"endColumn":113},{"ruleId":"1201","severity":1,"message":"1243","line":6,"column":10,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":6,"column":20,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":6,"column":25,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1215","line":9,"column":26,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1213","line":10,"column":24,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1290","line":12,"column":8,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1291","line":13,"column":8,"nodeType":"1203","messageId":"1204","endLine":13,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1292","line":14,"column":10,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1293","line":99,"column":6,"nodeType":"1227","endLine":99,"endColumn":29,"suggestions":"1294"},{"ruleId":"1225","severity":1,"message":"1295","line":105,"column":6,"nodeType":"1227","endLine":105,"endColumn":29,"suggestions":"1296"},{"ruleId":"1225","severity":1,"message":"1297","line":119,"column":6,"nodeType":"1227","endLine":119,"endColumn":44,"suggestions":"1298"},{"ruleId":"1225","severity":1,"message":"1299","line":153,"column":6,"nodeType":"1227","endLine":153,"endColumn":44,"suggestions":"1300"},{"ruleId":"1288","severity":1,"message":"1289","line":263,"column":82,"nodeType":"1208","endLine":263,"endColumn":112},{"ruleId":"1288","severity":1,"message":"1289","line":271,"column":83,"nodeType":"1208","endLine":271,"endColumn":113},{"ruleId":"1201","severity":1,"message":"1215","line":8,"column":26,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1218","line":32,"column":10,"nodeType":"1203","messageId":"1204","endLine":32,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1301","line":32,"column":16,"nodeType":"1203","messageId":"1204","endLine":32,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1302","line":37,"column":24,"nodeType":"1203","messageId":"1204","endLine":37,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1226","line":43,"column":6,"nodeType":"1227","endLine":43,"endColumn":8,"suggestions":"1303"},{"ruleId":"1201","severity":1,"message":"1304","line":44,"column":9,"nodeType":"1203","messageId":"1204","endLine":44,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1305","line":30,"column":8,"nodeType":"1227","endLine":30,"endColumn":10,"suggestions":"1306"},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1246","line":5,"column":10,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":5,"column":15,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":5,"column":21,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1309","line":5,"column":34,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1310","line":5,"column":41,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1215","line":7,"column":26,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1283","line":9,"column":9,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1213","line":9,"column":24,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1311","line":54,"column":11,"nodeType":"1203","messageId":"1204","endLine":54,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1248","line":54,"column":19,"nodeType":"1203","messageId":"1204","endLine":54,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1312","line":60,"column":11,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1313","line":60,"column":21,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1314","line":64,"column":31,"nodeType":"1203","messageId":"1204","endLine":64,"endColumn":52},{"ruleId":"1201","severity":1,"message":"1315","line":65,"column":11,"nodeType":"1203","messageId":"1204","endLine":65,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1316","line":65,"column":25,"nodeType":"1203","messageId":"1204","endLine":65,"endColumn":40},{"ruleId":"1201","severity":1,"message":"1317","line":66,"column":11,"nodeType":"1203","messageId":"1204","endLine":66,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1318","line":66,"column":27,"nodeType":"1203","messageId":"1204","endLine":66,"endColumn":44},{"ruleId":"1201","severity":1,"message":"1319","line":69,"column":11,"nodeType":"1203","messageId":"1204","endLine":69,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1320","line":69,"column":20,"nodeType":"1203","messageId":"1204","endLine":69,"endColumn":30},{"ruleId":"1201","severity":1,"message":"1321","line":70,"column":11,"nodeType":"1203","messageId":"1204","endLine":70,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1322","line":70,"column":22,"nodeType":"1203","messageId":"1204","endLine":70,"endColumn":34},{"ruleId":"1225","severity":1,"message":"1323","line":88,"column":4,"nodeType":"1227","endLine":88,"endColumn":6,"suggestions":"1324"},{"ruleId":"1225","severity":1,"message":"1280","line":95,"column":4,"nodeType":"1227","endLine":95,"endColumn":52,"suggestions":"1325"},{"ruleId":"1326","severity":1,"message":"1327","line":208,"column":38,"nodeType":"1328","endLine":208,"endColumn":58},{"ruleId":"1225","severity":1,"message":"1280","line":40,"column":6,"nodeType":"1227","endLine":40,"endColumn":8,"suggestions":"1329"},{"ruleId":"1225","severity":1,"message":"1280","line":108,"column":4,"nodeType":"1227","endLine":108,"endColumn":6,"suggestions":"1330"},{"ruleId":"1225","severity":1,"message":"1331","line":145,"column":4,"nodeType":"1227","endLine":145,"endColumn":44,"suggestions":"1332"},{"ruleId":"1231","severity":1,"message":"1232","line":171,"column":21,"nodeType":"1233","messageId":"1234","endLine":171,"endColumn":23},{"ruleId":"1231","severity":1,"message":"1232","line":178,"column":20,"nodeType":"1233","messageId":"1234","endLine":178,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1246","line":5,"column":10,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":5,"column":15,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":5,"column":21,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1309","line":5,"column":34,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1310","line":5,"column":41,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1215","line":7,"column":26,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1283","line":9,"column":9,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1213","line":9,"column":24,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1311","line":55,"column":11,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1248","line":55,"column":19,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1312","line":61,"column":11,"nodeType":"1203","messageId":"1204","endLine":61,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1313","line":61,"column":21,"nodeType":"1203","messageId":"1204","endLine":61,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1314","line":65,"column":31,"nodeType":"1203","messageId":"1204","endLine":65,"endColumn":52},{"ruleId":"1201","severity":1,"message":"1317","line":66,"column":11,"nodeType":"1203","messageId":"1204","endLine":66,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1318","line":66,"column":27,"nodeType":"1203","messageId":"1204","endLine":66,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1323","line":84,"column":4,"nodeType":"1227","endLine":84,"endColumn":6,"suggestions":"1333"},{"ruleId":"1225","severity":1,"message":"1280","line":92,"column":4,"nodeType":"1227","endLine":92,"endColumn":52,"suggestions":"1334"},{"ruleId":"1326","severity":1,"message":"1327","line":195,"column":38,"nodeType":"1328","endLine":195,"endColumn":58},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1246","line":5,"column":10,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":5,"column":15,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":5,"column":21,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1309","line":5,"column":34,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1310","line":5,"column":41,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1215","line":7,"column":26,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1283","line":9,"column":9,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1213","line":9,"column":24,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1311","line":55,"column":11,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1248","line":55,"column":19,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1312","line":61,"column":11,"nodeType":"1203","messageId":"1204","endLine":61,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1313","line":61,"column":21,"nodeType":"1203","messageId":"1204","endLine":61,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1314","line":65,"column":31,"nodeType":"1203","messageId":"1204","endLine":65,"endColumn":52},{"ruleId":"1201","severity":1,"message":"1315","line":66,"column":11,"nodeType":"1203","messageId":"1204","endLine":66,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1316","line":66,"column":25,"nodeType":"1203","messageId":"1204","endLine":66,"endColumn":40},{"ruleId":"1201","severity":1,"message":"1317","line":67,"column":11,"nodeType":"1203","messageId":"1204","endLine":67,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1318","line":67,"column":27,"nodeType":"1203","messageId":"1204","endLine":67,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1323","line":87,"column":4,"nodeType":"1227","endLine":87,"endColumn":6,"suggestions":"1335"},{"ruleId":"1225","severity":1,"message":"1280","line":94,"column":4,"nodeType":"1227","endLine":94,"endColumn":52,"suggestions":"1336"},{"ruleId":"1326","severity":1,"message":"1327","line":206,"column":38,"nodeType":"1328","endLine":206,"endColumn":58},{"ruleId":"1201","severity":1,"message":"1243","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":2,"column":20,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":2,"column":25,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1211","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1337","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1338","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1339","line":73,"column":19,"nodeType":"1203","messageId":"1204","endLine":73,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1340","line":77,"column":12,"nodeType":"1203","messageId":"1204","endLine":77,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1341","line":79,"column":12,"nodeType":"1203","messageId":"1204","endLine":79,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1342","line":82,"column":12,"nodeType":"1203","messageId":"1204","endLine":82,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1343","line":83,"column":12,"nodeType":"1203","messageId":"1204","endLine":83,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1344","line":83,"column":27,"nodeType":"1203","messageId":"1204","endLine":83,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1280","line":104,"column":8,"nodeType":"1227","endLine":104,"endColumn":59,"suggestions":"1345"},{"ruleId":"1225","severity":1,"message":"1280","line":110,"column":8,"nodeType":"1227","endLine":110,"endColumn":63,"suggestions":"1346"},{"ruleId":"1225","severity":1,"message":"1280","line":116,"column":8,"nodeType":"1227","endLine":116,"endColumn":78,"suggestions":"1347"},{"ruleId":"1225","severity":1,"message":"1348","line":122,"column":8,"nodeType":"1227","endLine":122,"endColumn":19,"suggestions":"1349"},{"ruleId":"1225","severity":1,"message":"1280","line":135,"column":8,"nodeType":"1227","endLine":135,"endColumn":62,"suggestions":"1350"},{"ruleId":"1201","severity":1,"message":"1351","line":153,"column":11,"nodeType":"1203","messageId":"1204","endLine":153,"endColumn":27},{"ruleId":"1231","severity":1,"message":"1232","line":155,"column":25,"nodeType":"1233","messageId":"1234","endLine":155,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1352","line":202,"column":12,"nodeType":"1227","endLine":202,"endColumn":33,"suggestions":"1353"},{"ruleId":"1225","severity":1,"message":"1354","line":221,"column":10,"nodeType":"1227","endLine":221,"endColumn":77,"suggestions":"1355"},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1356","line":41,"column":28,"nodeType":"1203","messageId":"1204","endLine":41,"endColumn":47},{"ruleId":"1225","severity":1,"message":"1357","line":48,"column":8,"nodeType":"1227","endLine":48,"endColumn":10,"suggestions":"1358"},{"ruleId":"1201","severity":1,"message":"1359","line":52,"column":10,"nodeType":"1203","messageId":"1204","endLine":52,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1216","line":7,"column":10,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1360","line":24,"column":10,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1361","line":27,"column":10,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1362","line":27,"column":22,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1305","line":34,"column":6,"nodeType":"1227","endLine":34,"endColumn":8,"suggestions":"1363"},{"ruleId":"1225","severity":1,"message":"1364","line":49,"column":6,"nodeType":"1227","endLine":49,"endColumn":8,"suggestions":"1365"},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1216","line":18,"column":10,"nodeType":"1203","messageId":"1204","endLine":18,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1366","line":39,"column":11,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1367","line":39,"column":22,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1368","line":40,"column":11,"nodeType":"1203","messageId":"1204","endLine":40,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1369","line":40,"column":20,"nodeType":"1203","messageId":"1204","endLine":40,"endColumn":30},{"ruleId":"1201","severity":1,"message":"1314","line":42,"column":31,"nodeType":"1203","messageId":"1204","endLine":42,"endColumn":52},{"ruleId":"1225","severity":1,"message":"1370","line":57,"column":4,"nodeType":"1227","endLine":57,"endColumn":27,"suggestions":"1371"},{"ruleId":"1231","severity":1,"message":"1232","line":89,"column":24,"nodeType":"1233","messageId":"1234","endLine":89,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1244","line":8,"column":20,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":8,"column":25,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1246","line":10,"column":3,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":6},{"ruleId":"1201","severity":1,"message":"1308","line":11,"column":3,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":6},{"ruleId":"1201","severity":1,"message":"1372","line":14,"column":3,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":8},{"ruleId":"1201","severity":1,"message":"1373","line":15,"column":3,"nodeType":"1203","messageId":"1204","endLine":15,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1374","line":18,"column":8,"nodeType":"1203","messageId":"1204","endLine":18,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1290","line":19,"column":8,"nodeType":"1203","messageId":"1204","endLine":19,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1291","line":20,"column":8,"nodeType":"1203","messageId":"1204","endLine":20,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1292","line":21,"column":10,"nodeType":"1203","messageId":"1204","endLine":21,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1375","line":81,"column":11,"nodeType":"1203","messageId":"1204","endLine":81,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1376","line":81,"column":28,"nodeType":"1203","messageId":"1204","endLine":81,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1377","line":86,"column":11,"nodeType":"1203","messageId":"1204","endLine":86,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1378","line":86,"column":28,"nodeType":"1203","messageId":"1204","endLine":86,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1379","line":87,"column":11,"nodeType":"1203","messageId":"1204","endLine":87,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1380","line":87,"column":26,"nodeType":"1203","messageId":"1204","endLine":87,"endColumn":42},{"ruleId":"1225","severity":1,"message":"1381","line":186,"column":6,"nodeType":"1227","endLine":186,"endColumn":29,"suggestions":"1382"},{"ruleId":"1225","severity":1,"message":"1383","line":198,"column":6,"nodeType":"1227","endLine":198,"endColumn":62,"suggestions":"1384"},{"ruleId":"1225","severity":1,"message":"1385","line":212,"column":6,"nodeType":"1227","endLine":212,"endColumn":98,"suggestions":"1386"},{"ruleId":"1387","severity":1,"message":"1388","line":212,"column":6,"nodeType":"1227","messageId":"1389","endLine":212,"endColumn":98},{"ruleId":"1225","severity":1,"message":"1381","line":224,"column":6,"nodeType":"1227","endLine":224,"endColumn":96,"suggestions":"1390"},{"ruleId":"1225","severity":1,"message":"1391","line":232,"column":7,"nodeType":"1392","endLine":239,"endColumn":2},{"ruleId":"1288","severity":1,"message":"1289","line":363,"column":83,"nodeType":"1208","endLine":363,"endColumn":114},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1215","line":5,"column":26,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1211","line":8,"column":10,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1393","line":23,"column":8,"nodeType":"1203","messageId":"1204","endLine":23,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1394","line":45,"column":7,"nodeType":"1227","endLine":45,"endColumn":18,"suggestions":"1395"},{"ruleId":"1201","severity":1,"message":"1396","line":47,"column":10,"nodeType":"1203","messageId":"1204","endLine":47,"endColumn":26},{"ruleId":"1231","severity":1,"message":"1232","line":49,"column":23,"nodeType":"1233","messageId":"1234","endLine":49,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1397","line":55,"column":20,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":30},{"ruleId":"1231","severity":1,"message":"1232","line":71,"column":23,"nodeType":"1233","messageId":"1234","endLine":71,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":130,"column":22,"nodeType":"1233","messageId":"1234","endLine":130,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1246","line":4,"column":10,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":4,"column":15,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":4,"column":21,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1309","line":4,"column":34,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1310","line":4,"column":41,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1215","line":6,"column":26,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1216","line":20,"column":10,"nodeType":"1203","messageId":"1204","endLine":20,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1398","line":33,"column":11,"nodeType":"1203","messageId":"1204","endLine":33,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1399","line":33,"column":24,"nodeType":"1203","messageId":"1204","endLine":33,"endColumn":38},{"ruleId":"1201","severity":1,"message":"1377","line":44,"column":11,"nodeType":"1203","messageId":"1204","endLine":44,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1378","line":44,"column":28,"nodeType":"1203","messageId":"1204","endLine":44,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1379","line":45,"column":11,"nodeType":"1203","messageId":"1204","endLine":45,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1380","line":45,"column":26,"nodeType":"1203","messageId":"1204","endLine":45,"endColumn":42},{"ruleId":"1201","severity":1,"message":"1400","line":46,"column":35,"nodeType":"1203","messageId":"1204","endLine":46,"endColumn":60},{"ruleId":"1201","severity":1,"message":"1401","line":47,"column":35,"nodeType":"1203","messageId":"1204","endLine":47,"endColumn":60},{"ruleId":"1201","severity":1,"message":"1314","line":49,"column":31,"nodeType":"1203","messageId":"1204","endLine":49,"endColumn":52},{"ruleId":"1201","severity":1,"message":"1402","line":85,"column":11,"nodeType":"1203","messageId":"1204","endLine":85,"endColumn":22},{"ruleId":"1225","severity":1,"message":"1280","line":97,"column":7,"nodeType":"1227","endLine":97,"endColumn":9,"suggestions":"1403"},{"ruleId":"1225","severity":1,"message":"1280","line":144,"column":7,"nodeType":"1227","endLine":144,"endColumn":183,"suggestions":"1404"},{"ruleId":"1231","severity":1,"message":"1232","line":178,"column":26,"nodeType":"1233","messageId":"1234","endLine":178,"endColumn":28},{"ruleId":"1326","severity":1,"message":"1327","line":288,"column":38,"nodeType":"1328","endLine":288,"endColumn":58},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1291","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1215","line":6,"column":26,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1405","line":17,"column":10,"nodeType":"1203","messageId":"1204","endLine":17,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1406","line":20,"column":4,"nodeType":"1203","messageId":"1204","endLine":20,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1407","line":20,"column":28,"nodeType":"1203","messageId":"1204","endLine":20,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1408","line":22,"column":9,"nodeType":"1203","messageId":"1204","endLine":22,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1409","line":45,"column":11,"nodeType":"1203","messageId":"1204","endLine":45,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1410","line":45,"column":23,"nodeType":"1203","messageId":"1204","endLine":45,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1315","line":47,"column":11,"nodeType":"1203","messageId":"1204","endLine":47,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1316","line":47,"column":25,"nodeType":"1203","messageId":"1204","endLine":47,"endColumn":40},{"ruleId":"1201","severity":1,"message":"1411","line":48,"column":11,"nodeType":"1203","messageId":"1204","endLine":48,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1412","line":48,"column":24,"nodeType":"1203","messageId":"1204","endLine":48,"endColumn":38},{"ruleId":"1201","severity":1,"message":"1413","line":49,"column":22,"nodeType":"1203","messageId":"1204","endLine":49,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1214","line":79,"column":10,"nodeType":"1203","messageId":"1204","endLine":79,"endColumn":17},{"ruleId":"1225","severity":1,"message":"1280","line":135,"column":7,"nodeType":"1227","endLine":135,"endColumn":111,"suggestions":"1414"},{"ruleId":"1231","severity":1,"message":"1232","line":150,"column":19,"nodeType":"1233","messageId":"1234","endLine":150,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1243","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1415","line":6,"column":10,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1416","line":49,"column":4,"nodeType":"1227","endLine":49,"endColumn":24,"suggestions":"1417"},{"ruleId":"1231","severity":1,"message":"1232","line":56,"column":19,"nodeType":"1233","messageId":"1234","endLine":56,"endColumn":21},{"ruleId":"1231","severity":1,"message":"1232","line":72,"column":22,"nodeType":"1233","messageId":"1234","endLine":72,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1211","line":5,"column":10,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1418","line":5,"column":16,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1419","line":11,"column":12,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1420","line":15,"column":11,"nodeType":"1203","messageId":"1204","endLine":15,"endColumn":22},{"ruleId":"1288","severity":1,"message":"1289","line":23,"column":25,"nodeType":"1208","endLine":23,"endColumn":83},{"ruleId":"1201","severity":1,"message":"1421","line":1,"column":39,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1274","line":24,"column":6,"nodeType":"1227","endLine":24,"endColumn":8,"suggestions":"1422"},{"ruleId":"1225","severity":1,"message":"1423","line":28,"column":5,"nodeType":"1227","endLine":28,"endColumn":18,"suggestions":"1424"},{"ruleId":"1201","severity":1,"message":"1425","line":1,"column":16,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1426","line":78,"column":9,"nodeType":"1203","messageId":"1204","endLine":78,"endColumn":19},{"ruleId":"1231","severity":1,"message":"1232","line":93,"column":22,"nodeType":"1233","messageId":"1234","endLine":93,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1280","line":99,"column":6,"nodeType":"1227","endLine":99,"endColumn":31,"suggestions":"1427"},{"ruleId":"1428","severity":1,"message":"1429","line":110,"column":13,"nodeType":"1208","endLine":110,"endColumn":73},{"ruleId":"1428","severity":1,"message":"1429","line":120,"column":15,"nodeType":"1208","endLine":120,"endColumn":77},{"ruleId":"1428","severity":1,"message":"1429","line":141,"column":15,"nodeType":"1208","endLine":141,"endColumn":73},{"ruleId":"1428","severity":1,"message":"1429","line":152,"column":13,"nodeType":"1208","endLine":152,"endColumn":69},{"ruleId":"1428","severity":1,"message":"1429","line":161,"column":13,"nodeType":"1208","endLine":161,"endColumn":68},{"ruleId":"1428","severity":1,"message":"1429","line":170,"column":13,"nodeType":"1208","endLine":170,"endColumn":73},{"ruleId":"1428","severity":1,"message":"1429","line":179,"column":13,"nodeType":"1208","endLine":179,"endColumn":72},{"ruleId":"1428","severity":1,"message":"1429","line":187,"column":13,"nodeType":"1208","endLine":187,"endColumn":71},{"ruleId":"1428","severity":1,"message":"1429","line":196,"column":13,"nodeType":"1208","endLine":196,"endColumn":68},{"ruleId":"1201","severity":1,"message":"1430","line":3,"column":8,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1428","severity":1,"message":"1429","line":85,"column":21,"nodeType":"1208","endLine":85,"endColumn":80},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1338","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1433","line":14,"column":12,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1338","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1433","line":14,"column":12,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1216","line":6,"column":10,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":21},{"ruleId":"1225","severity":1,"message":"1434","line":34,"column":8,"nodeType":"1227","endLine":34,"endColumn":49,"suggestions":"1435"},{"ruleId":"1225","severity":1,"message":"1436","line":34,"column":9,"nodeType":"1437","endLine":34,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1337","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1243","line":6,"column":10,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":6,"column":20,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":6,"column":25,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1211","line":7,"column":10,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1246","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":3,"column":15,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":3,"column":21,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":3,"column":41,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1338","line":6,"column":8,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1243","line":8,"column":10,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":8,"column":20,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":8,"column":25,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1211","line":9,"column":10,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":14},{"ruleId":"1225","severity":1,"message":"1438","line":29,"column":8,"nodeType":"1227","endLine":29,"endColumn":41,"suggestions":"1439"},{"ruleId":"1225","severity":1,"message":"1436","line":29,"column":9,"nodeType":"1437","endLine":29,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1246","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":3,"column":15,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":3,"column":21,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":3,"column":41,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1338","line":6,"column":8,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1243","line":8,"column":10,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":8,"column":20,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":8,"column":25,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1211","line":9,"column":10,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":14},{"ruleId":"1225","severity":1,"message":"1440","line":48,"column":8,"nodeType":"1227","endLine":48,"endColumn":44,"suggestions":"1441"},{"ruleId":"1225","severity":1,"message":"1436","line":48,"column":9,"nodeType":"1437","endLine":48,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1442","line":22,"column":18,"nodeType":"1203","messageId":"1204","endLine":22,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1443","line":23,"column":16,"nodeType":"1203","messageId":"1204","endLine":23,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1444","line":24,"column":20,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1445","line":28,"column":10,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1446","line":28,"column":18,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1447","line":29,"column":10,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1448","line":29,"column":23,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1449","line":33,"column":15,"nodeType":"1203","messageId":"1204","endLine":33,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1450","line":34,"column":9,"nodeType":"1203","messageId":"1204","endLine":34,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":59,"column":14,"nodeType":"1233","messageId":"1234","endLine":59,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1451","line":69,"column":8,"nodeType":"1227","endLine":69,"endColumn":25,"suggestions":"1452"},{"ruleId":"1231","severity":1,"message":"1232","line":82,"column":23,"nodeType":"1233","messageId":"1234","endLine":82,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":84,"column":27,"nodeType":"1233","messageId":"1234","endLine":84,"endColumn":29},{"ruleId":"1231","severity":1,"message":"1232","line":86,"column":34,"nodeType":"1233","messageId":"1234","endLine":86,"endColumn":36},{"ruleId":"1231","severity":1,"message":"1232","line":88,"column":33,"nodeType":"1233","messageId":"1234","endLine":88,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":90,"column":33,"nodeType":"1233","messageId":"1234","endLine":90,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":92,"column":33,"nodeType":"1233","messageId":"1234","endLine":92,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":94,"column":33,"nodeType":"1233","messageId":"1234","endLine":94,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1453","line":108,"column":8,"nodeType":"1227","endLine":108,"endColumn":14,"suggestions":"1454"},{"ruleId":"1201","severity":1,"message":"1455","line":117,"column":9,"nodeType":"1203","messageId":"1204","endLine":117,"endColumn":16},{"ruleId":"1288","severity":1,"message":"1289","line":145,"column":62,"nodeType":"1208","endLine":145,"endColumn":95},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1272","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1456","line":22,"column":11,"nodeType":"1203","messageId":"1204","endLine":22,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1457","line":23,"column":11,"nodeType":"1203","messageId":"1204","endLine":23,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1458","line":27,"column":12,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1459","line":27,"column":20,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1460","line":28,"column":12,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1461","line":28,"column":19,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1220","line":32,"column":12,"nodeType":"1203","messageId":"1204","endLine":32,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1221","line":32,"column":19,"nodeType":"1203","messageId":"1204","endLine":32,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1462","line":33,"column":12,"nodeType":"1203","messageId":"1204","endLine":33,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1224","line":33,"column":21,"nodeType":"1203","messageId":"1204","endLine":33,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1463","line":35,"column":12,"nodeType":"1203","messageId":"1204","endLine":35,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1464","line":35,"column":36,"nodeType":"1203","messageId":"1204","endLine":35,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1465","line":36,"column":12,"nodeType":"1203","messageId":"1204","endLine":36,"endColumn":31},{"ruleId":"1231","severity":1,"message":"1232","line":47,"column":16,"nodeType":"1233","messageId":"1234","endLine":47,"endColumn":18},{"ruleId":"1231","severity":1,"message":"1232","line":54,"column":72,"nodeType":"1233","messageId":"1234","endLine":54,"endColumn":74},{"ruleId":"1225","severity":1,"message":"1466","line":57,"column":8,"nodeType":"1227","endLine":57,"endColumn":46,"suggestions":"1467"},{"ruleId":"1225","severity":1,"message":"1436","line":57,"column":15,"nodeType":"1437","endLine":57,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1445","line":28,"column":10,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1446","line":28,"column":18,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1447","line":29,"column":10,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1448","line":29,"column":23,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1450","line":38,"column":9,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":64,"column":14,"nodeType":"1233","messageId":"1234","endLine":64,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1468","line":79,"column":8,"nodeType":"1227","endLine":79,"endColumn":25,"suggestions":"1469"},{"ruleId":"1231","severity":1,"message":"1232","line":92,"column":23,"nodeType":"1233","messageId":"1234","endLine":92,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":94,"column":27,"nodeType":"1233","messageId":"1234","endLine":94,"endColumn":29},{"ruleId":"1231","severity":1,"message":"1232","line":96,"column":34,"nodeType":"1233","messageId":"1234","endLine":96,"endColumn":36},{"ruleId":"1231","severity":1,"message":"1232","line":98,"column":33,"nodeType":"1233","messageId":"1234","endLine":98,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":100,"column":33,"nodeType":"1233","messageId":"1234","endLine":100,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":102,"column":33,"nodeType":"1233","messageId":"1234","endLine":102,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":104,"column":33,"nodeType":"1233","messageId":"1234","endLine":104,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1453","line":118,"column":8,"nodeType":"1227","endLine":118,"endColumn":14,"suggestions":"1470"},{"ruleId":"1288","severity":1,"message":"1289","line":177,"column":76,"nodeType":"1208","endLine":177,"endColumn":109},{"ruleId":"1201","severity":1,"message":"1471","line":1,"column":17,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":41,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1272","line":2,"column":8,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1243","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1472","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1415","line":5,"column":10,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1215","line":5,"column":26,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1214","line":76,"column":9,"nodeType":"1203","messageId":"1204","endLine":76,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1473","line":80,"column":10,"nodeType":"1203","messageId":"1204","endLine":80,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1474","line":80,"column":17,"nodeType":"1203","messageId":"1204","endLine":80,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":7,"column":20,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":7,"column":25,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1211","line":8,"column":10,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1475","line":17,"column":11,"nodeType":"1203","messageId":"1204","endLine":17,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1476","line":17,"column":19,"nodeType":"1203","messageId":"1204","endLine":17,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1243","line":6,"column":10,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":6,"column":20,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":6,"column":25,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1211","line":7,"column":10,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1216","line":11,"column":10,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":21},{"ruleId":"1225","severity":1,"message":"1477","line":32,"column":6,"nodeType":"1227","endLine":32,"endColumn":8,"suggestions":"1478"},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1243","line":5,"column":10,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":5,"column":20,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":5,"column":25,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1211","line":6,"column":10,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1216","line":10,"column":10,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":21},{"ruleId":"1225","severity":1,"message":"1479","line":28,"column":6,"nodeType":"1227","endLine":28,"endColumn":8,"suggestions":"1480"},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1481","line":8,"column":8,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1311","line":24,"column":11,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1248","line":24,"column":19,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1482","line":26,"column":11,"nodeType":"1203","messageId":"1204","endLine":26,"endColumn":17},{"ruleId":"1225","severity":1,"message":"1483","line":46,"column":8,"nodeType":"1227","endLine":46,"endColumn":10,"suggestions":"1484"},{"ruleId":"1231","severity":1,"message":"1232","line":48,"column":16,"nodeType":"1233","messageId":"1234","endLine":48,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1485","line":61,"column":8,"nodeType":"1227","endLine":61,"endColumn":18,"suggestions":"1486"},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":7,"column":20,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1487","line":7,"column":25,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1211","line":8,"column":10,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1488","line":25,"column":12,"nodeType":"1203","messageId":"1204","endLine":25,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1489","line":25,"column":18,"nodeType":"1203","messageId":"1204","endLine":25,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1238","line":53,"column":10,"nodeType":"1203","messageId":"1204","endLine":53,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1490","line":53,"column":20,"nodeType":"1203","messageId":"1204","endLine":53,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1491","line":54,"column":10,"nodeType":"1203","messageId":"1204","endLine":54,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1492","line":55,"column":10,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1493","line":56,"column":10,"nodeType":"1203","messageId":"1204","endLine":56,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1339","line":56,"column":17,"nodeType":"1203","messageId":"1204","endLine":56,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1351","line":57,"column":25,"nodeType":"1203","messageId":"1204","endLine":57,"endColumn":41},{"ruleId":"1201","severity":1,"message":"1494","line":58,"column":28,"nodeType":"1203","messageId":"1204","endLine":58,"endColumn":47},{"ruleId":"1201","severity":1,"message":"1495","line":64,"column":7,"nodeType":"1203","messageId":"1204","endLine":64,"endColumn":30},{"ruleId":"1225","severity":1,"message":"1280","line":95,"column":7,"nodeType":"1227","endLine":95,"endColumn":15,"suggestions":"1496"},{"ruleId":"1231","severity":1,"message":"1232","line":98,"column":17,"nodeType":"1233","messageId":"1234","endLine":98,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1497","line":107,"column":7,"nodeType":"1227","endLine":107,"endColumn":13,"suggestions":"1498"},{"ruleId":"1231","severity":1,"message":"1232","line":110,"column":15,"nodeType":"1233","messageId":"1234","endLine":110,"endColumn":17},{"ruleId":"1225","severity":1,"message":"1499","line":119,"column":5,"nodeType":"1227","endLine":119,"endColumn":11,"suggestions":"1500"},{"ruleId":"1231","severity":1,"message":"1232","line":137,"column":17,"nodeType":"1233","messageId":"1234","endLine":137,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1501","line":146,"column":7,"nodeType":"1227","endLine":146,"endColumn":13,"suggestions":"1502"},{"ruleId":"1231","severity":1,"message":"1232","line":163,"column":23,"nodeType":"1233","messageId":"1234","endLine":163,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":166,"column":27,"nodeType":"1233","messageId":"1234","endLine":166,"endColumn":29},{"ruleId":"1231","severity":1,"message":"1232","line":168,"column":28,"nodeType":"1233","messageId":"1234","endLine":168,"endColumn":30},{"ruleId":"1231","severity":1,"message":"1232","line":170,"column":27,"nodeType":"1233","messageId":"1234","endLine":170,"endColumn":29},{"ruleId":"1231","severity":1,"message":"1232","line":172,"column":27,"nodeType":"1233","messageId":"1234","endLine":172,"endColumn":29},{"ruleId":"1231","severity":1,"message":"1232","line":174,"column":27,"nodeType":"1233","messageId":"1234","endLine":174,"endColumn":29},{"ruleId":"1231","severity":1,"message":"1232","line":176,"column":27,"nodeType":"1233","messageId":"1234","endLine":176,"endColumn":29},{"ruleId":"1225","severity":1,"message":"1503","line":190,"column":8,"nodeType":"1227","endLine":190,"endColumn":36,"suggestions":"1504"},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1244","line":7,"column":20,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1245","line":7,"column":25,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":28},{"ruleId":"1231","severity":1,"message":"1232","line":39,"column":16,"nodeType":"1233","messageId":"1234","endLine":39,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1505","line":48,"column":8,"nodeType":"1227","endLine":48,"endColumn":36,"suggestions":"1506"},{"ruleId":"1225","severity":1,"message":"1436","line":48,"column":9,"nodeType":"1437","endLine":48,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1272","line":6,"column":8,"nodeType":"1203","messageId":"1204","endLine":6,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1481","line":13,"column":8,"nodeType":"1203","messageId":"1204","endLine":13,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1216","line":14,"column":10,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1507","line":46,"column":12,"nodeType":"1203","messageId":"1204","endLine":46,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1508","line":47,"column":12,"nodeType":"1203","messageId":"1204","endLine":47,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1220","line":51,"column":12,"nodeType":"1203","messageId":"1204","endLine":51,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1221","line":51,"column":19,"nodeType":"1203","messageId":"1204","endLine":51,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1462","line":52,"column":12,"nodeType":"1203","messageId":"1204","endLine":52,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1224","line":52,"column":21,"nodeType":"1203","messageId":"1204","endLine":52,"endColumn":31},{"ruleId":"1225","severity":1,"message":"1509","line":67,"column":8,"nodeType":"1227","endLine":67,"endColumn":10,"suggestions":"1510"},{"ruleId":"1231","severity":1,"message":"1232","line":77,"column":16,"nodeType":"1233","messageId":"1234","endLine":77,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1511","line":82,"column":8,"nodeType":"1227","endLine":82,"endColumn":14,"suggestions":"1512"},{"ruleId":"1231","severity":1,"message":"1232","line":87,"column":23,"nodeType":"1233","messageId":"1234","endLine":87,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":91,"column":23,"nodeType":"1233","messageId":"1234","endLine":91,"endColumn":25},{"ruleId":"1231","severity":1,"message":"1232","line":93,"column":27,"nodeType":"1233","messageId":"1234","endLine":93,"endColumn":29},{"ruleId":"1231","severity":1,"message":"1232","line":95,"column":34,"nodeType":"1233","messageId":"1234","endLine":95,"endColumn":36},{"ruleId":"1231","severity":1,"message":"1232","line":97,"column":33,"nodeType":"1233","messageId":"1234","endLine":97,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":99,"column":33,"nodeType":"1233","messageId":"1234","endLine":99,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":101,"column":33,"nodeType":"1233","messageId":"1234","endLine":101,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":103,"column":33,"nodeType":"1233","messageId":"1234","endLine":103,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1513","line":117,"column":8,"nodeType":"1227","endLine":117,"endColumn":38,"suggestions":"1514"},{"ruleId":"1515","severity":1,"message":"1516","line":164,"column":7,"nodeType":"1517","messageId":"1518","endLine":179,"endColumn":8},{"ruleId":"1201","severity":1,"message":"1519","line":182,"column":11,"nodeType":"1203","messageId":"1204","endLine":182,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1520","line":219,"column":7,"nodeType":"1203","messageId":"1204","endLine":219,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1521","line":224,"column":7,"nodeType":"1203","messageId":"1204","endLine":224,"endColumn":22},{"ruleId":"1231","severity":1,"message":"1232","line":230,"column":16,"nodeType":"1233","messageId":"1234","endLine":230,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1272","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1216","line":13,"column":10,"nodeType":"1203","messageId":"1204","endLine":13,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1272","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":17},{"ruleId":"1231","severity":1,"message":"1232","line":23,"column":16,"nodeType":"1233","messageId":"1234","endLine":23,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1522","line":30,"column":8,"nodeType":"1227","endLine":30,"endColumn":34,"suggestions":"1523"},{"ruleId":"1225","severity":1,"message":"1436","line":30,"column":9,"nodeType":"1437","endLine":30,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1338","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1481","line":12,"column":8,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1524","line":13,"column":8,"nodeType":"1203","messageId":"1204","endLine":13,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1525","line":21,"column":12,"nodeType":"1203","messageId":"1204","endLine":21,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1526","line":21,"column":24,"nodeType":"1203","messageId":"1204","endLine":21,"endColumn":34},{"ruleId":"1231","severity":1,"message":"1232","line":24,"column":16,"nodeType":"1233","messageId":"1234","endLine":24,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1527","line":27,"column":8,"nodeType":"1227","endLine":27,"endColumn":34,"suggestions":"1528"},{"ruleId":"1225","severity":1,"message":"1436","line":27,"column":9,"nodeType":"1437","endLine":27,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1272","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1529","line":1,"column":51,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1338","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1530","line":8,"column":8,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1531","line":9,"column":8,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1481","line":12,"column":8,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1524","line":13,"column":8,"nodeType":"1203","messageId":"1204","endLine":13,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1216","line":14,"column":10,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1532","line":23,"column":18,"nodeType":"1203","messageId":"1204","endLine":23,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1533","line":24,"column":12,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1534","line":24,"column":19,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1535","line":25,"column":12,"nodeType":"1203","messageId":"1204","endLine":25,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1536","line":25,"column":26,"nodeType":"1203","messageId":"1204","endLine":25,"endColumn":41},{"ruleId":"1201","severity":1,"message":"1537","line":26,"column":12,"nodeType":"1203","messageId":"1204","endLine":26,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1538","line":26,"column":29,"nodeType":"1203","messageId":"1204","endLine":26,"endColumn":47},{"ruleId":"1201","severity":1,"message":"1539","line":27,"column":12,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1540","line":27,"column":24,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1541","line":28,"column":12,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1542","line":28,"column":28,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1543","line":34,"column":13,"nodeType":"1203","messageId":"1204","endLine":34,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1544","line":34,"column":24,"nodeType":"1203","messageId":"1204","endLine":34,"endColumn":36},{"ruleId":"1231","severity":1,"message":"1232","line":39,"column":12,"nodeType":"1233","messageId":"1234","endLine":39,"endColumn":14},{"ruleId":"1225","severity":1,"message":"1545","line":48,"column":4,"nodeType":"1227","endLine":48,"endColumn":10,"suggestions":"1546"},{"ruleId":"1225","severity":1,"message":"1547","line":55,"column":6,"nodeType":"1227","endLine":55,"endColumn":12,"suggestions":"1548"},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1338","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1231","severity":1,"message":"1232","line":35,"column":18,"nodeType":"1233","messageId":"1234","endLine":35,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1549","line":40,"column":10,"nodeType":"1227","endLine":40,"endColumn":16,"suggestions":"1550"},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":27,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1374","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1551","line":8,"column":8,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1552","line":9,"column":8,"nodeType":"1203","messageId":"1204","endLine":9,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1243","line":10,"column":10,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1553","line":12,"column":10,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1283","line":18,"column":9,"nodeType":"1203","messageId":"1204","endLine":18,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1472","line":19,"column":8,"nodeType":"1203","messageId":"1204","endLine":19,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1554","line":29,"column":7,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1555","line":34,"column":10,"nodeType":"1203","messageId":"1204","endLine":34,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1556","line":34,"column":22,"nodeType":"1203","messageId":"1204","endLine":34,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1557","line":35,"column":17,"nodeType":"1203","messageId":"1204","endLine":35,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1558","line":37,"column":10,"nodeType":"1203","messageId":"1204","endLine":37,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1559","line":37,"column":17,"nodeType":"1203","messageId":"1204","endLine":37,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1560","line":38,"column":10,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1561","line":38,"column":20,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1562","line":8,"column":8,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1524","line":11,"column":8,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1216","line":12,"column":10,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1338","line":4,"column":8,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1337","line":5,"column":8,"nodeType":"1203","messageId":"1204","endLine":5,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1493","line":19,"column":10,"nodeType":"1203","messageId":"1204","endLine":19,"endColumn":15},{"ruleId":"1225","severity":1,"message":"1563","line":37,"column":4,"nodeType":"1227","endLine":37,"endColumn":33,"suggestions":"1564"},{"ruleId":"1225","severity":1,"message":"1436","line":37,"column":6,"nodeType":"1437","endLine":37,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1272","line":8,"column":8,"nodeType":"1203","messageId":"1204","endLine":8,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1481","line":14,"column":8,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1524","line":15,"column":8,"nodeType":"1203","messageId":"1204","endLine":15,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1533","line":24,"column":8,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1534","line":24,"column":15,"nodeType":"1203","messageId":"1204","endLine":24,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1535","line":25,"column":8,"nodeType":"1203","messageId":"1204","endLine":25,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1536","line":25,"column":22,"nodeType":"1203","messageId":"1204","endLine":25,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1537","line":26,"column":8,"nodeType":"1203","messageId":"1204","endLine":26,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1538","line":26,"column":25,"nodeType":"1203","messageId":"1204","endLine":26,"endColumn":43},{"ruleId":"1201","severity":1,"message":"1565","line":27,"column":8,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1566","line":27,"column":18,"nodeType":"1203","messageId":"1204","endLine":27,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1567","line":29,"column":8,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1568","line":29,"column":28,"nodeType":"1203","messageId":"1204","endLine":29,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1481","line":13,"column":8,"nodeType":"1203","messageId":"1204","endLine":13,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1524","line":14,"column":8,"nodeType":"1203","messageId":"1204","endLine":14,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1216","line":15,"column":10,"nodeType":"1203","messageId":"1204","endLine":15,"endColumn":21},{"ruleId":"1231","severity":1,"message":"1232","line":35,"column":14,"nodeType":"1233","messageId":"1234","endLine":35,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1569","line":39,"column":8,"nodeType":"1227","endLine":39,"endColumn":30,"suggestions":"1570"},{"ruleId":"1225","severity":1,"message":"1436","line":39,"column":9,"nodeType":"1437","endLine":39,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1481","line":11,"column":8,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1524","line":12,"column":8,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1571","line":15,"column":8,"nodeType":"1203","messageId":"1204","endLine":15,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1572","line":16,"column":8,"nodeType":"1203","messageId":"1204","endLine":16,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1568","line":31,"column":32,"nodeType":"1203","messageId":"1204","endLine":31,"endColumn":53},{"ruleId":"1201","severity":1,"message":"1573","line":38,"column":12,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1574","line":38,"column":26,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":41},{"ruleId":"1201","severity":1,"message":"1575","line":40,"column":12,"nodeType":"1203","messageId":"1204","endLine":40,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1576","line":40,"column":24,"nodeType":"1203","messageId":"1204","endLine":40,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1577","line":48,"column":8,"nodeType":"1227","endLine":48,"endColumn":10,"suggestions":"1578"},{"ruleId":"1201","severity":1,"message":"1579","line":60,"column":11,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1432","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1272","line":7,"column":8,"nodeType":"1203","messageId":"1204","endLine":7,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1481","line":10,"column":8,"nodeType":"1203","messageId":"1204","endLine":10,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1524","line":11,"column":8,"nodeType":"1203","messageId":"1204","endLine":11,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1571","line":15,"column":8,"nodeType":"1203","messageId":"1204","endLine":15,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1572","line":16,"column":8,"nodeType":"1203","messageId":"1204","endLine":16,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1216","line":18,"column":10,"nodeType":"1203","messageId":"1204","endLine":18,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1535","line":30,"column":8,"nodeType":"1203","messageId":"1204","endLine":30,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1580","line":35,"column":8,"nodeType":"1203","messageId":"1204","endLine":35,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1581","line":35,"column":19,"nodeType":"1203","messageId":"1204","endLine":35,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1582","line":36,"column":8,"nodeType":"1203","messageId":"1204","endLine":36,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1574","line":36,"column":22,"nodeType":"1203","messageId":"1204","endLine":36,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1583","line":37,"column":8,"nodeType":"1203","messageId":"1204","endLine":37,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1576","line":37,"column":20,"nodeType":"1203","messageId":"1204","endLine":37,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1584","line":38,"column":8,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1585","line":38,"column":22,"nodeType":"1203","messageId":"1204","endLine":38,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1586","line":39,"column":8,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1587","line":39,"column":26,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1588","line":41,"column":8,"nodeType":"1203","messageId":"1204","endLine":41,"endColumn":16},{"ruleId":"1201","severity":1,"message":"1543","line":42,"column":8,"nodeType":"1203","messageId":"1204","endLine":42,"endColumn":17},{"ruleId":"1231","severity":1,"message":"1232","line":69,"column":12,"nodeType":"1233","messageId":"1234","endLine":69,"endColumn":14},{"ruleId":"1225","severity":1,"message":"1589","line":86,"column":4,"nodeType":"1227","endLine":86,"endColumn":36,"suggestions":"1590"},{"ruleId":"1225","severity":1,"message":"1436","line":86,"column":5,"nodeType":"1437","endLine":86,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1591","line":87,"column":11,"nodeType":"1203","messageId":"1204","endLine":87,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1592","line":111,"column":13,"nodeType":"1203","messageId":"1204","endLine":111,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1211","line":4,"column":10,"nodeType":"1203","messageId":"1204","endLine":4,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1593","line":39,"column":8,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":12},{"ruleId":"1201","severity":1,"message":"1594","line":39,"column":13,"nodeType":"1203","messageId":"1204","endLine":39,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1595","line":84,"column":10,"nodeType":"1203","messageId":"1204","endLine":84,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1596","line":101,"column":21,"nodeType":"1203","messageId":"1204","endLine":101,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1597","line":104,"column":8,"nodeType":"1203","messageId":"1204","endLine":104,"endColumn":12},{"ruleId":"1201","severity":1,"message":"1598","line":105,"column":8,"nodeType":"1203","messageId":"1204","endLine":105,"endColumn":16},{"ruleId":"1231","severity":1,"message":"1232","line":121,"column":33,"nodeType":"1233","messageId":"1234","endLine":121,"endColumn":35},{"ruleId":"1231","severity":1,"message":"1232","line":129,"column":32,"nodeType":"1233","messageId":"1234","endLine":129,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1431","line":1,"column":40,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1246","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":2,"column":15,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1310","line":2,"column":41,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1481","line":12,"column":8,"nodeType":"1203","messageId":"1204","endLine":12,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1599","line":41,"column":11,"nodeType":"1203","messageId":"1204","endLine":41,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1246","line":3,"column":10,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1307","line":3,"column":15,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1308","line":3,"column":21,"nodeType":"1203","messageId":"1204","endLine":3,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1600","line":28,"column":11,"nodeType":"1203","messageId":"1204","endLine":28,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1445","line":37,"column":11,"nodeType":"1203","messageId":"1204","endLine":37,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1601","line":87,"column":8,"nodeType":"1227","endLine":87,"endColumn":34,"suggestions":"1602"},{"ruleId":"1225","severity":1,"message":"1436","line":87,"column":9,"nodeType":"1437","endLine":87,"endColumn":33},{"ruleId":"1225","severity":1,"message":"1603","line":101,"column":8,"nodeType":"1227","endLine":101,"endColumn":34,"suggestions":"1604"},{"ruleId":"1225","severity":1,"message":"1436","line":101,"column":9,"nodeType":"1437","endLine":101,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1271","line":1,"column":8,"nodeType":"1203","messageId":"1204","endLine":1,"endColumn":13},{"ruleId":"1201","severity":1,"message":"1605","line":2,"column":21,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1606","line":70,"column":8,"nodeType":"1227","endLine":70,"endColumn":10,"suggestions":"1607"},{"ruleId":"1201","severity":1,"message":"1211","line":2,"column":10,"nodeType":"1203","messageId":"1204","endLine":2,"endColumn":14},"no-native-reassign",["1608"],"no-negated-in-lhs",["1609"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Clients' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"1610","text":"1611"},"'Link' is defined but never used.","'jwt_decode' is defined but never used.","'notifyError' is defined but never used.","'history' is assigned a value but never used.","'toast' is defined but never used.","'refreshPage' is defined but never used.","'setPushedMaladies' is assigned a value but never used.","'etat' is assigned a value but never used.","'dette' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'deleted' is assigned a value but never used.","'setDeleted' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'api' and 'maladiesEnd'. Either include them or remove the dependency array.","ArrayExpression",["1612"],"React Hook useEffect has missing dependencies: 'api' and 'clientURI'. Either include them or remove the dependency array.",["1613"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getmaladiesNames' and 'realMaladies'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedMaladies' needs the current value of 'realMaladies'.",["1614"],"'newMaladies' is assigned a value but never used.","'creneaux' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'personnelURI'. Either include them or remove the dependency array.",["1615"],"React Hook useEffect has a missing dependency: 'personnelURI'. Either include it or remove the dependency array.",["1616"],"'Dropdown' is defined but never used.","'Tab' is defined but never used.","'Nav' is defined but never used.","'Row' is defined but never used.","'Router' is defined but never used.","'setClient' is assigned a value but never used.","'coachData' is assigned a value but never used.","'setCoachData' is assigned a value but never used.","'abonClient' is assigned a value but never used.","'setAbonClient' is assigned a value but never used.","'abonDetailModal' is assigned a value but never used.","'setAbonDetailModal' is assigned a value but never used.","'abonClientType' is assigned a value but never used.","'setAbonClientType' is assigned a value but never used.","'abonClientID' is assigned a value but never used.","'setAbonClientID' is assigned a value but never used.","'abonClientEnd' is assigned a value but never used.","'setAbonClientEnd' is assigned a value but never used.","'abonClientpresences' is assigned a value but never used.","'setAbonClientpresences' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api', 'chargesAND', 'clientCount', 'dettesAND', 'presencesTodayEND', 'transactionsTodayEND', and 'ttcAND'. Either include them or remove the dependency array.",["1617"],"React Hook useEffect has missing dependencies: 'api' and 'presencesParSalleEnd'. Either include them or remove the dependency array.",["1618"],"'hello' is assigned a value but never used.","'HandlePresenceSubmit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'coachURI'. Either include them or remove the dependency array.",["1619"],"'axios' is defined but never used.","'PageTitle' is defined but never used.","'avartar1' is defined but never used.","React Hook useEffect has missing dependencies: 'api' and 'endpoint'. Either include them or remove the dependency array.",["1620"],"React Hook useEffect has missing dependencies: 'api' and 'userURI'. Either include them or remove the dependency array.",["1621"],"'u' is assigned a value but never used.","'aa' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["1622"],"'Button' is defined but never used.","'notifySuccess' is defined but never used.","React Hook useEffect has missing dependencies: 'PersonnelDetailEndpoint' and 'api'. Either include them or remove the dependency array.",["1623"],"React Hook useEffect has missing dependencies: 'api' and 'transactionsEmployeEnd'. Either include them or remove the dependency array.",["1624"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'product1' is defined but never used.","'Search' is defined but never used.","'createContext' is defined but never used.","React Hook useEffect has missing dependencies: 'api' and 'creneauCoachEND'. Either include them or remove the dependency array.",["1625"],"React Hook useEffect has missing dependencies: 'api' and 'presencesCoachEND'. Either include them or remove the dependency array.",["1626"],"React Hook useEffect has missing dependencies: 'api', 'transCoach', and 'transactionClientEND'. Either include them or remove the dependency array.",["1627"],"React Hook useEffect has missing dependencies: 'api' and 'coachDetailEnd'. Either include them or remove the dependency array.",["1628"],"'setEtat' is assigned a value but never used.","'setRealMaladies' is assigned a value but never used.",["1629"],"'handleCheckbox' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activityEnd' and 'api'. Either include them or remove the dependency array.",["1630"],"'Card' is defined but never used.","'Col' is defined but never used.","'Modal' is defined but never used.","'Container' is defined but never used.","'client' is assigned a value but never used.","'clientId' is assigned a value but never used.","'setClientId' is assigned a value but never used.","'setSearchBarActivated' is assigned a value but never used.","'presenceData' is assigned a value but never used.","'setPresenceData' is assigned a value but never used.","'presencesCount' is assigned a value but never used.","'setPresencesCount' is assigned a value but never used.","'salleId' is assigned a value but never used.","'setSalleId' is assigned a value but never used.","'startHour' is assigned a value but never used.","'setStartHour' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'usersEnd'. Either include them or remove the dependency array.",["1631"],["1632"],"jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute",["1633"],["1634"],"React Hook useEffect has missing dependencies: 'api', 'result1', 'result2', 'result3', 'result4', 'result5', 'result6', and 'result7'. Either include them or remove the dependency array.",["1635"],["1636"],["1637"],["1638"],["1639"],"'Autocomplete' is defined but never used.","'TextField' is defined but never used.","'setSalle' is assigned a value but never used.","'abDuree' is assigned a value but never used.","'abIdFromList' is assigned a value but never used.","'typeOf' is assigned a value but never used.","'activityColor' is assigned a value but never used.","'setActivityColor' is assigned a value but never used.",["1640"],["1641"],["1642"],"React Hook useEffect has missing dependencies: 'api' and 'doorsEnd'. Either include them or remove the dependency array.",["1643"],["1644"],"'setSelectedSalle' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'getAbonnementsActitivties'. Either include it or remove the dependency array.",["1645"],"React Hook useEffect has missing dependencies: 'abonnements', 'abonnementsListEND', and 'api'. Either include them or remove the dependency array.",["1646"],"'setSavedAbonnements' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api', 'endpoint', and 'savedAbonnements'. Either include them or remove the dependency array.",["1647"],"'capitalizeFirstLetter' is assigned a value but never used.","'abActivityName' is assigned a value but never used.","'isSelected' is assigned a value but never used.","'setIsSelected' is assigned a value but never used.",["1648"],"React Hook useEffect has missing dependencies: 'api' and 'presenceURI'. Either include them or remove the dependency array.",["1649"],"'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api', 'endpoint', and 'searchEndpoint'. Either include them or remove the dependency array.",["1650"],"'Badge' is defined but never used.","'ProgressBar' is defined but never used.","'PerfectScrollbar' is defined but never used.","'presencesClient' is assigned a value but never used.","'setPresnecesClient' is assigned a value but never used.","'presenceSuccess' is assigned a value but never used.","'setPresenceSuccess' is assigned a value but never used.","'presenceError' is assigned a value but never used.","'setPresenceError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'clientId'. Either include them or remove the dependency array.",["1651"],"React Hook useEffect has missing dependencies: 'api' and 'creneauClientEND'. Either include them or remove the dependency array.",["1652"],"React Hook useEffect has missing dependencies: 'api', 'clientId', and 'transactionClientEND'. Either include them or remove the dependency array.",["1653"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray",["1654"],"The 'populatePaimentData' function makes the dependencies of useEffect Hook (at line 246) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'populatePaimentData' in its own useCallback() Hook.","VariableDeclarator","'selectedUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'groupsEnd'. Either include them or remove the dependency array.",["1655"],"'setSelectedGroup' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'carteClient' is assigned a value but never used.","'setCarteClient' is assigned a value but never used.","'setPresenceupdatedSuccess' is assigned a value but never used.","'setPresenceCreatedSuccess' is assigned a value but never used.","'salleStatus' is assigned a value but never used.",["1656"],["1657"],"'transformToNestObject' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'DateFnsUtils' is defined but never used.","'detteModal' is assigned a value but never used.","'setDetteModal' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.","'setTransData' is assigned a value but never used.",["1658"],"'ToastContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'api', 'caByABEND', 'caBySalleEND', and 'caEND'. Either include them or remove the dependency array.",["1659"],"'useHistory' is defined but never used.","'activeLink' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'useReducer' is defined but never used.",["1660"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1661"],"'useContext' is defined but never used.","'formatDate' is assigned a value but never used.",["1662"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'DeleteIcon' is defined but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","'coachName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'abcEnd' and 'api'. Either include them or remove the dependency array.",["1663"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has missing dependencies: 'api' and 'paiementsEnd'. Either include them or remove the dependency array.",["1664"],"React Hook useEffect has missing dependencies: 'api' and 'presencesEnd'. Either include them or remove the dependency array.",["1665"],"'setAbontId' is assigned a value but never used.","'setType' is assigned a value but never used.","'setTypeName' is assigned a value but never used.","'creneau' is assigned a value but never used.","'setCreneau' is assigned a value but never used.","'showCreneau' is assigned a value but never used.","'setShowCreneau' is assigned a value but never used.","'setAbc' is assigned a value but never used.","'creneauClientEND' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clientData'. Either include it or remove the dependency array. If 'setClientId' needs the current value of 'clientData', you can also switch to useReducer instead of useState and read 'clientData' in the reducer.",["1666"],"React Hook useEffect has missing dependencies: 'api', 'creneauPerAbonnementEND', 'result1', 'result2', 'result3', 'result4', 'result5', 'result6', and 'result7'. Either include them or remove the dependency array.",["1667"],"'abcData' is assigned a value but never used.","'amountInfo' is assigned a value but never used.","'aBC' is assigned a value but never used.","'erreur' is assigned a value but never used.","'seterreur' is assigned a value but never used.","'abcId' is assigned a value but never used.","'setAbcId' is assigned a value but never used.","'success' is assigned a value but never used.","'paiementAmountReceived' is assigned a value but never used.","'setPaiementAmountReceived' is assigned a value but never used.","'paiementABCReceived' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'abonnements' and 'paiementData'. Either include them or remove the dependency array. If 'setPaiementIdReceived' needs the current value of 'paiementData', you can also switch to useReducer instead of useState and read 'paiementData' in the reducer.",["1668"],"React Hook useEffect has missing dependencies: 'abc', 'abcDetailEND', 'abonnementData', and 'api'. Either include them or remove the dependency array. If 'setAbontId' needs the current value of 'abonnementData', you can also switch to useReducer instead of useState and read 'abonnementData' in the reducer.",["1669"],["1670"],"'Fragment' is defined but never used.","'ShortCuts' is defined but never used.","'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'people' is assigned a value but never used.","'setPeople' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'coachsEnd'. Either include them or remove the dependency array.",["1671"],"React Hook useEffect has missing dependencies: 'api' and 'personnelEnd'. Either include them or remove the dependency array.",["1672"],"'useForm' is defined but never used.","'dettes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'clientsEnd'. Either include them or remove the dependency array.",["1673"],"React Hook useEffect has missing dependencies: 'api' and 'show'. Either include them or remove the dependency array.",["1674"],"'Navn' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setCreneaux' is assigned a value but never used.","'plannings' is assigned a value but never used.","'salles' is assigned a value but never used.","'salle' is assigned a value but never used.","'setSelectedPlanning' is assigned a value but never used.","'creneauPerAbonnementEND' is assigned a value but never used.",["1675"],"React Hook useEffect has missing dependencies: 'api' and 'planningsEnd'. Either include them or remove the dependency array.",["1676"],"React Hook useEffect has missing dependencies: 'api' and 'clientsEND'. Either include them or remove the dependency array.",["1677"],"React Hook useEffect has missing dependencies: 'api' and 'sallesEnd'. Either include them or remove the dependency array.",["1678"],"React Hook useEffect has missing dependencies: 'api', 'creneauClientEND', 'result1', 'result2', 'result3', 'result4', 'result5', 'result6', and 'result7'. Either include them or remove the dependency array.",["1679"],"React Hook useEffect has missing dependencies: 'hourIn', 'hourOut', 'note', 'notes', 'presenceData', and 'show'. Either include them or remove the dependency array. If 'setPresenceDate' needs the current value of 'presenceData', you can also switch to useReducer instead of useState and read 'presenceData' in the reducer.",["1680"],"'dureeAbonnement' is assigned a value but never used.","'paiementCochage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'planningEND'. Either include them or remove the dependency array.",["1681"],"React Hook useEffect has missing dependencies: 'abonnementEND' and 'api'. Either include them or remove the dependency array.",["1682"],"React Hook useEffect has missing dependencies: 'api', 'creenauxSallePlanningEND', 'result1', 'result2', 'result3', 'result4', 'result5', 'result6', 'result7', and 'showCreneau'. Either include them or remove the dependency array.",["1683"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getLastSelectedDay' is assigned a value but never used.","'getCochageEndDate' is assigned a value but never used.","'getSelectedDays' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'doorData' and 'doorId'. Either include them or remove the dependency array. If 'setDoorId' needs the current value of 'doorData', you can also switch to useReducer instead of useState and read 'doorData' in the reducer.",["1684"],"'createPalette' is defined but never used.","'is_default' is assigned a value but never used.","'setDefault' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'maladieData' and 'show'. Either include them or remove the dependency array. If 'setName' needs the current value of 'maladieData', you can also switch to useReducer instead of useState and read 'maladieData' in the reducer.",["1685"],"'memo' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'setName' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'numberOfDays' is assigned a value but never used.","'setNumberOfDays' is assigned a value but never used.","'seancesQuantity' is assigned a value but never used.","'setSeancesQuantity' is assigned a value but never used.","'activities' is assigned a value but never used.","'setActivities' is assigned a value but never used.","'systemeCochage' is assigned a value but never used.","'setSystemeCochage' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'abonnementsEND' and 'api'. Either include them or remove the dependency array.",["1686"],"React Hook useEffect has missing dependencies: 'abId', 'abonnementData', and 'handleShow'. Either include them or remove the dependency array. If 'abonnementData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1687"],"React Hook useEffect has a missing dependency: 'planningData'. Either include it or remove the dependency array. If 'setPlanId' needs the current value of 'planningData', you can also switch to useReducer instead of useState and read 'planningData' in the reducer.",["1688"],"'profile' is defined but never used.","'avatar' is defined but never used.","'set' is defined but never used.","'finalName' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'logoutUser' is assigned a value but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'username' is assigned a value but never used.","'SetUsername' is assigned a value but never used.","'ColorPicker_' is defined but never used.","React Hook useEffect has missing dependencies: 'activityData', 'newSalle', 'sallesActivite', and 'selectedSalle'. Either include them or remove the dependency array. If 'setName' needs the current value of 'activityData', you can also switch to useReducer instead of useState and read 'activityData' in the reducer.",["1689"],"'activity' is assigned a value but never used.","'setActivity' is assigned a value but never used.","'selectedActivities' is assigned a value but never used.","'setSelectedActivities' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'salleData' and 'show'. Either include them or remove the dependency array. If 'setName' needs the current value of 'salleData', you can also switch to useReducer instead of useState and read 'salleData' in the reducer.",["1690"],"'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'alertSuccess' is assigned a value but never used.","'setAlertSuccess' is assigned a value but never used.","'alertError' is assigned a value but never used.","'setAlertError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activitiesEND' and 'api'. Either include them or remove the dependency array.",["1691"],"'getSelectedActivities' is assigned a value but never used.","'numOfWeek' is assigned a value but never used.","'setNumOfWeek' is assigned a value but never used.","'AlertSuccess' is assigned a value but never used.","'AlertError' is assigned a value but never used.","'abonnementId' is assigned a value but never used.","'setAbonnementId' is assigned a value but never used.","'abonnementDetail' is assigned a value but never used.","'setAbonnementDetail' is assigned a value but never used.","'abnIndex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'abonnementData', 'abonnementEditEND', 'api', 'selectedActivities', and 'show'. Either include them or remove the dependency array. If 'setAbnIndex' needs the current value of 'abonnementData', you can also switch to useReducer instead of useState and read 'abonnementData' in the reducer.",["1692"],"'handleDelete' is assigned a value but never used.","'response' is assigned a value but never used.","'path' is assigned a value but never used.","'setPath' is assigned a value but never used.","'api' is assigned a value but never used.","'setNextpage' is assigned a value but never used.","'cURL' is assigned a value but never used.","'coachURL' is assigned a value but never used.","'errors' is assigned a value but never used.","'clients' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activities', 'coachs', 'creneauActivite', 'creneauCoach', 'creneauColor', 'creneauData', 'creneauName', 'creneauPlanning', 'day', 'days', 'endHour', 'name', 'plannings', 'removeColor', and 'startHour'. Either include them or remove the dependency array. You can also do a functional update 'setRemoveColor(r => ...)' if you only need 'removeColor' in the 'setRemoveColor' call.",["1693"],"React Hook useEffect has missing dependencies: 'api' and 'creneauDetailEnd'. Either include them or remove the dependency array.",["1694"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'api', 'clientStatus', 'method', 'payload', and 'url'. Either include them or remove the dependency array.",["1695"],"no-global-assign","no-unsafe-negation",[295,295]," rel=\"noreferrer\"",{"desc":"1696","fix":"1697"},{"desc":"1698","fix":"1699"},{"desc":"1700","fix":"1701"},{"desc":"1702","fix":"1703"},{"desc":"1704","fix":"1705"},{"desc":"1706","fix":"1707"},{"desc":"1708","fix":"1709"},{"desc":"1710","fix":"1711"},{"desc":"1712","fix":"1713"},{"desc":"1714","fix":"1715"},{"desc":"1712","fix":"1716"},{"desc":"1717","fix":"1718"},{"desc":"1719","fix":"1720"},{"desc":"1721","fix":"1722"},{"desc":"1723","fix":"1724"},{"desc":"1725","fix":"1726"},{"desc":"1727","fix":"1728"},{"desc":"1696","fix":"1729"},{"desc":"1730","fix":"1731"},{"desc":"1732","fix":"1733"},{"desc":"1734","fix":"1735"},{"desc":"1736","fix":"1737"},{"desc":"1736","fix":"1738"},{"desc":"1739","fix":"1740"},{"desc":"1732","fix":"1741"},{"desc":"1734","fix":"1742"},{"desc":"1732","fix":"1743"},{"desc":"1734","fix":"1744"},{"desc":"1745","fix":"1746"},{"desc":"1747","fix":"1748"},{"desc":"1749","fix":"1750"},{"desc":"1751","fix":"1752"},{"desc":"1753","fix":"1754"},{"desc":"1755","fix":"1756"},{"desc":"1757","fix":"1758"},{"desc":"1759","fix":"1760"},{"desc":"1730","fix":"1761"},{"desc":"1762","fix":"1763"},{"desc":"1764","fix":"1765"},{"desc":"1766","fix":"1767"},{"desc":"1768","fix":"1769"},{"desc":"1770","fix":"1771"},{"desc":"1772","fix":"1773"},{"desc":"1774","fix":"1775"},{"desc":"1736","fix":"1776"},{"desc":"1777","fix":"1778"},{"desc":"1779","fix":"1780"},{"desc":"1781","fix":"1782"},{"desc":"1712","fix":"1783"},{"desc":"1784","fix":"1785"},{"desc":"1786","fix":"1787"},{"desc":"1788","fix":"1789"},{"desc":"1790","fix":"1791"},{"desc":"1792","fix":"1793"},{"desc":"1794","fix":"1795"},{"desc":"1796","fix":"1797"},{"desc":"1798","fix":"1799"},{"desc":"1800","fix":"1801"},{"desc":"1796","fix":"1802"},{"desc":"1803","fix":"1804"},{"desc":"1805","fix":"1806"},{"desc":"1807","fix":"1808"},{"desc":"1809","fix":"1810"},{"desc":"1811","fix":"1812"},{"desc":"1813","fix":"1814"},{"desc":"1815","fix":"1816"},{"desc":"1817","fix":"1818"},{"desc":"1819","fix":"1820"},{"desc":"1821","fix":"1822"},{"desc":"1823","fix":"1824"},{"desc":"1825","fix":"1826"},{"desc":"1827","fix":"1828"},{"desc":"1829","fix":"1830"},{"desc":"1831","fix":"1832"},{"desc":"1833","fix":"1834"},{"desc":"1835","fix":"1836"},{"desc":"1837","fix":"1838"},{"desc":"1839","fix":"1840"},{"desc":"1841","fix":"1842"},{"desc":"1843","fix":"1844"},{"desc":"1845","fix":"1846"},{"desc":"1847","fix":"1848"},{"desc":"1849","fix":"1850"},{"desc":"1851","fix":"1852"},"Update the dependencies array to be: [api, maladiesEnd]",{"range":"1853","text":"1854"},"Update the dependencies array to be: [api, clientURI]",{"range":"1855","text":"1856"},"Update the dependencies array to be: [getmaladiesNames, gotResult, realMaladies]",{"range":"1857","text":"1858"},"Update the dependencies array to be: [api, personnelURI]",{"range":"1859","text":"1860"},"Update the dependencies array to be: [personnelURI]",{"range":"1861","text":"1862"},"Update the dependencies array to be: [api, chargesAND, clientCount, dettesAND, presencesTodayEND, transactionsTodayEND, ttcAND]",{"range":"1863","text":"1864"},"Update the dependencies array to be: [api, presencesParSalleEnd]",{"range":"1865","text":"1866"},"Update the dependencies array to be: [api, coachURI]",{"range":"1867","text":"1868"},"Update the dependencies array to be: [api, endpoint]",{"range":"1869","text":"1870"},"Update the dependencies array to be: [api, userURI]",{"range":"1871","text":"1872"},{"range":"1873","text":"1870"},"Update the dependencies array to be: [PersonnelDetailEndpoint, api]",{"range":"1874","text":"1875"},"Update the dependencies array to be: [api, props.match.params.id, transactionsEmployeEnd]",{"range":"1876","text":"1877"},"Update the dependencies array to be: [api, creneauCoachEND, props.match.params.id]",{"range":"1878","text":"1879"},"Update the dependencies array to be: [api, presencesCoachEND, props.match.params.id]",{"range":"1880","text":"1881"},"Update the dependencies array to be: [props.match.params.id, paiementModal, api, transactionClientEND, transCoach]",{"range":"1882","text":"1883"},"Update the dependencies array to be: [props.match.params.id, paiementModal, api, coachDetailEnd]",{"range":"1884","text":"1885"},{"range":"1886","text":"1854"},"Update the dependencies array to be: [activityEnd, api]",{"range":"1887","text":"1888"},"Update the dependencies array to be: [api, usersEnd]",{"range":"1889","text":"1890"},"Update the dependencies array to be: [abcId, api, endDate, searchValue, startDate, userId]",{"range":"1891","text":"1892"},"Update the dependencies array to be: [api]",{"range":"1893","text":"1894"},{"range":"1895","text":"1894"},"Update the dependencies array to be: [modal, modalCreate, salleId, planningId, api, result1, result2, result3, result4, result5, result6, result7]",{"range":"1896","text":"1897"},{"range":"1898","text":"1890"},{"range":"1899","text":"1892"},{"range":"1900","text":"1890"},{"range":"1901","text":"1892"},"Update the dependencies array to be: [api, maladieCreateModal, maladieEditModal, maladiesEnd]",{"range":"1902","text":"1903"},"Update the dependencies array to be: [activitiesEND, activityCreateModal, activityEditModal, api]",{"range":"1904","text":"1905"},"Update the dependencies array to be: [salleActiviteCreateModal, salleActivitiesEND, salleActiviteEditModal, api]",{"range":"1906","text":"1907"},"Update the dependencies array to be: [api, doorModal, doorsEnd]",{"range":"1908","text":"1909"},"Update the dependencies array to be: [planningEditModal, planningCreateModal, planningsEND, api]",{"range":"1910","text":"1911"},"Update the dependencies array to be: [getAbonnementsActitivties]",{"range":"1912","text":"1913"},"Update the dependencies array to be: [props.match.params.id, abonnementEditModal, abonnementCreateModal, api, abonnementsListEND, abonnements]",{"range":"1914","text":"1915"},"Update the dependencies array to be: [api, endpoint, savedAbonnements]",{"range":"1916","text":"1917"},{"range":"1918","text":"1888"},"Update the dependencies array to be: [api, presenceURI]",{"range":"1919","text":"1920"},"Update the dependencies array to be: [api, endpoint, nextpage, searchEndpoint, searchValue]",{"range":"1921","text":"1922"},"Update the dependencies array to be: [api, clientId, props.match.params.id]",{"range":"1923","text":"1924"},"Update the dependencies array to be: [props.match.params.id, aBCmodalCreate, abonDetailModal, api, creneauClientEND]",{"range":"1925","text":"1926"},"Update the dependencies array to be: [props.match.params.id, aBCmodalCreate, paiementModal, paiementEditModal, abonDetailModal, api, transactionClientEND, clientId]",{"range":"1927","text":"1928"},"Update the dependencies array to be: [props.match.params.id, aBCmodalCreate, abonDetailModal, paiementModal, paiementEditModal, api, clientId]",{"range":"1929","text":"1930"},"Update the dependencies array to be: [api, groupsEnd, userModal]",{"range":"1931","text":"1932"},{"range":"1933","text":"1894"},"Update the dependencies array to be: [startDate, endDate, clientId, nextpage, searchValue, client, presenceCreatedSuccess, presenceupdatedSuccess, salleId, editModal, presneceCreateModal, startHour, filterActivity, api]",{"range":"1934","text":"1935"},"Update the dependencies array to be: [startDate, endDate, nextpage, paiementModal, remunerationCoachModal, remunerationPersonnelModal, autreModal, api]",{"range":"1936","text":"1937"},"Update the dependencies array to be: [startDate, endDate, api, caBySalleEND, caByABEND, caEND]",{"range":"1938","text":"1939"},{"range":"1940","text":"1870"},"Update the dependencies array to be: [dispatch, savedSalles]",{"range":"1941","text":"1942"},"Update the dependencies array to be: [api, clientAuthoprizationEnd]",{"range":"1943","text":"1944"},"Update the dependencies array to be: [startDate, endDate, api, abcEnd]",{"range":"1945","text":"1946"},"Update the dependencies array to be: [api, paiementsEnd, show]",{"range":"1947","text":"1948"},"Update the dependencies array to be: [api, endDate, presencesEnd]",{"range":"1949","text":"1950"},"Update the dependencies array to be: [show, renouvler, clientData]",{"range":"1951","text":"1952"},"Update the dependencies array to be: [api, creneauPerAbonnementEND, result1, result2, result3, result4, result5, result6, result7, type]",{"range":"1953","text":"1954"},"Update the dependencies array to be: [abonnements, paiementData, show]",{"range":"1955","text":"1956"},"Update the dependencies array to be: [show, renouvler, abonnementData, api, abcDetailEND, abc]",{"range":"1957","text":"1958"},{"range":"1959","text":"1954"},"Update the dependencies array to be: [api, coachsEnd]",{"range":"1960","text":"1961"},"Update the dependencies array to be: [api, personnelEnd]",{"range":"1962","text":"1963"},"Update the dependencies array to be: [api, clientsEnd]",{"range":"1964","text":"1965"},"Update the dependencies array to be: [api, clientId, show]",{"range":"1966","text":"1967"},"Update the dependencies array to be: [api, client]",{"range":"1968","text":"1969"},"Update the dependencies array to be: [api, planningsEnd, show]",{"range":"1970","text":"1971"},"Update the dependencies array to be: [api, clientsEND, show]",{"range":"1972","text":"1973"},"Update the dependencies array to be: [api, sallesEnd, show]",{"range":"1974","text":"1975"},"Update the dependencies array to be: [api, client, creneauClientEND, result1, result2, result3, result4, result5, result6, result7, selectedAbonnement]",{"range":"1976","text":"1977"},"Update the dependencies array to be: [hourIn, hourOut, note, notes, presenceData, show]",{"range":"1978","text":"1979"},"Update the dependencies array to be: [api, planningEND]",{"range":"1980","text":"1981"},"Update the dependencies array to be: [abonnementEND, api, show]",{"range":"1982","text":"1983"},"Update the dependencies array to be: [selectAbonnement, planningId, showCreneau, api, creenauxSallePlanningEND, result1, result2, result3, result4, result5, result6, result7]",{"range":"1984","text":"1985"},"Update the dependencies array to be: [doorData, doorId, show]",{"range":"1986","text":"1987"},"Update the dependencies array to be: [maladieData, show]",{"range":"1988","text":"1989"},"Update the dependencies array to be: [abonnementsEND, api, show]",{"range":"1990","text":"1991"},"Update the dependencies array to be: [abId, abonnementData, acti, handleShow]",{"range":"1992","text":"1993"},"Update the dependencies array to be: [planningData, show]",{"range":"1994","text":"1995"},"Update the dependencies array to be: [activityData, newSalle, sallesActivite, selectedSalle]",{"range":"1996","text":"1997"},"Update the dependencies array to be: [salleData, show]",{"range":"1998","text":"1999"},"Update the dependencies array to be: [activitiesEND, api]",{"range":"2000","text":"2001"},"Update the dependencies array to be: [abonnementData, abonnementEditEND, api, selectedActivities, show]",{"range":"2002","text":"2003"},"Update the dependencies array to be: [activities, coachs, creneauActivite, creneauCoach, creneauColor, creneauData, creneauName, creneauPlanning, day, days, endHour, name, plannings, removeColor, startHour]",{"range":"2004","text":"2005"},"Update the dependencies array to be: [api, creneauDetailEnd]",{"range":"2006","text":"2007"},"Update the dependencies array to be: [api, clientStatus, method, payload, url]",{"range":"2008","text":"2009"},[2369,2371],"[api, maladiesEnd]",[3651,3653],"[api, clientURI]",[3771,3782],"[getmaladiesNames, gotResult, realMaladies]",[749,751],"[api, personnelURI]",[2050,2052],"[personnelURI]",[3311,3313],"[api, chargesAND, clientCount, dettesAND, presencesTodayEND, transactionsTodayEND, ttcAND]",[3498,3500],"[api, presencesParSalleEnd]",[1539,1541],"[api, coachURI]",[2256,2258],"[api, endpoint]",[8904,8906],"[api, userURI]",[2424,2434],[1195,1197],"[PersonnelDetailEndpoint, api]",[1648,1671],"[api, props.match.params.id, transactionsEmployeEnd]",[3775,3798],"[api, creneauCoachEND, props.match.params.id]",[3982,4005],"[api, presencesCoachEND, props.match.params.id]",[4420,4458],"[props.match.params.id, paiementModal, api, transactionClientEND, transCoach]",[5422,5460],"[props.match.params.id, paiementModal, api, coachDetailEnd]",[1657,1659],[966,968],"[activityEnd, api]",[3008,3010],"[api, usersEnd]",[3298,3346],"[abcId, api, endDate, searchValue, startDate, userId]",[1735,1737],"[api]",[4218,4220],[5380,5420],"[modal, modalCreate, salleId, planningId, api, result1, result2, result3, result4, result5, result6, result7]",[2861,2863],[3236,3284],[2911,2913],[3197,3245],[5096,5147],"[api, maladieCreateModal, maladieEditModal, maladiesEnd]",[5277,5332],"[activitiesEND, activityCreateModal, activityEditModal, api]",[5474,5544],"[salleActiviteCreateModal, salleActivitiesEND, salleActiviteEditModal, api]",[5664,5675],"[api, doorModal, doorsEnd]",[6207,6261],"[planningEditModal, planningCreateModal, planningsEND, api]",[8687,8708],"[getAbonnementsActitivties]",[9354,9421],"[props.match.params.id, abonnementEditModal, abonnementCreateModal, api, abonnementsListEND, abonnements]",[1809,1811],"[api, endpoint, savedAbonnements]",[1299,1301],[1764,1766],"[api, presenceURI]",[1861,1884],"[api, endpoint, nextpage, searchEndpoint, searchValue]",[7001,7024],"[api, clientId, props.match.params.id]",[7303,7359],"[props.match.params.id, aBCmodalCreate, abonDetailModal, api, creneauClientEND]",[7827,7919],"[props.match.params.id, aBCmodalCreate, paiementModal, paiementEditModal, abonDetailModal, api, transactionClientEND, clientId]",[8306,8396],"[props.match.params.id, aBCmodalCreate, abonDetailModal, paiementModal, paiementEditModal, api, clientId]",[1626,1637],"[api, groupsEnd, userModal]",[3889,3891],[5638,5814],"[startDate, endDate, clientId, nextpage, searchValue, client, presenceCreatedSuccess, presenceupdatedSuccess, salleId, editModal, presneceCreateModal, startHour, filterActivity, api]",[5046,5150],"[startDate, endDate, nextpage, paiementModal, remunerationCoachModal, remunerationPersonnelModal, autreModal, api]",[1881,1901],"[startDate, endDate, api, caBySalleEND, caByABEND, caEND]",[726,728],[810,823],"[dispatch, savedSalles]",[2756,2781],"[api, clientAuthoprizationEnd]",[1271,1312],"[startDate, endDate, api, abcEnd]",[1083,1116],"[api, paiementsEnd, show]",[1986,2022],"[api, endDate, presencesEnd]",[2785,2802],"[show, renouvler, clientData]",[4042,4048],"[api, creneauPerAbonnementEND, result1, result2, result3, result4, result5, result6, result7, type]",[2726,2764],"[abonnements, paiementData, show]",[3540,3557],"[show, renouvler, abonnementData, api, abcDetailEND, abc]",[4797,4803],[1252,1254],"[api, coachsEnd]",[1080,1082],"[api, personnelEnd]",[1870,1872],"[api, clientsEnd]",[2365,2375],"[api, clientId, show]",[4296,4304],"[api, client]",[4628,4634],"[api, planningsEnd, show]",[4941,4947],"[api, clientsEND, show]",[5649,5655],"[api, sallesEnd, show]",[6887,6915],"[api, client, creneauClientEND, result1, result2, result3, result4, result5, result6, result7, selectedAbonnement]",[1768,1796],"[hourIn, hourOut, note, notes, presenceData, show]",[2894,2896],"[api, planningEND]",[3251,3257],"[abonnementEND, api, show]",[4343,4373],"[selectAbonnement, planningId, showCreneau, api, creenauxSallePlanningEND, result1, result2, result3, result4, result5, result6, result7]",[1364,1390],"[doorData, doorId, show]",[1201,1227],"[maladieData, show]",[2038,2044],"[abonnementsEND, api, show]",[2303,2309],"[abId, abonnementData, acti, handleShow]",[1734,1740],"[planningData, show]",[1534,1563],"[activityData, newSalle, sallesActivite, selectedSalle]",[1662,1684],"[salleData, show]",[2305,2307],"[activitiesEND, api]",[3693,3725],"[abonnementData, abonnementEditEND, api, selectedActivities, show]",[3910,3936],"[activities, coachs, creneauActivite, creneauCoach, creneauColor, creneauData, creneauName, creneauPlanning, day, days, endHour, name, plannings, removeColor, startHour]",[4134,4160],"[api, creneauDetailEnd]",[2496,2498],"[api, clientStatus, method, payload, url]"]